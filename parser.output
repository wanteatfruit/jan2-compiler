Terminals unused in grammar

   TOKEN_WHILE
   TOKEN_AUTO
   TOKEN_BACKSLASH
   TOKEN_ERROR


Grammar

    0 $accept: program $end

    1 program: stmt_list TOKEN_EOF

    2 stmt_list: stmt stmt_list
    3          | stmt

    4 stmt: decl
    5     | expr TOKEN_SEMICOLON
    6     | TOKEN_PRINT print_list TOKEN_SEMICOLON
    7     | TOKEN_RETURN expr TOKEN_SEMICOLON
    8     | TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
    9     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   10     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   11     | TOKEN_L_BRACE stmt_list TOKEN_R_BRACE
   12     | TOKEN_C_COMMENT
   13     | TOKEN_CPP_COMMENT

   14 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest
   15        | decl TOKEN_SEMICOLON
   16        | expr TOKEN_SEMICOLON
   17        | TOKEN_L_BRACE stmt_list TOKEN_R_BRACE
   18        | TOKEN_PRINT print_list TOKEN_SEMICOLON
   19        | TOKEN_RETURN expr TOKEN_SEMICOLON
   20        | TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest
   21        | TOKEN_C_COMMENT
   22        | TOKEN_CPP_COMMENT

   23 decl: id TOKEN_COLON type TOKEN_SEMICOLON
   24     | id TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   25     | id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace TOKEN_R_BRACE TOKEN_SEMICOLON
   26     | id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

   27 brace: expr TOKEN_COMMA brace
   28      | expr
   29      | %empty

   30 param_list: param TOKEN_COMMA param_list
   31           | param
   32           | %empty

   33 param: id TOKEN_COLON type

   34 arg_list: expr TOKEN_COMMA arg_list
   35         | expr
   36         | %empty

   37 print_list: expr TOKEN_COMMA print_list
   38           | expr
   39           | %empty

   40 for_expr: expr
   41         | %empty

   42 type: TOKEN_INTEGER
   43     | TOKEN_FLOAT
   44     | TOKEN_BOOLEAN
   45     | TOKEN_CHARACTER
   46     | TOKEN_STRING
   47     | TOKEN_VOID
   48     | TOKEN_ARRAY TOKEN_L_BRACKET TOKEN_R_BRACKET type
   49     | TOKEN_ARRAY TOKEN_L_BRACKET expr TOKEN_R_BRACKET type
   50     | TOKEN_FUNCTION type TOKEN_L_PAREN param_list TOKEN_R_PAREN

   51 id: TOKEN_IDENTIFIER

   52 expr: id TOKEN_ASSIGN expr
   53     | expr_or

   54 expr_or: expr_and TOKEN_OR expr_or
   55        | expr_and

   56 expr_and: expr_comp TOKEN_AND expr_and
   57         | expr_comp

   58 expr_comp: expr_add TOKEN_EQUAL expr_comp
   59          | expr_add TOKEN_LESS expr_comp
   60          | expr_add TOKEN_NEQUAL expr_comp
   61          | expr_add TOKEN_LE expr_comp
   62          | expr_add TOKEN_GE expr_comp
   63          | expr_add TOKEN_GREATER expr_comp
   64          | expr_add

   65 expr_add: expr_mul TOKEN_ADD expr_add
   66         | expr_mul TOKEN_SUB expr_add
   67         | expr_mul

   68 expr_mul: expr_exp TOKEN_MUL expr_mul
   69         | expr_exp TOKEN_DIV expr_mul
   70         | expr_exp TOKEN_MOD expr_mul
   71         | expr_exp

   72 expr_exp: expr_unary TOKEN_EXP expr_exp
   73         | expr_unary

   74 expr_unary: TOKEN_NEG expr_unary
   75           | TOKEN_NOT expr_unary
   76           | exp_post

   77 exp_post: factor TOKEN_POSTINC
   78         | factor TOKEN_POSTDEC
   79         | factor

   80 factor: TOKEN_L_PAREN expr TOKEN_R_PAREN
   81       | factor TOKEN_L_BRACKET expr TOKEN_R_BRACKET
   82       | literal
   83       | id
   84       | id TOKEN_L_PAREN arg_list TOKEN_R_PAREN

   85 literal: TOKEN_INTEGER_LITERAL
   86        | TOKEN_FLOAT_LITERAL
   87        | TOKEN_CHARACTER_LITERAL
   88        | TOKEN_STRING_LITERAL
   89        | TOKEN_TRUE
   90        | TOKEN_FALSE


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_ARRAY (258) 48 49
TOKEN_BOOLEAN (259) 44
TOKEN_CHARACTER (260) 45
TOKEN_FLOAT (261) 43
TOKEN_FUNCTION (262) 50
TOKEN_INTEGER (263) 42
TOKEN_STRING (264) 46
TOKEN_VOID (265) 47
TOKEN_INTEGER_LITERAL (266) 85
TOKEN_CHARACTER_LITERAL (267) 87
TOKEN_STRING_LITERAL (268) 88
TOKEN_FLOAT_LITERAL (269) 86
TOKEN_ELSE (270) 10 14
TOKEN_FALSE (271) 90
TOKEN_FOR (272) 8 20
TOKEN_IF (273) 9 10 14
TOKEN_PRINT (274) 6 18
TOKEN_RETURN (275) 7 19
TOKEN_TRUE (276) 89
TOKEN_WHILE (277)
TOKEN_AUTO (278)
TOKEN_IDENTIFIER (279) 51
TOKEN_L_PAREN (280) 8 9 10 14 20 50 80 84
TOKEN_R_PAREN (281) 8 9 10 14 20 50 80 84
TOKEN_L_BRACKET (282) 48 49 81
TOKEN_R_BRACKET (283) 48 49 81
TOKEN_L_BRACE (284) 11 17 25 26
TOKEN_R_BRACE (285) 11 17 25 26
TOKEN_POSTINC (286) 77
TOKEN_POSTDEC (287) 78
TOKEN_NEG (288) 74
TOKEN_NOT (289) 75
TOKEN_EXP (290) 72
TOKEN_MUL (291) 68
TOKEN_DIV (292) 69
TOKEN_MOD (293) 70
TOKEN_ADD (294) 65
TOKEN_SUB (295) 66
TOKEN_LESS (296) 59
TOKEN_LE (297) 61
TOKEN_GE (298) 62
TOKEN_GREATER (299) 63
TOKEN_EQUAL (300) 58
TOKEN_NEQUAL (301) 60
TOKEN_AND (302) 56
TOKEN_OR (303) 54
TOKEN_ASSIGN (304) 24 25 26 52
TOKEN_SEMICOLON (305) 5 6 7 8 15 16 18 19 20 23 24 25
TOKEN_COLON (306) 23 24 25 26 33
TOKEN_COMMA (307) 27 30 34 37
TOKEN_BACKSLASH (308)
TOKEN_C_COMMENT (309) 12 21
TOKEN_CPP_COMMENT (310) 13 22
TOKEN_ERROR (311)
TOKEN_EOF (312) 1


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
program (59)
    on left: 1, on right: 0
stmt_list (60)
    on left: 2 3, on right: 1 2 11 17 26
stmt (61)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 3 8 9 10
if_nest (62)
    on left: 14 15 16 17 18 19 20 21 22, on right: 10 14 20
decl (63)
    on left: 23 24 25 26, on right: 4 15
brace (64)
    on left: 27 28 29, on right: 25 27
param_list (65)
    on left: 30 31 32, on right: 30 50
param (66)
    on left: 33, on right: 30 31
arg_list (67)
    on left: 34 35 36, on right: 34 84
print_list (68)
    on left: 37 38 39, on right: 6 18 37
for_expr (69)
    on left: 40 41, on right: 8 20
type (70)
    on left: 42 43 44 45 46 47 48 49 50, on right: 23 24 25 26 33 48
    49 50
id (71)
    on left: 51, on right: 23 24 25 26 33 52 83 84
expr (72)
    on left: 52 53, on right: 5 7 9 10 14 16 19 24 27 28 34 35 37 38
    40 49 52 80 81
expr_or (73)
    on left: 54 55, on right: 53 54
expr_and (74)
    on left: 56 57, on right: 54 55 56
expr_comp (75)
    on left: 58 59 60 61 62 63 64, on right: 56 57 58 59 60 61 62 63
expr_add (76)
    on left: 65 66 67, on right: 58 59 60 61 62 63 64 65 66
expr_mul (77)
    on left: 68 69 70 71, on right: 65 66 67 68 69 70
expr_exp (78)
    on left: 72 73, on right: 68 69 70 71 72
expr_unary (79)
    on left: 74 75 76, on right: 72 73 74 75
exp_post (80)
    on left: 77 78 79, on right: 76
factor (81)
    on left: 80 81 82 83 84, on right: 77 78 79 81
literal (82)
    on left: 85 86 87 88 89 90, on right: 82


State 0

    0 $accept: . program $end

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15
    TOKEN_C_COMMENT          shift, and go to state 16
    TOKEN_CPP_COMMENT        shift, and go to state 17

    program     go to state 18
    stmt_list   go to state 19
    stmt        go to state 20
    decl        go to state 21
    id          go to state 22
    expr        go to state 23
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 1

   85 literal: TOKEN_INTEGER_LITERAL .

    $default  reduce using rule 85 (literal)


State 2

   87 literal: TOKEN_CHARACTER_LITERAL .

    $default  reduce using rule 87 (literal)


State 3

   88 literal: TOKEN_STRING_LITERAL .

    $default  reduce using rule 88 (literal)


State 4

   86 literal: TOKEN_FLOAT_LITERAL .

    $default  reduce using rule 86 (literal)


State 5

   90 literal: TOKEN_FALSE .

    $default  reduce using rule 90 (literal)


State 6

    8 stmt: TOKEN_FOR . TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_L_PAREN  shift, and go to state 34


State 7

    9 stmt: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   10     | TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt

    TOKEN_L_PAREN  shift, and go to state 35


State 8

    6 stmt: TOKEN_PRINT . print_list TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 39 (print_list)

    print_list  go to state 36
    id          go to state 37
    expr        go to state 38
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 9

    7 stmt: TOKEN_RETURN . expr TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 37
    expr        go to state 39
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 10

   89 literal: TOKEN_TRUE .

    $default  reduce using rule 89 (literal)


State 11

   51 id: TOKEN_IDENTIFIER .

    $default  reduce using rule 51 (id)


State 12

   80 factor: TOKEN_L_PAREN . expr TOKEN_R_PAREN

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 37
    expr        go to state 40
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 13

   11 stmt: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15
    TOKEN_C_COMMENT          shift, and go to state 16
    TOKEN_CPP_COMMENT        shift, and go to state 17

    stmt_list   go to state 41
    stmt        go to state 20
    decl        go to state 21
    id          go to state 22
    expr        go to state 23
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 14

   74 expr_unary: TOKEN_NEG . expr_unary

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 42
    expr_unary  go to state 43
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 15

   75 expr_unary: TOKEN_NOT . expr_unary

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 42
    expr_unary  go to state 44
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 16

   12 stmt: TOKEN_C_COMMENT .

    $default  reduce using rule 12 (stmt)


State 17

   13 stmt: TOKEN_CPP_COMMENT .

    $default  reduce using rule 13 (stmt)


State 18

    0 $accept: program . $end

    $end  shift, and go to state 45


State 19

    1 program: stmt_list . TOKEN_EOF

    TOKEN_EOF  shift, and go to state 46


State 20

    2 stmt_list: stmt . stmt_list
    3          | stmt .

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15
    TOKEN_C_COMMENT          shift, and go to state 16
    TOKEN_CPP_COMMENT        shift, and go to state 17

    $default  reduce using rule 3 (stmt_list)

    stmt_list   go to state 47
    stmt        go to state 20
    decl        go to state 21
    id          go to state 22
    expr        go to state 23
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 21

    4 stmt: decl .

    $default  reduce using rule 4 (stmt)


State 22

   23 decl: id . TOKEN_COLON type TOKEN_SEMICOLON
   24     | id . TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   25     | id . TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace TOKEN_R_BRACE TOKEN_SEMICOLON
   26     | id . TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE
   52 expr: id . TOKEN_ASSIGN expr
   83 factor: id .
   84       | id . TOKEN_L_PAREN arg_list TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 48
    TOKEN_ASSIGN   shift, and go to state 49
    TOKEN_COLON    shift, and go to state 50

    $default  reduce using rule 83 (factor)


State 23

    5 stmt: expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 51


State 24

   53 expr: expr_or .

    $default  reduce using rule 53 (expr)


State 25

   54 expr_or: expr_and . TOKEN_OR expr_or
   55        | expr_and .

    TOKEN_OR  shift, and go to state 52

    $default  reduce using rule 55 (expr_or)


State 26

   56 expr_and: expr_comp . TOKEN_AND expr_and
   57         | expr_comp .

    TOKEN_AND  shift, and go to state 53

    $default  reduce using rule 57 (expr_and)


State 27

   58 expr_comp: expr_add . TOKEN_EQUAL expr_comp
   59          | expr_add . TOKEN_LESS expr_comp
   60          | expr_add . TOKEN_NEQUAL expr_comp
   61          | expr_add . TOKEN_LE expr_comp
   62          | expr_add . TOKEN_GE expr_comp
   63          | expr_add . TOKEN_GREATER expr_comp
   64          | expr_add .

    TOKEN_LESS     shift, and go to state 54
    TOKEN_LE       shift, and go to state 55
    TOKEN_GE       shift, and go to state 56
    TOKEN_GREATER  shift, and go to state 57
    TOKEN_EQUAL    shift, and go to state 58
    TOKEN_NEQUAL   shift, and go to state 59

    $default  reduce using rule 64 (expr_comp)


State 28

   65 expr_add: expr_mul . TOKEN_ADD expr_add
   66         | expr_mul . TOKEN_SUB expr_add
   67         | expr_mul .

    TOKEN_ADD  shift, and go to state 60
    TOKEN_SUB  shift, and go to state 61

    $default  reduce using rule 67 (expr_add)


State 29

   68 expr_mul: expr_exp . TOKEN_MUL expr_mul
   69         | expr_exp . TOKEN_DIV expr_mul
   70         | expr_exp . TOKEN_MOD expr_mul
   71         | expr_exp .

    TOKEN_MUL  shift, and go to state 62
    TOKEN_DIV  shift, and go to state 63
    TOKEN_MOD  shift, and go to state 64

    $default  reduce using rule 71 (expr_mul)


State 30

   72 expr_exp: expr_unary . TOKEN_EXP expr_exp
   73         | expr_unary .

    TOKEN_EXP  shift, and go to state 65

    $default  reduce using rule 73 (expr_exp)


State 31

   76 expr_unary: exp_post .

    $default  reduce using rule 76 (expr_unary)


State 32

   77 exp_post: factor . TOKEN_POSTINC
   78         | factor . TOKEN_POSTDEC
   79         | factor .
   81 factor: factor . TOKEN_L_BRACKET expr TOKEN_R_BRACKET

    TOKEN_L_BRACKET  shift, and go to state 66
    TOKEN_POSTINC    shift, and go to state 67
    TOKEN_POSTDEC    shift, and go to state 68

    $default  reduce using rule 79 (exp_post)


State 33

   82 factor: literal .

    $default  reduce using rule 82 (factor)


State 34

    8 stmt: TOKEN_FOR TOKEN_L_PAREN . for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 41 (for_expr)

    for_expr    go to state 69
    id          go to state 37
    expr        go to state 70
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 35

    9 stmt: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN stmt
   10     | TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 37
    expr        go to state 71
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 36

    6 stmt: TOKEN_PRINT print_list . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 72


State 37

   52 expr: id . TOKEN_ASSIGN expr
   83 factor: id .
   84       | id . TOKEN_L_PAREN arg_list TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 48
    TOKEN_ASSIGN   shift, and go to state 49

    $default  reduce using rule 83 (factor)


State 38

   37 print_list: expr . TOKEN_COMMA print_list
   38           | expr .

    TOKEN_COMMA  shift, and go to state 73

    $default  reduce using rule 38 (print_list)


State 39

    7 stmt: TOKEN_RETURN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 74


State 40

   80 factor: TOKEN_L_PAREN expr . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 75


State 41

   11 stmt: TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 76


State 42

   83 factor: id .
   84       | id . TOKEN_L_PAREN arg_list TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 48

    $default  reduce using rule 83 (factor)


State 43

   74 expr_unary: TOKEN_NEG expr_unary .

    $default  reduce using rule 74 (expr_unary)


State 44

   75 expr_unary: TOKEN_NOT expr_unary .

    $default  reduce using rule 75 (expr_unary)


State 45

    0 $accept: program $end .

    $default  accept


State 46

    1 program: stmt_list TOKEN_EOF .

    $default  reduce using rule 1 (program)


State 47

    2 stmt_list: stmt stmt_list .

    $default  reduce using rule 2 (stmt_list)


State 48

   84 factor: id TOKEN_L_PAREN . arg_list TOKEN_R_PAREN

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 36 (arg_list)

    arg_list    go to state 77
    id          go to state 37
    expr        go to state 78
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 49

   52 expr: id TOKEN_ASSIGN . expr

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 37
    expr        go to state 79
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 50

   23 decl: id TOKEN_COLON . type TOKEN_SEMICOLON
   24     | id TOKEN_COLON . type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   25     | id TOKEN_COLON . type TOKEN_ASSIGN TOKEN_L_BRACE brace TOKEN_R_BRACE TOKEN_SEMICOLON
   26     | id TOKEN_COLON . type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

    TOKEN_ARRAY      shift, and go to state 80
    TOKEN_BOOLEAN    shift, and go to state 81
    TOKEN_CHARACTER  shift, and go to state 82
    TOKEN_FLOAT      shift, and go to state 83
    TOKEN_FUNCTION   shift, and go to state 84
    TOKEN_INTEGER    shift, and go to state 85
    TOKEN_STRING     shift, and go to state 86
    TOKEN_VOID       shift, and go to state 87

    type  go to state 88


State 51

    5 stmt: expr TOKEN_SEMICOLON .

    $default  reduce using rule 5 (stmt)


State 52

   54 expr_or: expr_and TOKEN_OR . expr_or

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 42
    expr_or     go to state 89
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 53

   56 expr_and: expr_comp TOKEN_AND . expr_and

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 42
    expr_and    go to state 90
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 54

   59 expr_comp: expr_add TOKEN_LESS . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 42
    expr_comp   go to state 91
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 55

   61 expr_comp: expr_add TOKEN_LE . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 42
    expr_comp   go to state 92
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 56

   62 expr_comp: expr_add TOKEN_GE . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 42
    expr_comp   go to state 93
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 57

   63 expr_comp: expr_add TOKEN_GREATER . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 42
    expr_comp   go to state 94
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 58

   58 expr_comp: expr_add TOKEN_EQUAL . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 42
    expr_comp   go to state 95
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 59

   60 expr_comp: expr_add TOKEN_NEQUAL . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 42
    expr_comp   go to state 96
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 60

   65 expr_add: expr_mul TOKEN_ADD . expr_add

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 42
    expr_add    go to state 97
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 61

   66 expr_add: expr_mul TOKEN_SUB . expr_add

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 42
    expr_add    go to state 98
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 62

   68 expr_mul: expr_exp TOKEN_MUL . expr_mul

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 42
    expr_mul    go to state 99
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 63

   69 expr_mul: expr_exp TOKEN_DIV . expr_mul

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 42
    expr_mul    go to state 100
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 64

   70 expr_mul: expr_exp TOKEN_MOD . expr_mul

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 42
    expr_mul    go to state 101
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 65

   72 expr_exp: expr_unary TOKEN_EXP . expr_exp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 42
    expr_exp    go to state 102
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 66

   81 factor: factor TOKEN_L_BRACKET . expr TOKEN_R_BRACKET

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 37
    expr        go to state 103
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 67

   77 exp_post: factor TOKEN_POSTINC .

    $default  reduce using rule 77 (exp_post)


State 68

   78 exp_post: factor TOKEN_POSTDEC .

    $default  reduce using rule 78 (exp_post)


State 69

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr . TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_SEMICOLON  shift, and go to state 104


State 70

   40 for_expr: expr .

    $default  reduce using rule 40 (for_expr)


State 71

    9 stmt: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN stmt
   10     | TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN if_nest TOKEN_ELSE stmt

    TOKEN_R_PAREN  shift, and go to state 105


State 72

    6 stmt: TOKEN_PRINT print_list TOKEN_SEMICOLON .

    $default  reduce using rule 6 (stmt)


State 73

   37 print_list: expr TOKEN_COMMA . print_list

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 39 (print_list)

    print_list  go to state 106
    id          go to state 37
    expr        go to state 38
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 74

    7 stmt: TOKEN_RETURN expr TOKEN_SEMICOLON .

    $default  reduce using rule 7 (stmt)


State 75

   80 factor: TOKEN_L_PAREN expr TOKEN_R_PAREN .

    $default  reduce using rule 80 (factor)


State 76

   11 stmt: TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .

    $default  reduce using rule 11 (stmt)


State 77

   84 factor: id TOKEN_L_PAREN arg_list . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 107


State 78

   34 arg_list: expr . TOKEN_COMMA arg_list
   35         | expr .

    TOKEN_COMMA  shift, and go to state 108

    $default  reduce using rule 35 (arg_list)


State 79

   52 expr: id TOKEN_ASSIGN expr .

    $default  reduce using rule 52 (expr)


State 80

   48 type: TOKEN_ARRAY . TOKEN_L_BRACKET TOKEN_R_BRACKET type
   49     | TOKEN_ARRAY . TOKEN_L_BRACKET expr TOKEN_R_BRACKET type

    TOKEN_L_BRACKET  shift, and go to state 109


State 81

   44 type: TOKEN_BOOLEAN .

    $default  reduce using rule 44 (type)


State 82

   45 type: TOKEN_CHARACTER .

    $default  reduce using rule 45 (type)


State 83

   43 type: TOKEN_FLOAT .

    $default  reduce using rule 43 (type)


State 84

   50 type: TOKEN_FUNCTION . type TOKEN_L_PAREN param_list TOKEN_R_PAREN

    TOKEN_ARRAY      shift, and go to state 80
    TOKEN_BOOLEAN    shift, and go to state 81
    TOKEN_CHARACTER  shift, and go to state 82
    TOKEN_FLOAT      shift, and go to state 83
    TOKEN_FUNCTION   shift, and go to state 84
    TOKEN_INTEGER    shift, and go to state 85
    TOKEN_STRING     shift, and go to state 86
    TOKEN_VOID       shift, and go to state 87

    type  go to state 110


State 85

   42 type: TOKEN_INTEGER .

    $default  reduce using rule 42 (type)


State 86

   46 type: TOKEN_STRING .

    $default  reduce using rule 46 (type)


State 87

   47 type: TOKEN_VOID .

    $default  reduce using rule 47 (type)


State 88

   23 decl: id TOKEN_COLON type . TOKEN_SEMICOLON
   24     | id TOKEN_COLON type . TOKEN_ASSIGN expr TOKEN_SEMICOLON
   25     | id TOKEN_COLON type . TOKEN_ASSIGN TOKEN_L_BRACE brace TOKEN_R_BRACE TOKEN_SEMICOLON
   26     | id TOKEN_COLON type . TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

    TOKEN_ASSIGN     shift, and go to state 111
    TOKEN_SEMICOLON  shift, and go to state 112


State 89

   54 expr_or: expr_and TOKEN_OR expr_or .

    $default  reduce using rule 54 (expr_or)


State 90

   56 expr_and: expr_comp TOKEN_AND expr_and .

    $default  reduce using rule 56 (expr_and)


State 91

   59 expr_comp: expr_add TOKEN_LESS expr_comp .

    $default  reduce using rule 59 (expr_comp)


State 92

   61 expr_comp: expr_add TOKEN_LE expr_comp .

    $default  reduce using rule 61 (expr_comp)


State 93

   62 expr_comp: expr_add TOKEN_GE expr_comp .

    $default  reduce using rule 62 (expr_comp)


State 94

   63 expr_comp: expr_add TOKEN_GREATER expr_comp .

    $default  reduce using rule 63 (expr_comp)


State 95

   58 expr_comp: expr_add TOKEN_EQUAL expr_comp .

    $default  reduce using rule 58 (expr_comp)


State 96

   60 expr_comp: expr_add TOKEN_NEQUAL expr_comp .

    $default  reduce using rule 60 (expr_comp)


State 97

   65 expr_add: expr_mul TOKEN_ADD expr_add .

    $default  reduce using rule 65 (expr_add)


State 98

   66 expr_add: expr_mul TOKEN_SUB expr_add .

    $default  reduce using rule 66 (expr_add)


State 99

   68 expr_mul: expr_exp TOKEN_MUL expr_mul .

    $default  reduce using rule 68 (expr_mul)


State 100

   69 expr_mul: expr_exp TOKEN_DIV expr_mul .

    $default  reduce using rule 69 (expr_mul)


State 101

   70 expr_mul: expr_exp TOKEN_MOD expr_mul .

    $default  reduce using rule 70 (expr_mul)


State 102

   72 expr_exp: expr_unary TOKEN_EXP expr_exp .

    $default  reduce using rule 72 (expr_exp)


State 103

   81 factor: factor TOKEN_L_BRACKET expr . TOKEN_R_BRACKET

    TOKEN_R_BRACKET  shift, and go to state 113


State 104

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON . for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 41 (for_expr)

    for_expr    go to state 114
    id          go to state 37
    expr        go to state 70
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 105

    9 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . stmt
   10     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . if_nest TOKEN_ELSE stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 115
    TOKEN_IF                 shift, and go to state 116
    TOKEN_PRINT              shift, and go to state 117
    TOKEN_RETURN             shift, and go to state 118
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 119
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15
    TOKEN_C_COMMENT          shift, and go to state 120
    TOKEN_CPP_COMMENT        shift, and go to state 121

    stmt        go to state 122
    if_nest     go to state 123
    decl        go to state 124
    id          go to state 22
    expr        go to state 125
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 106

   37 print_list: expr TOKEN_COMMA print_list .

    $default  reduce using rule 37 (print_list)


State 107

   84 factor: id TOKEN_L_PAREN arg_list TOKEN_R_PAREN .

    $default  reduce using rule 84 (factor)


State 108

   34 arg_list: expr TOKEN_COMMA . arg_list

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 36 (arg_list)

    arg_list    go to state 126
    id          go to state 37
    expr        go to state 78
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 109

   48 type: TOKEN_ARRAY TOKEN_L_BRACKET . TOKEN_R_BRACKET type
   49     | TOKEN_ARRAY TOKEN_L_BRACKET . expr TOKEN_R_BRACKET type

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_R_BRACKET          shift, and go to state 127
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 37
    expr        go to state 128
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 110

   50 type: TOKEN_FUNCTION type . TOKEN_L_PAREN param_list TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 129


State 111

   24 decl: id TOKEN_COLON type TOKEN_ASSIGN . expr TOKEN_SEMICOLON
   25     | id TOKEN_COLON type TOKEN_ASSIGN . TOKEN_L_BRACE brace TOKEN_R_BRACE TOKEN_SEMICOLON
   26     | id TOKEN_COLON type TOKEN_ASSIGN . TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 130
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 37
    expr        go to state 131
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 112

   23 decl: id TOKEN_COLON type TOKEN_SEMICOLON .

    $default  reduce using rule 23 (decl)


State 113

   81 factor: factor TOKEN_L_BRACKET expr TOKEN_R_BRACKET .

    $default  reduce using rule 81 (factor)


State 114

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr . TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_SEMICOLON  shift, and go to state 132


State 115

    8 stmt: TOKEN_FOR . TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   20 if_nest: TOKEN_FOR . TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_L_PAREN  shift, and go to state 133


State 116

    9 stmt: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   10     | TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   14 if_nest: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest

    TOKEN_L_PAREN  shift, and go to state 134


State 117

    6 stmt: TOKEN_PRINT . print_list TOKEN_SEMICOLON
   18 if_nest: TOKEN_PRINT . print_list TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 39 (print_list)

    print_list  go to state 135
    id          go to state 37
    expr        go to state 38
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 118

    7 stmt: TOKEN_RETURN . expr TOKEN_SEMICOLON
   19 if_nest: TOKEN_RETURN . expr TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 37
    expr        go to state 136
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 119

   11 stmt: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE
   17 if_nest: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15
    TOKEN_C_COMMENT          shift, and go to state 16
    TOKEN_CPP_COMMENT        shift, and go to state 17

    stmt_list   go to state 137
    stmt        go to state 20
    decl        go to state 21
    id          go to state 22
    expr        go to state 23
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 120

   12 stmt: TOKEN_C_COMMENT .
   21 if_nest: TOKEN_C_COMMENT .

    TOKEN_ELSE  reduce using rule 21 (if_nest)
    $default    reduce using rule 12 (stmt)


State 121

   13 stmt: TOKEN_CPP_COMMENT .
   22 if_nest: TOKEN_CPP_COMMENT .

    TOKEN_ELSE  reduce using rule 22 (if_nest)
    $default    reduce using rule 13 (stmt)


State 122

    9 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN stmt .

    $default  reduce using rule 9 (stmt)


State 123

   10 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest . TOKEN_ELSE stmt

    TOKEN_ELSE  shift, and go to state 138


State 124

    4 stmt: decl .
   15 if_nest: decl . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 139

    $default  reduce using rule 4 (stmt)


State 125

    5 stmt: expr . TOKEN_SEMICOLON
   16 if_nest: expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 140


State 126

   34 arg_list: expr TOKEN_COMMA arg_list .

    $default  reduce using rule 34 (arg_list)


State 127

   48 type: TOKEN_ARRAY TOKEN_L_BRACKET TOKEN_R_BRACKET . type

    TOKEN_ARRAY      shift, and go to state 80
    TOKEN_BOOLEAN    shift, and go to state 81
    TOKEN_CHARACTER  shift, and go to state 82
    TOKEN_FLOAT      shift, and go to state 83
    TOKEN_FUNCTION   shift, and go to state 84
    TOKEN_INTEGER    shift, and go to state 85
    TOKEN_STRING     shift, and go to state 86
    TOKEN_VOID       shift, and go to state 87

    type  go to state 141


State 128

   49 type: TOKEN_ARRAY TOKEN_L_BRACKET expr . TOKEN_R_BRACKET type

    TOKEN_R_BRACKET  shift, and go to state 142


State 129

   50 type: TOKEN_FUNCTION type TOKEN_L_PAREN . param_list TOKEN_R_PAREN

    TOKEN_IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 32 (param_list)

    param_list  go to state 143
    param       go to state 144
    id          go to state 145


State 130

   25 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE . brace TOKEN_R_BRACE TOKEN_SEMICOLON
   26     | id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15
    TOKEN_C_COMMENT          shift, and go to state 16
    TOKEN_CPP_COMMENT        shift, and go to state 17

    $default  reduce using rule 29 (brace)

    stmt_list   go to state 146
    stmt        go to state 20
    decl        go to state 21
    brace       go to state 147
    id          go to state 22
    expr        go to state 148
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 131

   24 decl: id TOKEN_COLON type TOKEN_ASSIGN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 149


State 132

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON . for_expr TOKEN_R_PAREN stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 41 (for_expr)

    for_expr    go to state 150
    id          go to state 37
    expr        go to state 70
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 133

    8 stmt: TOKEN_FOR TOKEN_L_PAREN . for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   20 if_nest: TOKEN_FOR TOKEN_L_PAREN . for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 41 (for_expr)

    for_expr    go to state 151
    id          go to state 37
    expr        go to state 70
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 134

    9 stmt: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN stmt
   10     | TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   14 if_nest: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 37
    expr        go to state 152
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 135

    6 stmt: TOKEN_PRINT print_list . TOKEN_SEMICOLON
   18 if_nest: TOKEN_PRINT print_list . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 153


State 136

    7 stmt: TOKEN_RETURN expr . TOKEN_SEMICOLON
   19 if_nest: TOKEN_RETURN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 154


State 137

   11 stmt: TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE
   17 if_nest: TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 155


State 138

   10 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE . stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15
    TOKEN_C_COMMENT          shift, and go to state 16
    TOKEN_CPP_COMMENT        shift, and go to state 17

    stmt        go to state 156
    decl        go to state 21
    id          go to state 22
    expr        go to state 23
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 139

   15 if_nest: decl TOKEN_SEMICOLON .

    $default  reduce using rule 15 (if_nest)


State 140

    5 stmt: expr TOKEN_SEMICOLON .
   16 if_nest: expr TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 16 (if_nest)
    $default    reduce using rule 5 (stmt)


State 141

   48 type: TOKEN_ARRAY TOKEN_L_BRACKET TOKEN_R_BRACKET type .

    $default  reduce using rule 48 (type)


State 142

   49 type: TOKEN_ARRAY TOKEN_L_BRACKET expr TOKEN_R_BRACKET . type

    TOKEN_ARRAY      shift, and go to state 80
    TOKEN_BOOLEAN    shift, and go to state 81
    TOKEN_CHARACTER  shift, and go to state 82
    TOKEN_FLOAT      shift, and go to state 83
    TOKEN_FUNCTION   shift, and go to state 84
    TOKEN_INTEGER    shift, and go to state 85
    TOKEN_STRING     shift, and go to state 86
    TOKEN_VOID       shift, and go to state 87

    type  go to state 157


State 143

   50 type: TOKEN_FUNCTION type TOKEN_L_PAREN param_list . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 158


State 144

   30 param_list: param . TOKEN_COMMA param_list
   31           | param .

    TOKEN_COMMA  shift, and go to state 159

    $default  reduce using rule 31 (param_list)


State 145

   33 param: id . TOKEN_COLON type

    TOKEN_COLON  shift, and go to state 160


State 146

   26 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 161


State 147

   25 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace . TOKEN_R_BRACE TOKEN_SEMICOLON

    TOKEN_R_BRACE  shift, and go to state 162


State 148

    5 stmt: expr . TOKEN_SEMICOLON
   27 brace: expr . TOKEN_COMMA brace
   28      | expr .

    TOKEN_SEMICOLON  shift, and go to state 51
    TOKEN_COMMA      shift, and go to state 163

    $default  reduce using rule 28 (brace)


State 149

   24 decl: id TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON .

    $default  reduce using rule 24 (decl)


State 150

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr . TOKEN_R_PAREN stmt

    TOKEN_R_PAREN  shift, and go to state 164


State 151

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr . TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   20 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr . TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_SEMICOLON  shift, and go to state 165


State 152

    9 stmt: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN stmt
   10     | TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   14 if_nest: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest

    TOKEN_R_PAREN  shift, and go to state 166


State 153

    6 stmt: TOKEN_PRINT print_list TOKEN_SEMICOLON .
   18 if_nest: TOKEN_PRINT print_list TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 18 (if_nest)
    $default    reduce using rule 6 (stmt)


State 154

    7 stmt: TOKEN_RETURN expr TOKEN_SEMICOLON .
   19 if_nest: TOKEN_RETURN expr TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 19 (if_nest)
    $default    reduce using rule 7 (stmt)


State 155

   11 stmt: TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .
   17 if_nest: TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .

    TOKEN_ELSE  reduce using rule 17 (if_nest)
    $default    reduce using rule 11 (stmt)


State 156

   10 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt .

    $default  reduce using rule 10 (stmt)


State 157

   49 type: TOKEN_ARRAY TOKEN_L_BRACKET expr TOKEN_R_BRACKET type .

    $default  reduce using rule 49 (type)


State 158

   50 type: TOKEN_FUNCTION type TOKEN_L_PAREN param_list TOKEN_R_PAREN .

    $default  reduce using rule 50 (type)


State 159

   30 param_list: param TOKEN_COMMA . param_list

    TOKEN_IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 32 (param_list)

    param_list  go to state 167
    param       go to state 144
    id          go to state 145


State 160

   33 param: id TOKEN_COLON . type

    TOKEN_ARRAY      shift, and go to state 80
    TOKEN_BOOLEAN    shift, and go to state 81
    TOKEN_CHARACTER  shift, and go to state 82
    TOKEN_FLOAT      shift, and go to state 83
    TOKEN_FUNCTION   shift, and go to state 84
    TOKEN_INTEGER    shift, and go to state 85
    TOKEN_STRING     shift, and go to state 86
    TOKEN_VOID       shift, and go to state 87

    type  go to state 168


State 161

   26 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .

    $default  reduce using rule 26 (decl)


State 162

   25 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace TOKEN_R_BRACE . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 169


State 163

   27 brace: expr TOKEN_COMMA . brace

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 29 (brace)

    brace       go to state 170
    id          go to state 37
    expr        go to state 171
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 164

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN . stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15
    TOKEN_C_COMMENT          shift, and go to state 16
    TOKEN_CPP_COMMENT        shift, and go to state 17

    stmt        go to state 172
    decl        go to state 21
    id          go to state 22
    expr        go to state 23
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 165

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON . for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   20 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON . for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 41 (for_expr)

    for_expr    go to state 173
    id          go to state 37
    expr        go to state 70
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 166

    9 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . stmt
   10     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . if_nest TOKEN_ELSE stmt
   14 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . if_nest TOKEN_ELSE if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 115
    TOKEN_IF                 shift, and go to state 116
    TOKEN_PRINT              shift, and go to state 117
    TOKEN_RETURN             shift, and go to state 118
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 119
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15
    TOKEN_C_COMMENT          shift, and go to state 120
    TOKEN_CPP_COMMENT        shift, and go to state 121

    stmt        go to state 122
    if_nest     go to state 174
    decl        go to state 124
    id          go to state 22
    expr        go to state 125
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 167

   30 param_list: param TOKEN_COMMA param_list .

    $default  reduce using rule 30 (param_list)


State 168

   33 param: id TOKEN_COLON type .

    $default  reduce using rule 33 (param)


State 169

   25 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace TOKEN_R_BRACE TOKEN_SEMICOLON .

    $default  reduce using rule 25 (decl)


State 170

   27 brace: expr TOKEN_COMMA brace .

    $default  reduce using rule 27 (brace)


State 171

   27 brace: expr . TOKEN_COMMA brace
   28      | expr .

    TOKEN_COMMA  shift, and go to state 163

    $default  reduce using rule 28 (brace)


State 172

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt .

    $default  reduce using rule 8 (stmt)


State 173

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr . TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   20 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr . TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_SEMICOLON  shift, and go to state 175


State 174

   10 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest . TOKEN_ELSE stmt
   14 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest . TOKEN_ELSE if_nest

    TOKEN_ELSE  shift, and go to state 176


State 175

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON . for_expr TOKEN_R_PAREN stmt
   20 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON . for_expr TOKEN_R_PAREN if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 41 (for_expr)

    for_expr    go to state 177
    id          go to state 37
    expr        go to state 70
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 176

   10 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE . stmt
   14 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE . if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 115
    TOKEN_IF                 shift, and go to state 116
    TOKEN_PRINT              shift, and go to state 117
    TOKEN_RETURN             shift, and go to state 118
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 119
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15
    TOKEN_C_COMMENT          shift, and go to state 120
    TOKEN_CPP_COMMENT        shift, and go to state 121

    stmt        go to state 156
    if_nest     go to state 178
    decl        go to state 124
    id          go to state 22
    expr        go to state 125
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 177

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr . TOKEN_R_PAREN stmt
   20 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr . TOKEN_R_PAREN if_nest

    TOKEN_R_PAREN  shift, and go to state 179


State 178

   14 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest .

    $default  reduce using rule 14 (if_nest)


State 179

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN . stmt
   20 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN . if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 115
    TOKEN_IF                 shift, and go to state 116
    TOKEN_PRINT              shift, and go to state 117
    TOKEN_RETURN             shift, and go to state 118
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 119
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15
    TOKEN_C_COMMENT          shift, and go to state 120
    TOKEN_CPP_COMMENT        shift, and go to state 121

    stmt        go to state 172
    if_nest     go to state 180
    decl        go to state 124
    id          go to state 22
    expr        go to state 125
    expr_or     go to state 24
    expr_and    go to state 25
    expr_comp   go to state 26
    expr_add    go to state 27
    expr_mul    go to state 28
    expr_exp    go to state 29
    expr_unary  go to state 30
    exp_post    go to state 31
    factor      go to state 32
    literal     go to state 33


State 180

   20 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest .

    $default  reduce using rule 20 (if_nest)
