Terminals unused in grammar

   TOKEN_WHILE
   TOKEN_AUTO
   TOKEN_NEG
   TOKEN_BACKSLASH
   TOKEN_ERROR


Grammar

    0 $accept: program $end

    1 program: decl_list TOKEN_EOF

    2 decl_list: decl decl_list
    3          | %empty

    4 stmt_list: stmt stmt_list
    5          | %empty

    6 stmt: decl
    7     | expr TOKEN_SEMICOLON
    8     | TOKEN_PRINT arg_list TOKEN_SEMICOLON
    9     | TOKEN_PRINT TOKEN_SEMICOLON
   10     | TOKEN_RETURN expr TOKEN_SEMICOLON
   11     | TOKEN_RETURN TOKEN_SEMICOLON
   12     | TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   13     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   14     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   15     | TOKEN_L_BRACE stmt_list TOKEN_R_BRACE
   16     | TOKEN_C_COMMENT
   17     | TOKEN_CPP_COMMENT

   18 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest
   19        | decl
   20        | expr TOKEN_SEMICOLON
   21        | TOKEN_L_BRACE stmt_list TOKEN_R_BRACE
   22        | TOKEN_PRINT arg_list TOKEN_SEMICOLON
   23        | TOKEN_PRINT TOKEN_SEMICOLON
   24        | TOKEN_RETURN expr TOKEN_SEMICOLON
   25        | TOKEN_RETURN TOKEN_SEMICOLON
   26        | TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest
   27        | TOKEN_C_COMMENT
   28        | TOKEN_CPP_COMMENT

   29 decl: id TOKEN_COLON type TOKEN_SEMICOLON
   30     | id TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   31     | id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   32     | id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

   33 param_list: param
   34           | %empty

   35 param: id TOKEN_COLON type
   36      | id TOKEN_COLON type TOKEN_COMMA param

   37 brace_list: brace
   38           | TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_COMMA brace_list
   39           | TOKEN_L_BRACE brace_list TOKEN_R_BRACE

   40 brace: expr TOKEN_COMMA brace
   41      | expr

   42 arg_list: arg

   43 arg: expr TOKEN_COMMA arg
   44    | expr

   45 for_expr: expr
   46         | %empty

   47 type: TOKEN_INTEGER
   48     | TOKEN_FLOAT
   49     | TOKEN_BOOLEAN
   50     | TOKEN_CHARACTER
   51     | TOKEN_STRING
   52     | TOKEN_VOID
   53     | TOKEN_ARRAY TOKEN_L_BRACKET TOKEN_R_BRACKET type
   54     | TOKEN_ARRAY TOKEN_L_BRACKET expr TOKEN_R_BRACKET type
   55     | TOKEN_FUNCTION type TOKEN_L_PAREN param_list TOKEN_R_PAREN

   56 id: TOKEN_IDENTIFIER

   57 expr: id TOKEN_ASSIGN expr
   58     | arr_subscr TOKEN_ASSIGN expr
   59     | expr_or

   60 expr_or: expr_and TOKEN_OR expr_or
   61        | expr_and

   62 expr_and: expr_comp TOKEN_AND expr_and
   63         | expr_comp

   64 expr_comp: expr_add TOKEN_EQUAL expr_comp
   65          | expr_add TOKEN_LESS expr_comp
   66          | expr_add TOKEN_NEQUAL expr_comp
   67          | expr_add TOKEN_LE expr_comp
   68          | expr_add TOKEN_GE expr_comp
   69          | expr_add TOKEN_GREATER expr_comp
   70          | expr_add

   71 expr_add: expr_mul TOKEN_ADD expr_add
   72         | expr_mul TOKEN_SUB expr_add
   73         | expr_mul

   74 expr_mul: expr_exp TOKEN_MUL expr_mul
   75         | expr_exp TOKEN_DIV expr_mul
   76         | expr_exp TOKEN_MOD expr_mul
   77         | expr_exp

   78 expr_exp: expr_unary TOKEN_EXP expr_exp
   79         | expr_unary

   80 expr_unary: TOKEN_SUB expr_unary
   81           | TOKEN_NOT expr_unary
   82           | TOKEN_ADD expr_unary
   83           | exp_post

   84 exp_post: factor TOKEN_POSTINC
   85         | factor TOKEN_POSTDEC
   86         | factor

   87 factor: TOKEN_L_PAREN expr TOKEN_R_PAREN
   88       | arr_subscr
   89       | literal
   90       | id
   91       | id TOKEN_L_PAREN arg_list TOKEN_R_PAREN
   92       | id TOKEN_L_PAREN TOKEN_R_PAREN

   93 arr_subscr: factor TOKEN_L_BRACKET expr TOKEN_R_BRACKET

   94 literal: TOKEN_INTEGER_LITERAL
   95        | TOKEN_FLOAT_LITERAL
   96        | TOKEN_CHARACTER_LITERAL
   97        | TOKEN_STRING_LITERAL
   98        | TOKEN_TRUE
   99        | TOKEN_FALSE


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_ARRAY (258) 53 54
TOKEN_BOOLEAN (259) 49
TOKEN_CHARACTER (260) 50
TOKEN_FLOAT (261) 48
TOKEN_FUNCTION (262) 55
TOKEN_INTEGER (263) 47
TOKEN_STRING (264) 51
TOKEN_VOID (265) 52
TOKEN_INTEGER_LITERAL (266) 94
TOKEN_CHARACTER_LITERAL (267) 96
TOKEN_STRING_LITERAL (268) 97
TOKEN_FLOAT_LITERAL (269) 95
TOKEN_ELSE (270) 14 18
TOKEN_FALSE (271) 99
TOKEN_FOR (272) 12 26
TOKEN_IF (273) 13 14 18
TOKEN_PRINT (274) 8 9 22 23
TOKEN_RETURN (275) 10 11 24 25
TOKEN_TRUE (276) 98
TOKEN_WHILE (277)
TOKEN_AUTO (278)
TOKEN_IDENTIFIER (279) 56
TOKEN_L_PAREN (280) 12 13 14 18 26 55 87 91 92
TOKEN_R_PAREN (281) 12 13 14 18 26 55 87 91 92
TOKEN_L_BRACKET (282) 53 54 93
TOKEN_R_BRACKET (283) 53 54 93
TOKEN_L_BRACE (284) 15 21 31 32 38 39
TOKEN_R_BRACE (285) 15 21 31 32 38 39
TOKEN_POSTINC (286) 84
TOKEN_POSTDEC (287) 85
TOKEN_NEG (288)
TOKEN_NOT (289) 81
TOKEN_EXP (290) 78
TOKEN_MUL (291) 74
TOKEN_DIV (292) 75
TOKEN_MOD (293) 76
TOKEN_ADD (294) 71 82
TOKEN_SUB (295) 72 80
TOKEN_LESS (296) 65
TOKEN_LE (297) 67
TOKEN_GE (298) 68
TOKEN_GREATER (299) 69
TOKEN_EQUAL (300) 64
TOKEN_NEQUAL (301) 66
TOKEN_AND (302) 62
TOKEN_OR (303) 60
TOKEN_ASSIGN (304) 30 31 32 57 58
TOKEN_SEMICOLON (305) 7 8 9 10 11 12 20 22 23 24 25 26 29 30 31
TOKEN_COLON (306) 29 30 31 32 35 36
TOKEN_COMMA (307) 36 38 40 43
TOKEN_BACKSLASH (308)
TOKEN_C_COMMENT (309) 16 27
TOKEN_CPP_COMMENT (310) 17 28
TOKEN_ERROR (311)
TOKEN_EOF (312) 1


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
program (59)
    on left: 1, on right: 0
decl_list (60)
    on left: 2 3, on right: 1 2
stmt_list (61)
    on left: 4 5, on right: 4 15 21 32
stmt (62)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17, on right: 4 12 13 14
if_nest (63)
    on left: 18 19 20 21 22 23 24 25 26 27 28, on right: 14 18 26
decl (64)
    on left: 29 30 31 32, on right: 2 6 19
param_list (65)
    on left: 33 34, on right: 55
param (66)
    on left: 35 36, on right: 33 36
brace_list (67)
    on left: 37 38 39, on right: 31 38 39
brace (68)
    on left: 40 41, on right: 37 40
arg_list (69)
    on left: 42, on right: 8 22 91
arg (70)
    on left: 43 44, on right: 42 43
for_expr (71)
    on left: 45 46, on right: 12 26
type (72)
    on left: 47 48 49 50 51 52 53 54 55, on right: 29 30 31 32 35 36
    53 54 55
id (73)
    on left: 56, on right: 29 30 31 32 35 36 57 90 91 92
expr (74)
    on left: 57 58 59, on right: 7 10 13 14 18 20 24 30 40 41 43 44
    45 54 57 58 87 93
expr_or (75)
    on left: 60 61, on right: 59 60
expr_and (76)
    on left: 62 63, on right: 60 61 62
expr_comp (77)
    on left: 64 65 66 67 68 69 70, on right: 62 63 64 65 66 67 68 69
expr_add (78)
    on left: 71 72 73, on right: 64 65 66 67 68 69 70 71 72
expr_mul (79)
    on left: 74 75 76 77, on right: 71 72 73 74 75 76
expr_exp (80)
    on left: 78 79, on right: 74 75 76 77 78
expr_unary (81)
    on left: 80 81 82 83, on right: 78 79 80 81 82
exp_post (82)
    on left: 84 85 86, on right: 83
factor (83)
    on left: 87 88 89 90 91 92, on right: 84 85 86 93
arr_subscr (84)
    on left: 93, on right: 58 88
literal (85)
    on left: 94 95 96 97 98 99, on right: 89


State 0

    0 $accept: . program $end

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 3 (decl_list)

    program    go to state 2
    decl_list  go to state 3
    decl       go to state 4
    id         go to state 5


State 1

   56 id: TOKEN_IDENTIFIER .

    $default  reduce using rule 56 (id)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: decl_list . TOKEN_EOF

    TOKEN_EOF  shift, and go to state 7


State 4

    2 decl_list: decl . decl_list

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 3 (decl_list)

    decl_list  go to state 8
    decl       go to state 4
    id         go to state 5


State 5

   29 decl: id . TOKEN_COLON type TOKEN_SEMICOLON
   30     | id . TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   31     | id . TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   32     | id . TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

    TOKEN_COLON  shift, and go to state 9


State 6

    0 $accept: program $end .

    $default  accept


State 7

    1 program: decl_list TOKEN_EOF .

    $default  reduce using rule 1 (program)


State 8

    2 decl_list: decl decl_list .

    $default  reduce using rule 2 (decl_list)


State 9

   29 decl: id TOKEN_COLON . type TOKEN_SEMICOLON
   30     | id TOKEN_COLON . type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   31     | id TOKEN_COLON . type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   32     | id TOKEN_COLON . type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

    TOKEN_ARRAY      shift, and go to state 10
    TOKEN_BOOLEAN    shift, and go to state 11
    TOKEN_CHARACTER  shift, and go to state 12
    TOKEN_FLOAT      shift, and go to state 13
    TOKEN_FUNCTION   shift, and go to state 14
    TOKEN_INTEGER    shift, and go to state 15
    TOKEN_STRING     shift, and go to state 16
    TOKEN_VOID       shift, and go to state 17

    type  go to state 18


State 10

   53 type: TOKEN_ARRAY . TOKEN_L_BRACKET TOKEN_R_BRACKET type
   54     | TOKEN_ARRAY . TOKEN_L_BRACKET expr TOKEN_R_BRACKET type

    TOKEN_L_BRACKET  shift, and go to state 19


State 11

   49 type: TOKEN_BOOLEAN .

    $default  reduce using rule 49 (type)


State 12

   50 type: TOKEN_CHARACTER .

    $default  reduce using rule 50 (type)


State 13

   48 type: TOKEN_FLOAT .

    $default  reduce using rule 48 (type)


State 14

   55 type: TOKEN_FUNCTION . type TOKEN_L_PAREN param_list TOKEN_R_PAREN

    TOKEN_ARRAY      shift, and go to state 10
    TOKEN_BOOLEAN    shift, and go to state 11
    TOKEN_CHARACTER  shift, and go to state 12
    TOKEN_FLOAT      shift, and go to state 13
    TOKEN_FUNCTION   shift, and go to state 14
    TOKEN_INTEGER    shift, and go to state 15
    TOKEN_STRING     shift, and go to state 16
    TOKEN_VOID       shift, and go to state 17

    type  go to state 20


State 15

   47 type: TOKEN_INTEGER .

    $default  reduce using rule 47 (type)


State 16

   51 type: TOKEN_STRING .

    $default  reduce using rule 51 (type)


State 17

   52 type: TOKEN_VOID .

    $default  reduce using rule 52 (type)


State 18

   29 decl: id TOKEN_COLON type . TOKEN_SEMICOLON
   30     | id TOKEN_COLON type . TOKEN_ASSIGN expr TOKEN_SEMICOLON
   31     | id TOKEN_COLON type . TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   32     | id TOKEN_COLON type . TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

    TOKEN_ASSIGN     shift, and go to state 21
    TOKEN_SEMICOLON  shift, and go to state 22


State 19

   53 type: TOKEN_ARRAY TOKEN_L_BRACKET . TOKEN_R_BRACKET type
   54     | TOKEN_ARRAY TOKEN_L_BRACKET . expr TOKEN_R_BRACKET type

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_R_BRACKET          shift, and go to state 30
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 34
    expr        go to state 35
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 20

   55 type: TOKEN_FUNCTION type . TOKEN_L_PAREN param_list TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 47


State 21

   30 decl: id TOKEN_COLON type TOKEN_ASSIGN . expr TOKEN_SEMICOLON
   31     | id TOKEN_COLON type TOKEN_ASSIGN . TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   32     | id TOKEN_COLON type TOKEN_ASSIGN . TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 48
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 34
    expr        go to state 49
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 22

   29 decl: id TOKEN_COLON type TOKEN_SEMICOLON .

    $default  reduce using rule 29 (decl)


State 23

   94 literal: TOKEN_INTEGER_LITERAL .

    $default  reduce using rule 94 (literal)


State 24

   96 literal: TOKEN_CHARACTER_LITERAL .

    $default  reduce using rule 96 (literal)


State 25

   97 literal: TOKEN_STRING_LITERAL .

    $default  reduce using rule 97 (literal)


State 26

   95 literal: TOKEN_FLOAT_LITERAL .

    $default  reduce using rule 95 (literal)


State 27

   99 literal: TOKEN_FALSE .

    $default  reduce using rule 99 (literal)


State 28

   98 literal: TOKEN_TRUE .

    $default  reduce using rule 98 (literal)


State 29

   87 factor: TOKEN_L_PAREN . expr TOKEN_R_PAREN

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 34
    expr        go to state 50
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 30

   53 type: TOKEN_ARRAY TOKEN_L_BRACKET TOKEN_R_BRACKET . type

    TOKEN_ARRAY      shift, and go to state 10
    TOKEN_BOOLEAN    shift, and go to state 11
    TOKEN_CHARACTER  shift, and go to state 12
    TOKEN_FLOAT      shift, and go to state 13
    TOKEN_FUNCTION   shift, and go to state 14
    TOKEN_INTEGER    shift, and go to state 15
    TOKEN_STRING     shift, and go to state 16
    TOKEN_VOID       shift, and go to state 17

    type  go to state 51


State 31

   81 expr_unary: TOKEN_NOT . expr_unary

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 52
    expr_unary  go to state 53
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 54
    literal     go to state 46


State 32

   82 expr_unary: TOKEN_ADD . expr_unary

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 52
    expr_unary  go to state 55
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 54
    literal     go to state 46


State 33

   80 expr_unary: TOKEN_SUB . expr_unary

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 52
    expr_unary  go to state 56
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 54
    literal     go to state 46


State 34

   57 expr: id . TOKEN_ASSIGN expr
   90 factor: id .
   91       | id . TOKEN_L_PAREN arg_list TOKEN_R_PAREN
   92       | id . TOKEN_L_PAREN TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 57
    TOKEN_ASSIGN   shift, and go to state 58

    $default  reduce using rule 90 (factor)


State 35

   54 type: TOKEN_ARRAY TOKEN_L_BRACKET expr . TOKEN_R_BRACKET type

    TOKEN_R_BRACKET  shift, and go to state 59


State 36

   59 expr: expr_or .

    $default  reduce using rule 59 (expr)


State 37

   60 expr_or: expr_and . TOKEN_OR expr_or
   61        | expr_and .

    TOKEN_OR  shift, and go to state 60

    $default  reduce using rule 61 (expr_or)


State 38

   62 expr_and: expr_comp . TOKEN_AND expr_and
   63         | expr_comp .

    TOKEN_AND  shift, and go to state 61

    $default  reduce using rule 63 (expr_and)


State 39

   64 expr_comp: expr_add . TOKEN_EQUAL expr_comp
   65          | expr_add . TOKEN_LESS expr_comp
   66          | expr_add . TOKEN_NEQUAL expr_comp
   67          | expr_add . TOKEN_LE expr_comp
   68          | expr_add . TOKEN_GE expr_comp
   69          | expr_add . TOKEN_GREATER expr_comp
   70          | expr_add .

    TOKEN_LESS     shift, and go to state 62
    TOKEN_LE       shift, and go to state 63
    TOKEN_GE       shift, and go to state 64
    TOKEN_GREATER  shift, and go to state 65
    TOKEN_EQUAL    shift, and go to state 66
    TOKEN_NEQUAL   shift, and go to state 67

    $default  reduce using rule 70 (expr_comp)


State 40

   71 expr_add: expr_mul . TOKEN_ADD expr_add
   72         | expr_mul . TOKEN_SUB expr_add
   73         | expr_mul .

    TOKEN_ADD  shift, and go to state 68
    TOKEN_SUB  shift, and go to state 69

    $default  reduce using rule 73 (expr_add)


State 41

   74 expr_mul: expr_exp . TOKEN_MUL expr_mul
   75         | expr_exp . TOKEN_DIV expr_mul
   76         | expr_exp . TOKEN_MOD expr_mul
   77         | expr_exp .

    TOKEN_MUL  shift, and go to state 70
    TOKEN_DIV  shift, and go to state 71
    TOKEN_MOD  shift, and go to state 72

    $default  reduce using rule 77 (expr_mul)


State 42

   78 expr_exp: expr_unary . TOKEN_EXP expr_exp
   79         | expr_unary .

    TOKEN_EXP  shift, and go to state 73

    $default  reduce using rule 79 (expr_exp)


State 43

   83 expr_unary: exp_post .

    $default  reduce using rule 83 (expr_unary)


State 44

   84 exp_post: factor . TOKEN_POSTINC
   85         | factor . TOKEN_POSTDEC
   86         | factor .
   93 arr_subscr: factor . TOKEN_L_BRACKET expr TOKEN_R_BRACKET

    TOKEN_L_BRACKET  shift, and go to state 74
    TOKEN_POSTINC    shift, and go to state 75
    TOKEN_POSTDEC    shift, and go to state 76

    $default  reduce using rule 86 (exp_post)


State 45

   58 expr: arr_subscr . TOKEN_ASSIGN expr
   88 factor: arr_subscr .

    TOKEN_ASSIGN  shift, and go to state 77

    $default  reduce using rule 88 (factor)


State 46

   89 factor: literal .

    $default  reduce using rule 89 (factor)


State 47

   55 type: TOKEN_FUNCTION type TOKEN_L_PAREN . param_list TOKEN_R_PAREN

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 34 (param_list)

    param_list  go to state 78
    param       go to state 79
    id          go to state 80


State 48

   31 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE . brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   32     | id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 81
    TOKEN_IF                 shift, and go to state 82
    TOKEN_PRINT              shift, and go to state 83
    TOKEN_RETURN             shift, and go to state 84
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 85
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33
    TOKEN_C_COMMENT          shift, and go to state 86
    TOKEN_CPP_COMMENT        shift, and go to state 87

    $default  reduce using rule 5 (stmt_list)

    stmt_list   go to state 88
    stmt        go to state 89
    decl        go to state 90
    brace_list  go to state 91
    brace       go to state 92
    id          go to state 93
    expr        go to state 94
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 49

   30 decl: id TOKEN_COLON type TOKEN_ASSIGN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 95


State 50

   87 factor: TOKEN_L_PAREN expr . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 96


State 51

   53 type: TOKEN_ARRAY TOKEN_L_BRACKET TOKEN_R_BRACKET type .

    $default  reduce using rule 53 (type)


State 52

   90 factor: id .
   91       | id . TOKEN_L_PAREN arg_list TOKEN_R_PAREN
   92       | id . TOKEN_L_PAREN TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 57

    $default  reduce using rule 90 (factor)


State 53

   81 expr_unary: TOKEN_NOT expr_unary .

    $default  reduce using rule 81 (expr_unary)


State 54

   88 factor: arr_subscr .

    $default  reduce using rule 88 (factor)


State 55

   82 expr_unary: TOKEN_ADD expr_unary .

    $default  reduce using rule 82 (expr_unary)


State 56

   80 expr_unary: TOKEN_SUB expr_unary .

    $default  reduce using rule 80 (expr_unary)


State 57

   91 factor: id TOKEN_L_PAREN . arg_list TOKEN_R_PAREN
   92       | id TOKEN_L_PAREN . TOKEN_R_PAREN

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_R_PAREN            shift, and go to state 97
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    arg_list    go to state 98
    arg         go to state 99
    id          go to state 34
    expr        go to state 100
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 58

   57 expr: id TOKEN_ASSIGN . expr

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 34
    expr        go to state 101
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 59

   54 type: TOKEN_ARRAY TOKEN_L_BRACKET expr TOKEN_R_BRACKET . type

    TOKEN_ARRAY      shift, and go to state 10
    TOKEN_BOOLEAN    shift, and go to state 11
    TOKEN_CHARACTER  shift, and go to state 12
    TOKEN_FLOAT      shift, and go to state 13
    TOKEN_FUNCTION   shift, and go to state 14
    TOKEN_INTEGER    shift, and go to state 15
    TOKEN_STRING     shift, and go to state 16
    TOKEN_VOID       shift, and go to state 17

    type  go to state 102


State 60

   60 expr_or: expr_and TOKEN_OR . expr_or

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 52
    expr_or     go to state 103
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 54
    literal     go to state 46


State 61

   62 expr_and: expr_comp TOKEN_AND . expr_and

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 52
    expr_and    go to state 104
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 54
    literal     go to state 46


State 62

   65 expr_comp: expr_add TOKEN_LESS . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 52
    expr_comp   go to state 105
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 54
    literal     go to state 46


State 63

   67 expr_comp: expr_add TOKEN_LE . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 52
    expr_comp   go to state 106
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 54
    literal     go to state 46


State 64

   68 expr_comp: expr_add TOKEN_GE . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 52
    expr_comp   go to state 107
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 54
    literal     go to state 46


State 65

   69 expr_comp: expr_add TOKEN_GREATER . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 52
    expr_comp   go to state 108
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 54
    literal     go to state 46


State 66

   64 expr_comp: expr_add TOKEN_EQUAL . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 52
    expr_comp   go to state 109
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 54
    literal     go to state 46


State 67

   66 expr_comp: expr_add TOKEN_NEQUAL . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 52
    expr_comp   go to state 110
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 54
    literal     go to state 46


State 68

   71 expr_add: expr_mul TOKEN_ADD . expr_add

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 52
    expr_add    go to state 111
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 54
    literal     go to state 46


State 69

   72 expr_add: expr_mul TOKEN_SUB . expr_add

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 52
    expr_add    go to state 112
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 54
    literal     go to state 46


State 70

   74 expr_mul: expr_exp TOKEN_MUL . expr_mul

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 52
    expr_mul    go to state 113
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 54
    literal     go to state 46


State 71

   75 expr_mul: expr_exp TOKEN_DIV . expr_mul

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 52
    expr_mul    go to state 114
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 54
    literal     go to state 46


State 72

   76 expr_mul: expr_exp TOKEN_MOD . expr_mul

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 52
    expr_mul    go to state 115
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 54
    literal     go to state 46


State 73

   78 expr_exp: expr_unary TOKEN_EXP . expr_exp

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 52
    expr_exp    go to state 116
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 54
    literal     go to state 46


State 74

   93 arr_subscr: factor TOKEN_L_BRACKET . expr TOKEN_R_BRACKET

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 34
    expr        go to state 117
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 75

   84 exp_post: factor TOKEN_POSTINC .

    $default  reduce using rule 84 (exp_post)


State 76

   85 exp_post: factor TOKEN_POSTDEC .

    $default  reduce using rule 85 (exp_post)


State 77

   58 expr: arr_subscr TOKEN_ASSIGN . expr

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 34
    expr        go to state 118
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 78

   55 type: TOKEN_FUNCTION type TOKEN_L_PAREN param_list . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 119


State 79

   33 param_list: param .

    $default  reduce using rule 33 (param_list)


State 80

   35 param: id . TOKEN_COLON type
   36      | id . TOKEN_COLON type TOKEN_COMMA param

    TOKEN_COLON  shift, and go to state 120


State 81

   12 stmt: TOKEN_FOR . TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_L_PAREN  shift, and go to state 121


State 82

   13 stmt: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   14     | TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt

    TOKEN_L_PAREN  shift, and go to state 122


State 83

    8 stmt: TOKEN_PRINT . arg_list TOKEN_SEMICOLON
    9     | TOKEN_PRINT . TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33
    TOKEN_SEMICOLON          shift, and go to state 123

    arg_list    go to state 124
    arg         go to state 99
    id          go to state 34
    expr        go to state 100
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 84

   10 stmt: TOKEN_RETURN . expr TOKEN_SEMICOLON
   11     | TOKEN_RETURN . TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33
    TOKEN_SEMICOLON          shift, and go to state 125

    id          go to state 34
    expr        go to state 126
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 85

   15 stmt: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE
   38 brace_list: TOKEN_L_BRACE . brace_list TOKEN_R_BRACE TOKEN_COMMA brace_list
   39           | TOKEN_L_BRACE . brace_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 81
    TOKEN_IF                 shift, and go to state 82
    TOKEN_PRINT              shift, and go to state 83
    TOKEN_RETURN             shift, and go to state 84
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 85
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33
    TOKEN_C_COMMENT          shift, and go to state 86
    TOKEN_CPP_COMMENT        shift, and go to state 87

    $default  reduce using rule 5 (stmt_list)

    stmt_list   go to state 127
    stmt        go to state 89
    decl        go to state 90
    brace_list  go to state 128
    brace       go to state 92
    id          go to state 93
    expr        go to state 94
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 86

   16 stmt: TOKEN_C_COMMENT .

    $default  reduce using rule 16 (stmt)


State 87

   17 stmt: TOKEN_CPP_COMMENT .

    $default  reduce using rule 17 (stmt)


State 88

   32 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 129


State 89

    4 stmt_list: stmt . stmt_list

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 81
    TOKEN_IF                 shift, and go to state 82
    TOKEN_PRINT              shift, and go to state 83
    TOKEN_RETURN             shift, and go to state 84
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 130
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33
    TOKEN_C_COMMENT          shift, and go to state 86
    TOKEN_CPP_COMMENT        shift, and go to state 87

    $default  reduce using rule 5 (stmt_list)

    stmt_list   go to state 131
    stmt        go to state 89
    decl        go to state 90
    id          go to state 93
    expr        go to state 132
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 90

    6 stmt: decl .

    $default  reduce using rule 6 (stmt)


State 91

   31 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list . TOKEN_R_BRACE TOKEN_SEMICOLON

    TOKEN_R_BRACE  shift, and go to state 133


State 92

   37 brace_list: brace .

    $default  reduce using rule 37 (brace_list)


State 93

   29 decl: id . TOKEN_COLON type TOKEN_SEMICOLON
   30     | id . TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   31     | id . TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   32     | id . TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE
   57 expr: id . TOKEN_ASSIGN expr
   90 factor: id .
   91       | id . TOKEN_L_PAREN arg_list TOKEN_R_PAREN
   92       | id . TOKEN_L_PAREN TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 57
    TOKEN_ASSIGN   shift, and go to state 58
    TOKEN_COLON    shift, and go to state 9

    $default  reduce using rule 90 (factor)


State 94

    7 stmt: expr . TOKEN_SEMICOLON
   40 brace: expr . TOKEN_COMMA brace
   41      | expr .

    TOKEN_SEMICOLON  shift, and go to state 134
    TOKEN_COMMA      shift, and go to state 135

    $default  reduce using rule 41 (brace)


State 95

   30 decl: id TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON .

    $default  reduce using rule 30 (decl)


State 96

   87 factor: TOKEN_L_PAREN expr TOKEN_R_PAREN .

    $default  reduce using rule 87 (factor)


State 97

   92 factor: id TOKEN_L_PAREN TOKEN_R_PAREN .

    $default  reduce using rule 92 (factor)


State 98

   91 factor: id TOKEN_L_PAREN arg_list . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 136


State 99

   42 arg_list: arg .

    $default  reduce using rule 42 (arg_list)


State 100

   43 arg: expr . TOKEN_COMMA arg
   44    | expr .

    TOKEN_COMMA  shift, and go to state 137

    $default  reduce using rule 44 (arg)


State 101

   57 expr: id TOKEN_ASSIGN expr .

    $default  reduce using rule 57 (expr)


State 102

   54 type: TOKEN_ARRAY TOKEN_L_BRACKET expr TOKEN_R_BRACKET type .

    $default  reduce using rule 54 (type)


State 103

   60 expr_or: expr_and TOKEN_OR expr_or .

    $default  reduce using rule 60 (expr_or)


State 104

   62 expr_and: expr_comp TOKEN_AND expr_and .

    $default  reduce using rule 62 (expr_and)


State 105

   65 expr_comp: expr_add TOKEN_LESS expr_comp .

    $default  reduce using rule 65 (expr_comp)


State 106

   67 expr_comp: expr_add TOKEN_LE expr_comp .

    $default  reduce using rule 67 (expr_comp)


State 107

   68 expr_comp: expr_add TOKEN_GE expr_comp .

    $default  reduce using rule 68 (expr_comp)


State 108

   69 expr_comp: expr_add TOKEN_GREATER expr_comp .

    $default  reduce using rule 69 (expr_comp)


State 109

   64 expr_comp: expr_add TOKEN_EQUAL expr_comp .

    $default  reduce using rule 64 (expr_comp)


State 110

   66 expr_comp: expr_add TOKEN_NEQUAL expr_comp .

    $default  reduce using rule 66 (expr_comp)


State 111

   71 expr_add: expr_mul TOKEN_ADD expr_add .

    $default  reduce using rule 71 (expr_add)


State 112

   72 expr_add: expr_mul TOKEN_SUB expr_add .

    $default  reduce using rule 72 (expr_add)


State 113

   74 expr_mul: expr_exp TOKEN_MUL expr_mul .

    $default  reduce using rule 74 (expr_mul)


State 114

   75 expr_mul: expr_exp TOKEN_DIV expr_mul .

    $default  reduce using rule 75 (expr_mul)


State 115

   76 expr_mul: expr_exp TOKEN_MOD expr_mul .

    $default  reduce using rule 76 (expr_mul)


State 116

   78 expr_exp: expr_unary TOKEN_EXP expr_exp .

    $default  reduce using rule 78 (expr_exp)


State 117

   93 arr_subscr: factor TOKEN_L_BRACKET expr . TOKEN_R_BRACKET

    TOKEN_R_BRACKET  shift, and go to state 138


State 118

   58 expr: arr_subscr TOKEN_ASSIGN expr .

    $default  reduce using rule 58 (expr)


State 119

   55 type: TOKEN_FUNCTION type TOKEN_L_PAREN param_list TOKEN_R_PAREN .

    $default  reduce using rule 55 (type)


State 120

   35 param: id TOKEN_COLON . type
   36      | id TOKEN_COLON . type TOKEN_COMMA param

    TOKEN_ARRAY      shift, and go to state 10
    TOKEN_BOOLEAN    shift, and go to state 11
    TOKEN_CHARACTER  shift, and go to state 12
    TOKEN_FLOAT      shift, and go to state 13
    TOKEN_FUNCTION   shift, and go to state 14
    TOKEN_INTEGER    shift, and go to state 15
    TOKEN_STRING     shift, and go to state 16
    TOKEN_VOID       shift, and go to state 17

    type  go to state 139


State 121

   12 stmt: TOKEN_FOR TOKEN_L_PAREN . for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    $default  reduce using rule 46 (for_expr)

    for_expr    go to state 140
    id          go to state 34
    expr        go to state 141
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 122

   13 stmt: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN stmt
   14     | TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 34
    expr        go to state 142
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 123

    9 stmt: TOKEN_PRINT TOKEN_SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 124

    8 stmt: TOKEN_PRINT arg_list . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 143


State 125

   11 stmt: TOKEN_RETURN TOKEN_SEMICOLON .

    $default  reduce using rule 11 (stmt)


State 126

   10 stmt: TOKEN_RETURN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 144


State 127

   15 stmt: TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 145


State 128

   38 brace_list: TOKEN_L_BRACE brace_list . TOKEN_R_BRACE TOKEN_COMMA brace_list
   39           | TOKEN_L_BRACE brace_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 146


State 129

   32 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .

    $default  reduce using rule 32 (decl)


State 130

   15 stmt: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 81
    TOKEN_IF                 shift, and go to state 82
    TOKEN_PRINT              shift, and go to state 83
    TOKEN_RETURN             shift, and go to state 84
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 130
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33
    TOKEN_C_COMMENT          shift, and go to state 86
    TOKEN_CPP_COMMENT        shift, and go to state 87

    $default  reduce using rule 5 (stmt_list)

    stmt_list   go to state 127
    stmt        go to state 89
    decl        go to state 90
    id          go to state 93
    expr        go to state 132
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 131

    4 stmt_list: stmt stmt_list .

    $default  reduce using rule 4 (stmt_list)


State 132

    7 stmt: expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 134


State 133

   31 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 147


State 134

    7 stmt: expr TOKEN_SEMICOLON .

    $default  reduce using rule 7 (stmt)


State 135

   40 brace: expr TOKEN_COMMA . brace

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    brace       go to state 148
    id          go to state 34
    expr        go to state 149
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 136

   91 factor: id TOKEN_L_PAREN arg_list TOKEN_R_PAREN .

    $default  reduce using rule 91 (factor)


State 137

   43 arg: expr TOKEN_COMMA . arg

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    arg         go to state 150
    id          go to state 34
    expr        go to state 100
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 138

   93 arr_subscr: factor TOKEN_L_BRACKET expr TOKEN_R_BRACKET .

    $default  reduce using rule 93 (arr_subscr)


State 139

   35 param: id TOKEN_COLON type .
   36      | id TOKEN_COLON type . TOKEN_COMMA param

    TOKEN_COMMA  shift, and go to state 151

    $default  reduce using rule 35 (param)


State 140

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr . TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_SEMICOLON  shift, and go to state 152


State 141

   45 for_expr: expr .

    $default  reduce using rule 45 (for_expr)


State 142

   13 stmt: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN stmt
   14     | TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN if_nest TOKEN_ELSE stmt

    TOKEN_R_PAREN  shift, and go to state 153


State 143

    8 stmt: TOKEN_PRINT arg_list TOKEN_SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 144

   10 stmt: TOKEN_RETURN expr TOKEN_SEMICOLON .

    $default  reduce using rule 10 (stmt)


State 145

   15 stmt: TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .

    $default  reduce using rule 15 (stmt)


State 146

   38 brace_list: TOKEN_L_BRACE brace_list TOKEN_R_BRACE . TOKEN_COMMA brace_list
   39           | TOKEN_L_BRACE brace_list TOKEN_R_BRACE .

    TOKEN_COMMA  shift, and go to state 154

    $default  reduce using rule 39 (brace_list)


State 147

   31 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON .

    $default  reduce using rule 31 (decl)


State 148

   40 brace: expr TOKEN_COMMA brace .

    $default  reduce using rule 40 (brace)


State 149

   40 brace: expr . TOKEN_COMMA brace
   41      | expr .

    TOKEN_COMMA  shift, and go to state 135

    $default  reduce using rule 41 (brace)


State 150

   43 arg: expr TOKEN_COMMA arg .

    $default  reduce using rule 43 (arg)


State 151

   36 param: id TOKEN_COLON type TOKEN_COMMA . param

    TOKEN_IDENTIFIER  shift, and go to state 1

    param  go to state 155
    id     go to state 80


State 152

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON . for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    $default  reduce using rule 46 (for_expr)

    for_expr    go to state 156
    id          go to state 34
    expr        go to state 141
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 153

   13 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . stmt
   14     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . if_nest TOKEN_ELSE stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 157
    TOKEN_IF                 shift, and go to state 158
    TOKEN_PRINT              shift, and go to state 159
    TOKEN_RETURN             shift, and go to state 160
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 161
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33
    TOKEN_C_COMMENT          shift, and go to state 162
    TOKEN_CPP_COMMENT        shift, and go to state 163

    stmt        go to state 164
    if_nest     go to state 165
    decl        go to state 166
    id          go to state 93
    expr        go to state 167
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 154

   38 brace_list: TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_COMMA . brace_list

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 168
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    brace_list  go to state 169
    brace       go to state 92
    id          go to state 34
    expr        go to state 149
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 155

   36 param: id TOKEN_COLON type TOKEN_COMMA param .

    $default  reduce using rule 36 (param)


State 156

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr . TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_SEMICOLON  shift, and go to state 170


State 157

   12 stmt: TOKEN_FOR . TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   26 if_nest: TOKEN_FOR . TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_L_PAREN  shift, and go to state 171


State 158

   13 stmt: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   14     | TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   18 if_nest: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest

    TOKEN_L_PAREN  shift, and go to state 172


State 159

    8 stmt: TOKEN_PRINT . arg_list TOKEN_SEMICOLON
    9     | TOKEN_PRINT . TOKEN_SEMICOLON
   22 if_nest: TOKEN_PRINT . arg_list TOKEN_SEMICOLON
   23        | TOKEN_PRINT . TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33
    TOKEN_SEMICOLON          shift, and go to state 173

    arg_list    go to state 174
    arg         go to state 99
    id          go to state 34
    expr        go to state 100
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 160

   10 stmt: TOKEN_RETURN . expr TOKEN_SEMICOLON
   11     | TOKEN_RETURN . TOKEN_SEMICOLON
   24 if_nest: TOKEN_RETURN . expr TOKEN_SEMICOLON
   25        | TOKEN_RETURN . TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33
    TOKEN_SEMICOLON          shift, and go to state 175

    id          go to state 34
    expr        go to state 176
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 161

   15 stmt: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE
   21 if_nest: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 81
    TOKEN_IF                 shift, and go to state 82
    TOKEN_PRINT              shift, and go to state 83
    TOKEN_RETURN             shift, and go to state 84
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 130
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33
    TOKEN_C_COMMENT          shift, and go to state 86
    TOKEN_CPP_COMMENT        shift, and go to state 87

    $default  reduce using rule 5 (stmt_list)

    stmt_list   go to state 177
    stmt        go to state 89
    decl        go to state 90
    id          go to state 93
    expr        go to state 132
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 162

   16 stmt: TOKEN_C_COMMENT .
   27 if_nest: TOKEN_C_COMMENT .

    TOKEN_ELSE  reduce using rule 27 (if_nest)
    $default    reduce using rule 16 (stmt)


State 163

   17 stmt: TOKEN_CPP_COMMENT .
   28 if_nest: TOKEN_CPP_COMMENT .

    TOKEN_ELSE  reduce using rule 28 (if_nest)
    $default    reduce using rule 17 (stmt)


State 164

   13 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN stmt .

    $default  reduce using rule 13 (stmt)


State 165

   14 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest . TOKEN_ELSE stmt

    TOKEN_ELSE  shift, and go to state 178


State 166

    6 stmt: decl .
   19 if_nest: decl .

    TOKEN_ELSE  reduce using rule 19 (if_nest)
    $default    reduce using rule 6 (stmt)


State 167

    7 stmt: expr . TOKEN_SEMICOLON
   20 if_nest: expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 179


State 168

   38 brace_list: TOKEN_L_BRACE . brace_list TOKEN_R_BRACE TOKEN_COMMA brace_list
   39           | TOKEN_L_BRACE . brace_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 168
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    brace_list  go to state 128
    brace       go to state 92
    id          go to state 34
    expr        go to state 149
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 169

   38 brace_list: TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_COMMA brace_list .

    $default  reduce using rule 38 (brace_list)


State 170

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON . for_expr TOKEN_R_PAREN stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    $default  reduce using rule 46 (for_expr)

    for_expr    go to state 180
    id          go to state 34
    expr        go to state 141
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 171

   12 stmt: TOKEN_FOR TOKEN_L_PAREN . for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   26 if_nest: TOKEN_FOR TOKEN_L_PAREN . for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    $default  reduce using rule 46 (for_expr)

    for_expr    go to state 181
    id          go to state 34
    expr        go to state 141
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 172

   13 stmt: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN stmt
   14     | TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   18 if_nest: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    id          go to state 34
    expr        go to state 182
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 173

    9 stmt: TOKEN_PRINT TOKEN_SEMICOLON .
   23 if_nest: TOKEN_PRINT TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 23 (if_nest)
    $default    reduce using rule 9 (stmt)


State 174

    8 stmt: TOKEN_PRINT arg_list . TOKEN_SEMICOLON
   22 if_nest: TOKEN_PRINT arg_list . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 183


State 175

   11 stmt: TOKEN_RETURN TOKEN_SEMICOLON .
   25 if_nest: TOKEN_RETURN TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 25 (if_nest)
    $default    reduce using rule 11 (stmt)


State 176

   10 stmt: TOKEN_RETURN expr . TOKEN_SEMICOLON
   24 if_nest: TOKEN_RETURN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 184


State 177

   15 stmt: TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE
   21 if_nest: TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 185


State 178

   14 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE . stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 81
    TOKEN_IF                 shift, and go to state 82
    TOKEN_PRINT              shift, and go to state 83
    TOKEN_RETURN             shift, and go to state 84
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 130
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33
    TOKEN_C_COMMENT          shift, and go to state 86
    TOKEN_CPP_COMMENT        shift, and go to state 87

    stmt        go to state 186
    decl        go to state 90
    id          go to state 93
    expr        go to state 132
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 179

    7 stmt: expr TOKEN_SEMICOLON .
   20 if_nest: expr TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 20 (if_nest)
    $default    reduce using rule 7 (stmt)


State 180

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr . TOKEN_R_PAREN stmt

    TOKEN_R_PAREN  shift, and go to state 187


State 181

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr . TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   26 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr . TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_SEMICOLON  shift, and go to state 188


State 182

   13 stmt: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN stmt
   14     | TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   18 if_nest: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest

    TOKEN_R_PAREN  shift, and go to state 189


State 183

    8 stmt: TOKEN_PRINT arg_list TOKEN_SEMICOLON .
   22 if_nest: TOKEN_PRINT arg_list TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 22 (if_nest)
    $default    reduce using rule 8 (stmt)


State 184

   10 stmt: TOKEN_RETURN expr TOKEN_SEMICOLON .
   24 if_nest: TOKEN_RETURN expr TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 24 (if_nest)
    $default    reduce using rule 10 (stmt)


State 185

   15 stmt: TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .
   21 if_nest: TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .

    TOKEN_ELSE  reduce using rule 21 (if_nest)
    $default    reduce using rule 15 (stmt)


State 186

   14 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt .

    $default  reduce using rule 14 (stmt)


State 187

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN . stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 81
    TOKEN_IF                 shift, and go to state 82
    TOKEN_PRINT              shift, and go to state 83
    TOKEN_RETURN             shift, and go to state 84
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 130
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33
    TOKEN_C_COMMENT          shift, and go to state 86
    TOKEN_CPP_COMMENT        shift, and go to state 87

    stmt        go to state 190
    decl        go to state 90
    id          go to state 93
    expr        go to state 132
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 188

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON . for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   26 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON . for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    $default  reduce using rule 46 (for_expr)

    for_expr    go to state 191
    id          go to state 34
    expr        go to state 141
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 189

   13 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . stmt
   14     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . if_nest TOKEN_ELSE stmt
   18 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . if_nest TOKEN_ELSE if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 157
    TOKEN_IF                 shift, and go to state 158
    TOKEN_PRINT              shift, and go to state 159
    TOKEN_RETURN             shift, and go to state 160
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 161
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33
    TOKEN_C_COMMENT          shift, and go to state 162
    TOKEN_CPP_COMMENT        shift, and go to state 163

    stmt        go to state 164
    if_nest     go to state 192
    decl        go to state 166
    id          go to state 93
    expr        go to state 167
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 190

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt .

    $default  reduce using rule 12 (stmt)


State 191

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr . TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   26 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr . TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_SEMICOLON  shift, and go to state 193


State 192

   14 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest . TOKEN_ELSE stmt
   18 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest . TOKEN_ELSE if_nest

    TOKEN_ELSE  shift, and go to state 194


State 193

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON . for_expr TOKEN_R_PAREN stmt
   26 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON . for_expr TOKEN_R_PAREN if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33

    $default  reduce using rule 46 (for_expr)

    for_expr    go to state 195
    id          go to state 34
    expr        go to state 141
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 194

   14 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE . stmt
   18 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE . if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 157
    TOKEN_IF                 shift, and go to state 158
    TOKEN_PRINT              shift, and go to state 159
    TOKEN_RETURN             shift, and go to state 160
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 161
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33
    TOKEN_C_COMMENT          shift, and go to state 162
    TOKEN_CPP_COMMENT        shift, and go to state 163

    stmt        go to state 186
    if_nest     go to state 196
    decl        go to state 166
    id          go to state 93
    expr        go to state 167
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 195

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr . TOKEN_R_PAREN stmt
   26 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr . TOKEN_R_PAREN if_nest

    TOKEN_R_PAREN  shift, and go to state 197


State 196

   18 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest .

    $default  reduce using rule 18 (if_nest)


State 197

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN . stmt
   26 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN . if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 157
    TOKEN_IF                 shift, and go to state 158
    TOKEN_PRINT              shift, and go to state 159
    TOKEN_RETURN             shift, and go to state 160
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 161
    TOKEN_NOT                shift, and go to state 31
    TOKEN_ADD                shift, and go to state 32
    TOKEN_SUB                shift, and go to state 33
    TOKEN_C_COMMENT          shift, and go to state 162
    TOKEN_CPP_COMMENT        shift, and go to state 163

    stmt        go to state 190
    if_nest     go to state 198
    decl        go to state 166
    id          go to state 93
    expr        go to state 167
    expr_or     go to state 36
    expr_and    go to state 37
    expr_comp   go to state 38
    expr_add    go to state 39
    expr_mul    go to state 40
    expr_exp    go to state 41
    expr_unary  go to state 42
    exp_post    go to state 43
    factor      go to state 44
    arr_subscr  go to state 45
    literal     go to state 46


State 198

   26 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest .

    $default  reduce using rule 26 (if_nest)
