Terminals unused in grammar

   TOKEN_FUNCTION
   TOKEN_CHARACTER_LITERAL
   TOKEN_STRING_LITERAL
   TOKEN_FLOAT_LITERAL
   TOKEN_ELSE
   TOKEN_FALSE
   TOKEN_FOR
   TOKEN_IF
   TOKEN_PRINT
   TOKEN_RETURN
   TOKEN_TRUE
   TOKEN_WHILE
   TOKEN_AUTO
   TOKEN_L_BRACKET
   TOKEN_R_BRACKET
   TOKEN_L_BRACE
   TOKEN_R_BRACE
   TOKEN_POSTINC
   TOKEN_POSTDEC
   TOKEN_NEG
   TOKEN_NOT
   TOKEN_EXP
   TOKEN_LESS
   TOKEN_LE
   TOKEN_GE
   TOKEN_GREATER
   TOKEN_EQUAL
   TOKEN_NEQUAL
   TOKEN_AND
   TOKEN_OR
   TOKEN_COMMA
   TOKEN_BACKSLASH
   TOKEN_C_COMMENT
   TOKEN_CPP_COMMENT
   TOKEN_ERROR
   TOKEN_EOF


Rules useless in parser due to conflicts

   11 type: TOKEN_CHARACTER


State 10 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: decl TOKEN_SEMICOLON

    2 decl: id TOKEN_COLON type TOKEN_SEMICOLON
    3     | id TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON

    4 id: TOKEN_IDENTIFIER

    5 type: TOKEN_INTEGER
    6     | TOKEN_FLOAT
    7     | TOKEN_BOOLEAN
    8     | TOKEN_CHARACTER
    9     | TOKEN_STRING
   10     | TOKEN_VOID
   11     | TOKEN_CHARACTER
   12     | TOKEN_ARRAY

   13 expr: expr TOKEN_ADD term
   14     | expr TOKEN_SUB term
   15     | term

   16 term: term TOKEN_MUL factor
   17     | term TOKEN_DIV factor
   18     | term TOKEN_MOD factor
   19     | factor

   20 factor: TOKEN_SUB factor
   21       | TOKEN_L_PAREN expr TOKEN_R_PAREN
   22       | TOKEN_INTEGER_LITERAL


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_ARRAY (258) 12
TOKEN_BOOLEAN (259) 7
TOKEN_CHARACTER (260) 8 11
TOKEN_FLOAT (261) 6
TOKEN_FUNCTION (262)
TOKEN_INTEGER (263) 5
TOKEN_STRING (264) 9
TOKEN_VOID (265) 10
TOKEN_INTEGER_LITERAL (266) 22
TOKEN_CHARACTER_LITERAL (267)
TOKEN_STRING_LITERAL (268)
TOKEN_FLOAT_LITERAL (269)
TOKEN_ELSE (270)
TOKEN_FALSE (271)
TOKEN_FOR (272)
TOKEN_IF (273)
TOKEN_PRINT (274)
TOKEN_RETURN (275)
TOKEN_TRUE (276)
TOKEN_WHILE (277)
TOKEN_AUTO (278)
TOKEN_IDENTIFIER (279) 4
TOKEN_L_PAREN (280) 21
TOKEN_R_PAREN (281) 21
TOKEN_L_BRACKET (282)
TOKEN_R_BRACKET (283)
TOKEN_L_BRACE (284)
TOKEN_R_BRACE (285)
TOKEN_POSTINC (286)
TOKEN_POSTDEC (287)
TOKEN_NEG (288)
TOKEN_NOT (289)
TOKEN_EXP (290)
TOKEN_MUL (291) 16
TOKEN_DIV (292) 17
TOKEN_MOD (293) 18
TOKEN_ADD (294) 13
TOKEN_SUB (295) 14 20
TOKEN_LESS (296)
TOKEN_LE (297)
TOKEN_GE (298)
TOKEN_GREATER (299)
TOKEN_EQUAL (300)
TOKEN_NEQUAL (301)
TOKEN_AND (302)
TOKEN_OR (303)
TOKEN_ASSIGN (304) 3
TOKEN_SEMICOLON (305) 1 2 3
TOKEN_COLON (306) 2 3
TOKEN_COMMA (307)
TOKEN_BACKSLASH (308)
TOKEN_C_COMMENT (309)
TOKEN_CPP_COMMENT (310)
TOKEN_ERROR (311)
TOKEN_EOF (312)


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
program (59)
    on left: 1, on right: 0
decl (60)
    on left: 2 3, on right: 1
id (61)
    on left: 4, on right: 2 3
type (62)
    on left: 5 6 7 8 9 10 11 12, on right: 2 3
expr (63)
    on left: 13 14 15, on right: 3 13 14 21
term (64)
    on left: 16 17 18 19, on right: 13 14 15 16 17 18
factor (65)
    on left: 20 21 22, on right: 16 17 18 19 20


State 0

    0 $accept: . program $end

    TOKEN_IDENTIFIER  shift, and go to state 1

    program  go to state 2
    decl     go to state 3
    id       go to state 4


State 1

    4 id: TOKEN_IDENTIFIER .

    $default  reduce using rule 4 (id)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: decl . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 6


State 4

    2 decl: id . TOKEN_COLON type TOKEN_SEMICOLON
    3     | id . TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON

    TOKEN_COLON  shift, and go to state 7


State 5

    0 $accept: program $end .

    $default  accept


State 6

    1 program: decl TOKEN_SEMICOLON .

    $default  reduce using rule 1 (program)


State 7

    2 decl: id TOKEN_COLON . type TOKEN_SEMICOLON
    3     | id TOKEN_COLON . type TOKEN_ASSIGN expr TOKEN_SEMICOLON

    TOKEN_ARRAY      shift, and go to state 8
    TOKEN_BOOLEAN    shift, and go to state 9
    TOKEN_CHARACTER  shift, and go to state 10
    TOKEN_FLOAT      shift, and go to state 11
    TOKEN_INTEGER    shift, and go to state 12
    TOKEN_STRING     shift, and go to state 13
    TOKEN_VOID       shift, and go to state 14

    type  go to state 15


State 8

   12 type: TOKEN_ARRAY .

    $default  reduce using rule 12 (type)


State 9

    7 type: TOKEN_BOOLEAN .

    $default  reduce using rule 7 (type)


State 10

    8 type: TOKEN_CHARACTER .
   11     | TOKEN_CHARACTER .

    TOKEN_ASSIGN     reduce using rule 8 (type)
    TOKEN_ASSIGN     [reduce using rule 11 (type)]
    TOKEN_SEMICOLON  reduce using rule 8 (type)
    TOKEN_SEMICOLON  [reduce using rule 11 (type)]
    $default         reduce using rule 8 (type)


State 11

    6 type: TOKEN_FLOAT .

    $default  reduce using rule 6 (type)


State 12

    5 type: TOKEN_INTEGER .

    $default  reduce using rule 5 (type)


State 13

    9 type: TOKEN_STRING .

    $default  reduce using rule 9 (type)


State 14

   10 type: TOKEN_VOID .

    $default  reduce using rule 10 (type)


State 15

    2 decl: id TOKEN_COLON type . TOKEN_SEMICOLON
    3     | id TOKEN_COLON type . TOKEN_ASSIGN expr TOKEN_SEMICOLON

    TOKEN_ASSIGN     shift, and go to state 16
    TOKEN_SEMICOLON  shift, and go to state 17


State 16

    3 decl: id TOKEN_COLON type TOKEN_ASSIGN . expr TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL  shift, and go to state 18
    TOKEN_L_PAREN          shift, and go to state 19
    TOKEN_SUB              shift, and go to state 20

    expr    go to state 21
    term    go to state 22
    factor  go to state 23


State 17

    2 decl: id TOKEN_COLON type TOKEN_SEMICOLON .

    $default  reduce using rule 2 (decl)


State 18

   22 factor: TOKEN_INTEGER_LITERAL .

    $default  reduce using rule 22 (factor)


State 19

   21 factor: TOKEN_L_PAREN . expr TOKEN_R_PAREN

    TOKEN_INTEGER_LITERAL  shift, and go to state 18
    TOKEN_L_PAREN          shift, and go to state 19
    TOKEN_SUB              shift, and go to state 20

    expr    go to state 24
    term    go to state 22
    factor  go to state 23


State 20

   20 factor: TOKEN_SUB . factor

    TOKEN_INTEGER_LITERAL  shift, and go to state 18
    TOKEN_L_PAREN          shift, and go to state 19
    TOKEN_SUB              shift, and go to state 20

    factor  go to state 25


State 21

    3 decl: id TOKEN_COLON type TOKEN_ASSIGN expr . TOKEN_SEMICOLON
   13 expr: expr . TOKEN_ADD term
   14     | expr . TOKEN_SUB term

    TOKEN_ADD        shift, and go to state 26
    TOKEN_SUB        shift, and go to state 27
    TOKEN_SEMICOLON  shift, and go to state 28


State 22

   15 expr: term .
   16 term: term . TOKEN_MUL factor
   17     | term . TOKEN_DIV factor
   18     | term . TOKEN_MOD factor

    TOKEN_MUL  shift, and go to state 29
    TOKEN_DIV  shift, and go to state 30
    TOKEN_MOD  shift, and go to state 31

    $default  reduce using rule 15 (expr)


State 23

   19 term: factor .

    $default  reduce using rule 19 (term)


State 24

   13 expr: expr . TOKEN_ADD term
   14     | expr . TOKEN_SUB term
   21 factor: TOKEN_L_PAREN expr . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 32
    TOKEN_ADD      shift, and go to state 26
    TOKEN_SUB      shift, and go to state 27


State 25

   20 factor: TOKEN_SUB factor .

    $default  reduce using rule 20 (factor)


State 26

   13 expr: expr TOKEN_ADD . term

    TOKEN_INTEGER_LITERAL  shift, and go to state 18
    TOKEN_L_PAREN          shift, and go to state 19
    TOKEN_SUB              shift, and go to state 20

    term    go to state 33
    factor  go to state 23


State 27

   14 expr: expr TOKEN_SUB . term

    TOKEN_INTEGER_LITERAL  shift, and go to state 18
    TOKEN_L_PAREN          shift, and go to state 19
    TOKEN_SUB              shift, and go to state 20

    term    go to state 34
    factor  go to state 23


State 28

    3 decl: id TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON .

    $default  reduce using rule 3 (decl)


State 29

   16 term: term TOKEN_MUL . factor

    TOKEN_INTEGER_LITERAL  shift, and go to state 18
    TOKEN_L_PAREN          shift, and go to state 19
    TOKEN_SUB              shift, and go to state 20

    factor  go to state 35


State 30

   17 term: term TOKEN_DIV . factor

    TOKEN_INTEGER_LITERAL  shift, and go to state 18
    TOKEN_L_PAREN          shift, and go to state 19
    TOKEN_SUB              shift, and go to state 20

    factor  go to state 36


State 31

   18 term: term TOKEN_MOD . factor

    TOKEN_INTEGER_LITERAL  shift, and go to state 18
    TOKEN_L_PAREN          shift, and go to state 19
    TOKEN_SUB              shift, and go to state 20

    factor  go to state 37


State 32

   21 factor: TOKEN_L_PAREN expr TOKEN_R_PAREN .

    $default  reduce using rule 21 (factor)


State 33

   13 expr: expr TOKEN_ADD term .
   16 term: term . TOKEN_MUL factor
   17     | term . TOKEN_DIV factor
   18     | term . TOKEN_MOD factor

    TOKEN_MUL  shift, and go to state 29
    TOKEN_DIV  shift, and go to state 30
    TOKEN_MOD  shift, and go to state 31

    $default  reduce using rule 13 (expr)


State 34

   14 expr: expr TOKEN_SUB term .
   16 term: term . TOKEN_MUL factor
   17     | term . TOKEN_DIV factor
   18     | term . TOKEN_MOD factor

    TOKEN_MUL  shift, and go to state 29
    TOKEN_DIV  shift, and go to state 30
    TOKEN_MOD  shift, and go to state 31

    $default  reduce using rule 14 (expr)


State 35

   16 term: term TOKEN_MUL factor .

    $default  reduce using rule 16 (term)


State 36

   17 term: term TOKEN_DIV factor .

    $default  reduce using rule 17 (term)


State 37

   18 term: term TOKEN_MOD factor .

    $default  reduce using rule 18 (term)
