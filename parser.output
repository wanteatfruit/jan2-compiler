Terminals unused in grammar

   TOKEN_WHILE
   TOKEN_AUTO
   TOKEN_NEG
   TOKEN_BACKSLASH
   TOKEN_C_COMMENT
   TOKEN_CPP_COMMENT
   TOKEN_ERROR


Grammar

    0 $accept: program $end

    1 program: decl_list TOKEN_EOF

    2 decl_list: decl decl_list
    3          | %empty

    4 stmt_list: stmt stmt_list
    5          | %empty

    6 stmt: decl
    7     | expr TOKEN_SEMICOLON
    8     | TOKEN_PRINT arg_list TOKEN_SEMICOLON
    9     | TOKEN_PRINT TOKEN_SEMICOLON
   10     | TOKEN_RETURN expr TOKEN_SEMICOLON
   11     | TOKEN_RETURN TOKEN_SEMICOLON
   12     | TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   13     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   14     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   15     | TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

   16 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest
   17        | decl
   18        | expr TOKEN_SEMICOLON
   19        | TOKEN_L_BRACE stmt_list TOKEN_R_BRACE
   20        | TOKEN_PRINT arg_list TOKEN_SEMICOLON
   21        | TOKEN_PRINT TOKEN_SEMICOLON
   22        | TOKEN_RETURN expr TOKEN_SEMICOLON
   23        | TOKEN_RETURN TOKEN_SEMICOLON
   24        | TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

   25 decl: id TOKEN_COLON type TOKEN_SEMICOLON
   26     | id TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   27     | id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   28     | id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

   29 param_list: param
   30           | %empty

   31 param: id TOKEN_COLON type
   32      | id TOKEN_COLON type TOKEN_COMMA param

   33 brace_list: brace
   34           | TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_COMMA brace_list
   35           | TOKEN_L_BRACE brace_list TOKEN_R_BRACE

   36 brace: expr TOKEN_COMMA brace
   37      | expr

   38 arg_list: arg

   39 arg: expr TOKEN_COMMA arg
   40    | expr

   41 for_expr: expr
   42         | %empty

   43 type: TOKEN_INTEGER
   44     | TOKEN_FLOAT
   45     | TOKEN_BOOLEAN
   46     | TOKEN_CHARACTER
   47     | TOKEN_STRING
   48     | TOKEN_VOID
   49     | TOKEN_ARRAY TOKEN_L_BRACKET TOKEN_R_BRACKET type
   50     | TOKEN_ARRAY TOKEN_L_BRACKET expr TOKEN_R_BRACKET type
   51     | TOKEN_FUNCTION type TOKEN_L_PAREN param_list TOKEN_R_PAREN

   52 id: TOKEN_IDENTIFIER

   53 expr: id TOKEN_ASSIGN expr
   54     | arr_subscr TOKEN_ASSIGN expr
   55     | expr_or

   56 expr_or: expr_and TOKEN_OR expr_or
   57        | expr_and

   58 expr_and: expr_comp TOKEN_AND expr_and
   59         | expr_comp

   60 expr_comp: expr_add TOKEN_EQUAL expr_comp
   61          | expr_add TOKEN_LESS expr_comp
   62          | expr_add TOKEN_NEQUAL expr_comp
   63          | expr_add TOKEN_LE expr_comp
   64          | expr_add TOKEN_GE expr_comp
   65          | expr_add TOKEN_GREATER expr_comp
   66          | expr_add

   67 expr_add: expr_mul TOKEN_ADD expr_add
   68         | expr_mul TOKEN_SUB expr_add
   69         | expr_mul

   70 expr_mul: expr_exp TOKEN_MUL expr_mul
   71         | expr_exp TOKEN_DIV expr_mul
   72         | expr_exp TOKEN_MOD expr_mul
   73         | expr_exp

   74 expr_exp: expr_unary TOKEN_EXP expr_exp
   75         | expr_unary

   76 expr_unary: TOKEN_SUB expr_unary
   77           | TOKEN_NOT expr_unary
   78           | exp_post

   79 exp_post: factor TOKEN_POSTINC
   80         | factor TOKEN_POSTDEC
   81         | factor

   82 factor: TOKEN_L_PAREN expr TOKEN_R_PAREN
   83       | arr_subscr
   84       | literal
   85       | id
   86       | id TOKEN_L_PAREN arg_list TOKEN_R_PAREN
   87       | id TOKEN_L_PAREN TOKEN_R_PAREN

   88 arr_subscr: factor TOKEN_L_BRACKET expr TOKEN_R_BRACKET

   89 literal: TOKEN_INTEGER_LITERAL
   90        | TOKEN_FLOAT_LITERAL
   91        | TOKEN_CHARACTER_LITERAL
   92        | TOKEN_STRING_LITERAL
   93        | TOKEN_TRUE
   94        | TOKEN_FALSE


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_ARRAY (258) 49 50
TOKEN_BOOLEAN (259) 45
TOKEN_CHARACTER (260) 46
TOKEN_FLOAT (261) 44
TOKEN_FUNCTION (262) 51
TOKEN_INTEGER (263) 43
TOKEN_STRING (264) 47
TOKEN_VOID (265) 48
TOKEN_INTEGER_LITERAL (266) 89
TOKEN_CHARACTER_LITERAL (267) 91
TOKEN_STRING_LITERAL (268) 92
TOKEN_FLOAT_LITERAL (269) 90
TOKEN_ELSE (270) 14 16
TOKEN_FALSE (271) 94
TOKEN_FOR (272) 12 24
TOKEN_IF (273) 13 14 16
TOKEN_PRINT (274) 8 9 20 21
TOKEN_RETURN (275) 10 11 22 23
TOKEN_TRUE (276) 93
TOKEN_WHILE (277)
TOKEN_AUTO (278)
TOKEN_IDENTIFIER (279) 52
TOKEN_L_PAREN (280) 12 13 14 16 24 51 82 86 87
TOKEN_R_PAREN (281) 12 13 14 16 24 51 82 86 87
TOKEN_L_BRACKET (282) 49 50 88
TOKEN_R_BRACKET (283) 49 50 88
TOKEN_L_BRACE (284) 15 19 27 28 34 35
TOKEN_R_BRACE (285) 15 19 27 28 34 35
TOKEN_POSTINC (286) 79
TOKEN_POSTDEC (287) 80
TOKEN_NEG (288)
TOKEN_NOT (289) 77
TOKEN_EXP (290) 74
TOKEN_MUL (291) 70
TOKEN_DIV (292) 71
TOKEN_MOD (293) 72
TOKEN_ADD (294) 67
TOKEN_SUB (295) 68 76
TOKEN_LESS (296) 61
TOKEN_LE (297) 63
TOKEN_GE (298) 64
TOKEN_GREATER (299) 65
TOKEN_EQUAL (300) 60
TOKEN_NEQUAL (301) 62
TOKEN_AND (302) 58
TOKEN_OR (303) 56
TOKEN_ASSIGN (304) 26 27 28 53 54
TOKEN_SEMICOLON (305) 7 8 9 10 11 12 18 20 21 22 23 24 25 26 27
TOKEN_COLON (306) 25 26 27 28 31 32
TOKEN_COMMA (307) 32 34 36 39
TOKEN_BACKSLASH (308)
TOKEN_C_COMMENT (309)
TOKEN_CPP_COMMENT (310)
TOKEN_ERROR (311)
TOKEN_EOF (312) 1


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
program (59)
    on left: 1, on right: 0
decl_list (60)
    on left: 2 3, on right: 1 2
stmt_list (61)
    on left: 4 5, on right: 4 15 19 28
stmt (62)
    on left: 6 7 8 9 10 11 12 13 14 15, on right: 4 12 13 14
if_nest (63)
    on left: 16 17 18 19 20 21 22 23 24, on right: 14 16 24
decl (64)
    on left: 25 26 27 28, on right: 2 6 17
param_list (65)
    on left: 29 30, on right: 51
param (66)
    on left: 31 32, on right: 29 32
brace_list (67)
    on left: 33 34 35, on right: 27 34 35
brace (68)
    on left: 36 37, on right: 33 36
arg_list (69)
    on left: 38, on right: 8 20 86
arg (70)
    on left: 39 40, on right: 38 39
for_expr (71)
    on left: 41 42, on right: 12 24
type (72)
    on left: 43 44 45 46 47 48 49 50 51, on right: 25 26 27 28 31 32
    49 50 51
id (73)
    on left: 52, on right: 25 26 27 28 31 32 53 85 86 87
expr (74)
    on left: 53 54 55, on right: 7 10 13 14 16 18 22 26 36 37 39 40
    41 50 53 54 82 88
expr_or (75)
    on left: 56 57, on right: 55 56
expr_and (76)
    on left: 58 59, on right: 56 57 58
expr_comp (77)
    on left: 60 61 62 63 64 65 66, on right: 58 59 60 61 62 63 64 65
expr_add (78)
    on left: 67 68 69, on right: 60 61 62 63 64 65 66 67 68
expr_mul (79)
    on left: 70 71 72 73, on right: 67 68 69 70 71 72
expr_exp (80)
    on left: 74 75, on right: 70 71 72 73 74
expr_unary (81)
    on left: 76 77 78, on right: 74 75 76 77
exp_post (82)
    on left: 79 80 81, on right: 78
factor (83)
    on left: 82 83 84 85 86 87, on right: 79 80 81 88
arr_subscr (84)
    on left: 88, on right: 54 83
literal (85)
    on left: 89 90 91 92 93 94, on right: 84


State 0

    0 $accept: . program $end

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 3 (decl_list)

    program    go to state 2
    decl_list  go to state 3
    decl       go to state 4
    id         go to state 5


State 1

   52 id: TOKEN_IDENTIFIER .

    $default  reduce using rule 52 (id)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: decl_list . TOKEN_EOF

    TOKEN_EOF  shift, and go to state 7


State 4

    2 decl_list: decl . decl_list

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 3 (decl_list)

    decl_list  go to state 8
    decl       go to state 4
    id         go to state 5


State 5

   25 decl: id . TOKEN_COLON type TOKEN_SEMICOLON
   26     | id . TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   27     | id . TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   28     | id . TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

    TOKEN_COLON  shift, and go to state 9


State 6

    0 $accept: program $end .

    $default  accept


State 7

    1 program: decl_list TOKEN_EOF .

    $default  reduce using rule 1 (program)


State 8

    2 decl_list: decl decl_list .

    $default  reduce using rule 2 (decl_list)


State 9

   25 decl: id TOKEN_COLON . type TOKEN_SEMICOLON
   26     | id TOKEN_COLON . type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   27     | id TOKEN_COLON . type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   28     | id TOKEN_COLON . type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

    TOKEN_ARRAY      shift, and go to state 10
    TOKEN_BOOLEAN    shift, and go to state 11
    TOKEN_CHARACTER  shift, and go to state 12
    TOKEN_FLOAT      shift, and go to state 13
    TOKEN_FUNCTION   shift, and go to state 14
    TOKEN_INTEGER    shift, and go to state 15
    TOKEN_STRING     shift, and go to state 16
    TOKEN_VOID       shift, and go to state 17

    type  go to state 18


State 10

   49 type: TOKEN_ARRAY . TOKEN_L_BRACKET TOKEN_R_BRACKET type
   50     | TOKEN_ARRAY . TOKEN_L_BRACKET expr TOKEN_R_BRACKET type

    TOKEN_L_BRACKET  shift, and go to state 19


State 11

   45 type: TOKEN_BOOLEAN .

    $default  reduce using rule 45 (type)


State 12

   46 type: TOKEN_CHARACTER .

    $default  reduce using rule 46 (type)


State 13

   44 type: TOKEN_FLOAT .

    $default  reduce using rule 44 (type)


State 14

   51 type: TOKEN_FUNCTION . type TOKEN_L_PAREN param_list TOKEN_R_PAREN

    TOKEN_ARRAY      shift, and go to state 10
    TOKEN_BOOLEAN    shift, and go to state 11
    TOKEN_CHARACTER  shift, and go to state 12
    TOKEN_FLOAT      shift, and go to state 13
    TOKEN_FUNCTION   shift, and go to state 14
    TOKEN_INTEGER    shift, and go to state 15
    TOKEN_STRING     shift, and go to state 16
    TOKEN_VOID       shift, and go to state 17

    type  go to state 20


State 15

   43 type: TOKEN_INTEGER .

    $default  reduce using rule 43 (type)


State 16

   47 type: TOKEN_STRING .

    $default  reduce using rule 47 (type)


State 17

   48 type: TOKEN_VOID .

    $default  reduce using rule 48 (type)


State 18

   25 decl: id TOKEN_COLON type . TOKEN_SEMICOLON
   26     | id TOKEN_COLON type . TOKEN_ASSIGN expr TOKEN_SEMICOLON
   27     | id TOKEN_COLON type . TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   28     | id TOKEN_COLON type . TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

    TOKEN_ASSIGN     shift, and go to state 21
    TOKEN_SEMICOLON  shift, and go to state 22


State 19

   49 type: TOKEN_ARRAY TOKEN_L_BRACKET . TOKEN_R_BRACKET type
   50     | TOKEN_ARRAY TOKEN_L_BRACKET . expr TOKEN_R_BRACKET type

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_R_BRACKET          shift, and go to state 30
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 33
    expr        go to state 34
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 20

   51 type: TOKEN_FUNCTION type . TOKEN_L_PAREN param_list TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 46


State 21

   26 decl: id TOKEN_COLON type TOKEN_ASSIGN . expr TOKEN_SEMICOLON
   27     | id TOKEN_COLON type TOKEN_ASSIGN . TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   28     | id TOKEN_COLON type TOKEN_ASSIGN . TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 47
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 33
    expr        go to state 48
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 22

   25 decl: id TOKEN_COLON type TOKEN_SEMICOLON .

    $default  reduce using rule 25 (decl)


State 23

   89 literal: TOKEN_INTEGER_LITERAL .

    $default  reduce using rule 89 (literal)


State 24

   91 literal: TOKEN_CHARACTER_LITERAL .

    $default  reduce using rule 91 (literal)


State 25

   92 literal: TOKEN_STRING_LITERAL .

    $default  reduce using rule 92 (literal)


State 26

   90 literal: TOKEN_FLOAT_LITERAL .

    $default  reduce using rule 90 (literal)


State 27

   94 literal: TOKEN_FALSE .

    $default  reduce using rule 94 (literal)


State 28

   93 literal: TOKEN_TRUE .

    $default  reduce using rule 93 (literal)


State 29

   82 factor: TOKEN_L_PAREN . expr TOKEN_R_PAREN

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 33
    expr        go to state 49
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 30

   49 type: TOKEN_ARRAY TOKEN_L_BRACKET TOKEN_R_BRACKET . type

    TOKEN_ARRAY      shift, and go to state 10
    TOKEN_BOOLEAN    shift, and go to state 11
    TOKEN_CHARACTER  shift, and go to state 12
    TOKEN_FLOAT      shift, and go to state 13
    TOKEN_FUNCTION   shift, and go to state 14
    TOKEN_INTEGER    shift, and go to state 15
    TOKEN_STRING     shift, and go to state 16
    TOKEN_VOID       shift, and go to state 17

    type  go to state 50


State 31

   77 expr_unary: TOKEN_NOT . expr_unary

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 51
    expr_unary  go to state 52
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 53
    literal     go to state 45


State 32

   76 expr_unary: TOKEN_SUB . expr_unary

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 51
    expr_unary  go to state 54
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 53
    literal     go to state 45


State 33

   53 expr: id . TOKEN_ASSIGN expr
   85 factor: id .
   86       | id . TOKEN_L_PAREN arg_list TOKEN_R_PAREN
   87       | id . TOKEN_L_PAREN TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 55
    TOKEN_ASSIGN   shift, and go to state 56

    $default  reduce using rule 85 (factor)


State 34

   50 type: TOKEN_ARRAY TOKEN_L_BRACKET expr . TOKEN_R_BRACKET type

    TOKEN_R_BRACKET  shift, and go to state 57


State 35

   55 expr: expr_or .

    $default  reduce using rule 55 (expr)


State 36

   56 expr_or: expr_and . TOKEN_OR expr_or
   57        | expr_and .

    TOKEN_OR  shift, and go to state 58

    $default  reduce using rule 57 (expr_or)


State 37

   58 expr_and: expr_comp . TOKEN_AND expr_and
   59         | expr_comp .

    TOKEN_AND  shift, and go to state 59

    $default  reduce using rule 59 (expr_and)


State 38

   60 expr_comp: expr_add . TOKEN_EQUAL expr_comp
   61          | expr_add . TOKEN_LESS expr_comp
   62          | expr_add . TOKEN_NEQUAL expr_comp
   63          | expr_add . TOKEN_LE expr_comp
   64          | expr_add . TOKEN_GE expr_comp
   65          | expr_add . TOKEN_GREATER expr_comp
   66          | expr_add .

    TOKEN_LESS     shift, and go to state 60
    TOKEN_LE       shift, and go to state 61
    TOKEN_GE       shift, and go to state 62
    TOKEN_GREATER  shift, and go to state 63
    TOKEN_EQUAL    shift, and go to state 64
    TOKEN_NEQUAL   shift, and go to state 65

    $default  reduce using rule 66 (expr_comp)


State 39

   67 expr_add: expr_mul . TOKEN_ADD expr_add
   68         | expr_mul . TOKEN_SUB expr_add
   69         | expr_mul .

    TOKEN_ADD  shift, and go to state 66
    TOKEN_SUB  shift, and go to state 67

    $default  reduce using rule 69 (expr_add)


State 40

   70 expr_mul: expr_exp . TOKEN_MUL expr_mul
   71         | expr_exp . TOKEN_DIV expr_mul
   72         | expr_exp . TOKEN_MOD expr_mul
   73         | expr_exp .

    TOKEN_MUL  shift, and go to state 68
    TOKEN_DIV  shift, and go to state 69
    TOKEN_MOD  shift, and go to state 70

    $default  reduce using rule 73 (expr_mul)


State 41

   74 expr_exp: expr_unary . TOKEN_EXP expr_exp
   75         | expr_unary .

    TOKEN_EXP  shift, and go to state 71

    $default  reduce using rule 75 (expr_exp)


State 42

   78 expr_unary: exp_post .

    $default  reduce using rule 78 (expr_unary)


State 43

   79 exp_post: factor . TOKEN_POSTINC
   80         | factor . TOKEN_POSTDEC
   81         | factor .
   88 arr_subscr: factor . TOKEN_L_BRACKET expr TOKEN_R_BRACKET

    TOKEN_L_BRACKET  shift, and go to state 72
    TOKEN_POSTINC    shift, and go to state 73
    TOKEN_POSTDEC    shift, and go to state 74

    $default  reduce using rule 81 (exp_post)


State 44

   54 expr: arr_subscr . TOKEN_ASSIGN expr
   83 factor: arr_subscr .

    TOKEN_ASSIGN  shift, and go to state 75

    $default  reduce using rule 83 (factor)


State 45

   84 factor: literal .

    $default  reduce using rule 84 (factor)


State 46

   51 type: TOKEN_FUNCTION type TOKEN_L_PAREN . param_list TOKEN_R_PAREN

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 30 (param_list)

    param_list  go to state 76
    param       go to state 77
    id          go to state 78


State 47

   27 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE . brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   28     | id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 79
    TOKEN_IF                 shift, and go to state 80
    TOKEN_PRINT              shift, and go to state 81
    TOKEN_RETURN             shift, and go to state 82
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 83
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    $default  reduce using rule 5 (stmt_list)

    stmt_list   go to state 84
    stmt        go to state 85
    decl        go to state 86
    brace_list  go to state 87
    brace       go to state 88
    id          go to state 89
    expr        go to state 90
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 48

   26 decl: id TOKEN_COLON type TOKEN_ASSIGN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 91


State 49

   82 factor: TOKEN_L_PAREN expr . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 92


State 50

   49 type: TOKEN_ARRAY TOKEN_L_BRACKET TOKEN_R_BRACKET type .

    $default  reduce using rule 49 (type)


State 51

   85 factor: id .
   86       | id . TOKEN_L_PAREN arg_list TOKEN_R_PAREN
   87       | id . TOKEN_L_PAREN TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 55

    $default  reduce using rule 85 (factor)


State 52

   77 expr_unary: TOKEN_NOT expr_unary .

    $default  reduce using rule 77 (expr_unary)


State 53

   83 factor: arr_subscr .

    $default  reduce using rule 83 (factor)


State 54

   76 expr_unary: TOKEN_SUB expr_unary .

    $default  reduce using rule 76 (expr_unary)


State 55

   86 factor: id TOKEN_L_PAREN . arg_list TOKEN_R_PAREN
   87       | id TOKEN_L_PAREN . TOKEN_R_PAREN

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_R_PAREN            shift, and go to state 93
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    arg_list    go to state 94
    arg         go to state 95
    id          go to state 33
    expr        go to state 96
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 56

   53 expr: id TOKEN_ASSIGN . expr

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 33
    expr        go to state 97
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 57

   50 type: TOKEN_ARRAY TOKEN_L_BRACKET expr TOKEN_R_BRACKET . type

    TOKEN_ARRAY      shift, and go to state 10
    TOKEN_BOOLEAN    shift, and go to state 11
    TOKEN_CHARACTER  shift, and go to state 12
    TOKEN_FLOAT      shift, and go to state 13
    TOKEN_FUNCTION   shift, and go to state 14
    TOKEN_INTEGER    shift, and go to state 15
    TOKEN_STRING     shift, and go to state 16
    TOKEN_VOID       shift, and go to state 17

    type  go to state 98


State 58

   56 expr_or: expr_and TOKEN_OR . expr_or

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 51
    expr_or     go to state 99
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 53
    literal     go to state 45


State 59

   58 expr_and: expr_comp TOKEN_AND . expr_and

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 51
    expr_and    go to state 100
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 53
    literal     go to state 45


State 60

   61 expr_comp: expr_add TOKEN_LESS . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 51
    expr_comp   go to state 101
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 53
    literal     go to state 45


State 61

   63 expr_comp: expr_add TOKEN_LE . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 51
    expr_comp   go to state 102
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 53
    literal     go to state 45


State 62

   64 expr_comp: expr_add TOKEN_GE . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 51
    expr_comp   go to state 103
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 53
    literal     go to state 45


State 63

   65 expr_comp: expr_add TOKEN_GREATER . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 51
    expr_comp   go to state 104
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 53
    literal     go to state 45


State 64

   60 expr_comp: expr_add TOKEN_EQUAL . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 51
    expr_comp   go to state 105
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 53
    literal     go to state 45


State 65

   62 expr_comp: expr_add TOKEN_NEQUAL . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 51
    expr_comp   go to state 106
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 53
    literal     go to state 45


State 66

   67 expr_add: expr_mul TOKEN_ADD . expr_add

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 51
    expr_add    go to state 107
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 53
    literal     go to state 45


State 67

   68 expr_add: expr_mul TOKEN_SUB . expr_add

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 51
    expr_add    go to state 108
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 53
    literal     go to state 45


State 68

   70 expr_mul: expr_exp TOKEN_MUL . expr_mul

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 51
    expr_mul    go to state 109
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 53
    literal     go to state 45


State 69

   71 expr_mul: expr_exp TOKEN_DIV . expr_mul

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 51
    expr_mul    go to state 110
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 53
    literal     go to state 45


State 70

   72 expr_mul: expr_exp TOKEN_MOD . expr_mul

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 51
    expr_mul    go to state 111
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 53
    literal     go to state 45


State 71

   74 expr_exp: expr_unary TOKEN_EXP . expr_exp

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 51
    expr_exp    go to state 112
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 53
    literal     go to state 45


State 72

   88 arr_subscr: factor TOKEN_L_BRACKET . expr TOKEN_R_BRACKET

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 33
    expr        go to state 113
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 73

   79 exp_post: factor TOKEN_POSTINC .

    $default  reduce using rule 79 (exp_post)


State 74

   80 exp_post: factor TOKEN_POSTDEC .

    $default  reduce using rule 80 (exp_post)


State 75

   54 expr: arr_subscr TOKEN_ASSIGN . expr

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 33
    expr        go to state 114
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 76

   51 type: TOKEN_FUNCTION type TOKEN_L_PAREN param_list . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 115


State 77

   29 param_list: param .

    $default  reduce using rule 29 (param_list)


State 78

   31 param: id . TOKEN_COLON type
   32      | id . TOKEN_COLON type TOKEN_COMMA param

    TOKEN_COLON  shift, and go to state 116


State 79

   12 stmt: TOKEN_FOR . TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_L_PAREN  shift, and go to state 117


State 80

   13 stmt: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   14     | TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt

    TOKEN_L_PAREN  shift, and go to state 118


State 81

    8 stmt: TOKEN_PRINT . arg_list TOKEN_SEMICOLON
    9     | TOKEN_PRINT . TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32
    TOKEN_SEMICOLON          shift, and go to state 119

    arg_list    go to state 120
    arg         go to state 95
    id          go to state 33
    expr        go to state 96
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 82

   10 stmt: TOKEN_RETURN . expr TOKEN_SEMICOLON
   11     | TOKEN_RETURN . TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32
    TOKEN_SEMICOLON          shift, and go to state 121

    id          go to state 33
    expr        go to state 122
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 83

   15 stmt: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE
   34 brace_list: TOKEN_L_BRACE . brace_list TOKEN_R_BRACE TOKEN_COMMA brace_list
   35           | TOKEN_L_BRACE . brace_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 79
    TOKEN_IF                 shift, and go to state 80
    TOKEN_PRINT              shift, and go to state 81
    TOKEN_RETURN             shift, and go to state 82
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 83
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    $default  reduce using rule 5 (stmt_list)

    stmt_list   go to state 123
    stmt        go to state 85
    decl        go to state 86
    brace_list  go to state 124
    brace       go to state 88
    id          go to state 89
    expr        go to state 90
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 84

   28 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 125


State 85

    4 stmt_list: stmt . stmt_list

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 79
    TOKEN_IF                 shift, and go to state 80
    TOKEN_PRINT              shift, and go to state 81
    TOKEN_RETURN             shift, and go to state 82
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 126
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    $default  reduce using rule 5 (stmt_list)

    stmt_list   go to state 127
    stmt        go to state 85
    decl        go to state 86
    id          go to state 89
    expr        go to state 128
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 86

    6 stmt: decl .

    $default  reduce using rule 6 (stmt)


State 87

   27 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list . TOKEN_R_BRACE TOKEN_SEMICOLON

    TOKEN_R_BRACE  shift, and go to state 129


State 88

   33 brace_list: brace .

    $default  reduce using rule 33 (brace_list)


State 89

   25 decl: id . TOKEN_COLON type TOKEN_SEMICOLON
   26     | id . TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   27     | id . TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   28     | id . TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE
   53 expr: id . TOKEN_ASSIGN expr
   85 factor: id .
   86       | id . TOKEN_L_PAREN arg_list TOKEN_R_PAREN
   87       | id . TOKEN_L_PAREN TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 55
    TOKEN_ASSIGN   shift, and go to state 56
    TOKEN_COLON    shift, and go to state 9

    $default  reduce using rule 85 (factor)


State 90

    7 stmt: expr . TOKEN_SEMICOLON
   36 brace: expr . TOKEN_COMMA brace
   37      | expr .

    TOKEN_SEMICOLON  shift, and go to state 130
    TOKEN_COMMA      shift, and go to state 131

    $default  reduce using rule 37 (brace)


State 91

   26 decl: id TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON .

    $default  reduce using rule 26 (decl)


State 92

   82 factor: TOKEN_L_PAREN expr TOKEN_R_PAREN .

    $default  reduce using rule 82 (factor)


State 93

   87 factor: id TOKEN_L_PAREN TOKEN_R_PAREN .

    $default  reduce using rule 87 (factor)


State 94

   86 factor: id TOKEN_L_PAREN arg_list . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 132


State 95

   38 arg_list: arg .

    $default  reduce using rule 38 (arg_list)


State 96

   39 arg: expr . TOKEN_COMMA arg
   40    | expr .

    TOKEN_COMMA  shift, and go to state 133

    $default  reduce using rule 40 (arg)


State 97

   53 expr: id TOKEN_ASSIGN expr .

    $default  reduce using rule 53 (expr)


State 98

   50 type: TOKEN_ARRAY TOKEN_L_BRACKET expr TOKEN_R_BRACKET type .

    $default  reduce using rule 50 (type)


State 99

   56 expr_or: expr_and TOKEN_OR expr_or .

    $default  reduce using rule 56 (expr_or)


State 100

   58 expr_and: expr_comp TOKEN_AND expr_and .

    $default  reduce using rule 58 (expr_and)


State 101

   61 expr_comp: expr_add TOKEN_LESS expr_comp .

    $default  reduce using rule 61 (expr_comp)


State 102

   63 expr_comp: expr_add TOKEN_LE expr_comp .

    $default  reduce using rule 63 (expr_comp)


State 103

   64 expr_comp: expr_add TOKEN_GE expr_comp .

    $default  reduce using rule 64 (expr_comp)


State 104

   65 expr_comp: expr_add TOKEN_GREATER expr_comp .

    $default  reduce using rule 65 (expr_comp)


State 105

   60 expr_comp: expr_add TOKEN_EQUAL expr_comp .

    $default  reduce using rule 60 (expr_comp)


State 106

   62 expr_comp: expr_add TOKEN_NEQUAL expr_comp .

    $default  reduce using rule 62 (expr_comp)


State 107

   67 expr_add: expr_mul TOKEN_ADD expr_add .

    $default  reduce using rule 67 (expr_add)


State 108

   68 expr_add: expr_mul TOKEN_SUB expr_add .

    $default  reduce using rule 68 (expr_add)


State 109

   70 expr_mul: expr_exp TOKEN_MUL expr_mul .

    $default  reduce using rule 70 (expr_mul)


State 110

   71 expr_mul: expr_exp TOKEN_DIV expr_mul .

    $default  reduce using rule 71 (expr_mul)


State 111

   72 expr_mul: expr_exp TOKEN_MOD expr_mul .

    $default  reduce using rule 72 (expr_mul)


State 112

   74 expr_exp: expr_unary TOKEN_EXP expr_exp .

    $default  reduce using rule 74 (expr_exp)


State 113

   88 arr_subscr: factor TOKEN_L_BRACKET expr . TOKEN_R_BRACKET

    TOKEN_R_BRACKET  shift, and go to state 134


State 114

   54 expr: arr_subscr TOKEN_ASSIGN expr .

    $default  reduce using rule 54 (expr)


State 115

   51 type: TOKEN_FUNCTION type TOKEN_L_PAREN param_list TOKEN_R_PAREN .

    $default  reduce using rule 51 (type)


State 116

   31 param: id TOKEN_COLON . type
   32      | id TOKEN_COLON . type TOKEN_COMMA param

    TOKEN_ARRAY      shift, and go to state 10
    TOKEN_BOOLEAN    shift, and go to state 11
    TOKEN_CHARACTER  shift, and go to state 12
    TOKEN_FLOAT      shift, and go to state 13
    TOKEN_FUNCTION   shift, and go to state 14
    TOKEN_INTEGER    shift, and go to state 15
    TOKEN_STRING     shift, and go to state 16
    TOKEN_VOID       shift, and go to state 17

    type  go to state 135


State 117

   12 stmt: TOKEN_FOR TOKEN_L_PAREN . for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    $default  reduce using rule 42 (for_expr)

    for_expr    go to state 136
    id          go to state 33
    expr        go to state 137
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 118

   13 stmt: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN stmt
   14     | TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 33
    expr        go to state 138
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 119

    9 stmt: TOKEN_PRINT TOKEN_SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 120

    8 stmt: TOKEN_PRINT arg_list . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 139


State 121

   11 stmt: TOKEN_RETURN TOKEN_SEMICOLON .

    $default  reduce using rule 11 (stmt)


State 122

   10 stmt: TOKEN_RETURN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 140


State 123

   15 stmt: TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 141


State 124

   34 brace_list: TOKEN_L_BRACE brace_list . TOKEN_R_BRACE TOKEN_COMMA brace_list
   35           | TOKEN_L_BRACE brace_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 142


State 125

   28 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .

    $default  reduce using rule 28 (decl)


State 126

   15 stmt: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 79
    TOKEN_IF                 shift, and go to state 80
    TOKEN_PRINT              shift, and go to state 81
    TOKEN_RETURN             shift, and go to state 82
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 126
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    $default  reduce using rule 5 (stmt_list)

    stmt_list   go to state 123
    stmt        go to state 85
    decl        go to state 86
    id          go to state 89
    expr        go to state 128
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 127

    4 stmt_list: stmt stmt_list .

    $default  reduce using rule 4 (stmt_list)


State 128

    7 stmt: expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 130


State 129

   27 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 143


State 130

    7 stmt: expr TOKEN_SEMICOLON .

    $default  reduce using rule 7 (stmt)


State 131

   36 brace: expr TOKEN_COMMA . brace

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    brace       go to state 144
    id          go to state 33
    expr        go to state 145
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 132

   86 factor: id TOKEN_L_PAREN arg_list TOKEN_R_PAREN .

    $default  reduce using rule 86 (factor)


State 133

   39 arg: expr TOKEN_COMMA . arg

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    arg         go to state 146
    id          go to state 33
    expr        go to state 96
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 134

   88 arr_subscr: factor TOKEN_L_BRACKET expr TOKEN_R_BRACKET .

    $default  reduce using rule 88 (arr_subscr)


State 135

   31 param: id TOKEN_COLON type .
   32      | id TOKEN_COLON type . TOKEN_COMMA param

    TOKEN_COMMA  shift, and go to state 147

    $default  reduce using rule 31 (param)


State 136

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr . TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_SEMICOLON  shift, and go to state 148


State 137

   41 for_expr: expr .

    $default  reduce using rule 41 (for_expr)


State 138

   13 stmt: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN stmt
   14     | TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN if_nest TOKEN_ELSE stmt

    TOKEN_R_PAREN  shift, and go to state 149


State 139

    8 stmt: TOKEN_PRINT arg_list TOKEN_SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 140

   10 stmt: TOKEN_RETURN expr TOKEN_SEMICOLON .

    $default  reduce using rule 10 (stmt)


State 141

   15 stmt: TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .

    $default  reduce using rule 15 (stmt)


State 142

   34 brace_list: TOKEN_L_BRACE brace_list TOKEN_R_BRACE . TOKEN_COMMA brace_list
   35           | TOKEN_L_BRACE brace_list TOKEN_R_BRACE .

    TOKEN_COMMA  shift, and go to state 150

    $default  reduce using rule 35 (brace_list)


State 143

   27 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON .

    $default  reduce using rule 27 (decl)


State 144

   36 brace: expr TOKEN_COMMA brace .

    $default  reduce using rule 36 (brace)


State 145

   36 brace: expr . TOKEN_COMMA brace
   37      | expr .

    TOKEN_COMMA  shift, and go to state 131

    $default  reduce using rule 37 (brace)


State 146

   39 arg: expr TOKEN_COMMA arg .

    $default  reduce using rule 39 (arg)


State 147

   32 param: id TOKEN_COLON type TOKEN_COMMA . param

    TOKEN_IDENTIFIER  shift, and go to state 1

    param  go to state 151
    id     go to state 78


State 148

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON . for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    $default  reduce using rule 42 (for_expr)

    for_expr    go to state 152
    id          go to state 33
    expr        go to state 137
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 149

   13 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . stmt
   14     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . if_nest TOKEN_ELSE stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 153
    TOKEN_IF                 shift, and go to state 154
    TOKEN_PRINT              shift, and go to state 155
    TOKEN_RETURN             shift, and go to state 156
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 157
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    stmt        go to state 158
    if_nest     go to state 159
    decl        go to state 160
    id          go to state 89
    expr        go to state 161
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 150

   34 brace_list: TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_COMMA . brace_list

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 162
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    brace_list  go to state 163
    brace       go to state 88
    id          go to state 33
    expr        go to state 145
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 151

   32 param: id TOKEN_COLON type TOKEN_COMMA param .

    $default  reduce using rule 32 (param)


State 152

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr . TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_SEMICOLON  shift, and go to state 164


State 153

   12 stmt: TOKEN_FOR . TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   24 if_nest: TOKEN_FOR . TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_L_PAREN  shift, and go to state 165


State 154

   13 stmt: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   14     | TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   16 if_nest: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest

    TOKEN_L_PAREN  shift, and go to state 166


State 155

    8 stmt: TOKEN_PRINT . arg_list TOKEN_SEMICOLON
    9     | TOKEN_PRINT . TOKEN_SEMICOLON
   20 if_nest: TOKEN_PRINT . arg_list TOKEN_SEMICOLON
   21        | TOKEN_PRINT . TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32
    TOKEN_SEMICOLON          shift, and go to state 167

    arg_list    go to state 168
    arg         go to state 95
    id          go to state 33
    expr        go to state 96
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 156

   10 stmt: TOKEN_RETURN . expr TOKEN_SEMICOLON
   11     | TOKEN_RETURN . TOKEN_SEMICOLON
   22 if_nest: TOKEN_RETURN . expr TOKEN_SEMICOLON
   23        | TOKEN_RETURN . TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32
    TOKEN_SEMICOLON          shift, and go to state 169

    id          go to state 33
    expr        go to state 170
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 157

   15 stmt: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE
   19 if_nest: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 79
    TOKEN_IF                 shift, and go to state 80
    TOKEN_PRINT              shift, and go to state 81
    TOKEN_RETURN             shift, and go to state 82
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 126
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    $default  reduce using rule 5 (stmt_list)

    stmt_list   go to state 171
    stmt        go to state 85
    decl        go to state 86
    id          go to state 89
    expr        go to state 128
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 158

   13 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN stmt .

    $default  reduce using rule 13 (stmt)


State 159

   14 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest . TOKEN_ELSE stmt

    TOKEN_ELSE  shift, and go to state 172


State 160

    6 stmt: decl .
   17 if_nest: decl .

    TOKEN_ELSE  reduce using rule 17 (if_nest)
    $default    reduce using rule 6 (stmt)


State 161

    7 stmt: expr . TOKEN_SEMICOLON
   18 if_nest: expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 173


State 162

   34 brace_list: TOKEN_L_BRACE . brace_list TOKEN_R_BRACE TOKEN_COMMA brace_list
   35           | TOKEN_L_BRACE . brace_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 162
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    brace_list  go to state 124
    brace       go to state 88
    id          go to state 33
    expr        go to state 145
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 163

   34 brace_list: TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_COMMA brace_list .

    $default  reduce using rule 34 (brace_list)


State 164

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON . for_expr TOKEN_R_PAREN stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    $default  reduce using rule 42 (for_expr)

    for_expr    go to state 174
    id          go to state 33
    expr        go to state 137
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 165

   12 stmt: TOKEN_FOR TOKEN_L_PAREN . for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   24 if_nest: TOKEN_FOR TOKEN_L_PAREN . for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    $default  reduce using rule 42 (for_expr)

    for_expr    go to state 175
    id          go to state 33
    expr        go to state 137
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 166

   13 stmt: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN stmt
   14     | TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   16 if_nest: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    id          go to state 33
    expr        go to state 176
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 167

    9 stmt: TOKEN_PRINT TOKEN_SEMICOLON .
   21 if_nest: TOKEN_PRINT TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 21 (if_nest)
    $default    reduce using rule 9 (stmt)


State 168

    8 stmt: TOKEN_PRINT arg_list . TOKEN_SEMICOLON
   20 if_nest: TOKEN_PRINT arg_list . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 177


State 169

   11 stmt: TOKEN_RETURN TOKEN_SEMICOLON .
   23 if_nest: TOKEN_RETURN TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 23 (if_nest)
    $default    reduce using rule 11 (stmt)


State 170

   10 stmt: TOKEN_RETURN expr . TOKEN_SEMICOLON
   22 if_nest: TOKEN_RETURN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 178


State 171

   15 stmt: TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE
   19 if_nest: TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 179


State 172

   14 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE . stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 79
    TOKEN_IF                 shift, and go to state 80
    TOKEN_PRINT              shift, and go to state 81
    TOKEN_RETURN             shift, and go to state 82
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 126
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    stmt        go to state 180
    decl        go to state 86
    id          go to state 89
    expr        go to state 128
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 173

    7 stmt: expr TOKEN_SEMICOLON .
   18 if_nest: expr TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 18 (if_nest)
    $default    reduce using rule 7 (stmt)


State 174

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr . TOKEN_R_PAREN stmt

    TOKEN_R_PAREN  shift, and go to state 181


State 175

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr . TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   24 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr . TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_SEMICOLON  shift, and go to state 182


State 176

   13 stmt: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN stmt
   14     | TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   16 if_nest: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest

    TOKEN_R_PAREN  shift, and go to state 183


State 177

    8 stmt: TOKEN_PRINT arg_list TOKEN_SEMICOLON .
   20 if_nest: TOKEN_PRINT arg_list TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 20 (if_nest)
    $default    reduce using rule 8 (stmt)


State 178

   10 stmt: TOKEN_RETURN expr TOKEN_SEMICOLON .
   22 if_nest: TOKEN_RETURN expr TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 22 (if_nest)
    $default    reduce using rule 10 (stmt)


State 179

   15 stmt: TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .
   19 if_nest: TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .

    TOKEN_ELSE  reduce using rule 19 (if_nest)
    $default    reduce using rule 15 (stmt)


State 180

   14 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt .

    $default  reduce using rule 14 (stmt)


State 181

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN . stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 79
    TOKEN_IF                 shift, and go to state 80
    TOKEN_PRINT              shift, and go to state 81
    TOKEN_RETURN             shift, and go to state 82
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 126
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    stmt        go to state 184
    decl        go to state 86
    id          go to state 89
    expr        go to state 128
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 182

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON . for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   24 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON . for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    $default  reduce using rule 42 (for_expr)

    for_expr    go to state 185
    id          go to state 33
    expr        go to state 137
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 183

   13 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . stmt
   14     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . if_nest TOKEN_ELSE stmt
   16 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . if_nest TOKEN_ELSE if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 153
    TOKEN_IF                 shift, and go to state 154
    TOKEN_PRINT              shift, and go to state 155
    TOKEN_RETURN             shift, and go to state 156
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 157
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    stmt        go to state 158
    if_nest     go to state 186
    decl        go to state 160
    id          go to state 89
    expr        go to state 161
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 184

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt .

    $default  reduce using rule 12 (stmt)


State 185

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr . TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   24 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr . TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_SEMICOLON  shift, and go to state 187


State 186

   14 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest . TOKEN_ELSE stmt
   16 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest . TOKEN_ELSE if_nest

    TOKEN_ELSE  shift, and go to state 188


State 187

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON . for_expr TOKEN_R_PAREN stmt
   24 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON . for_expr TOKEN_R_PAREN if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    $default  reduce using rule 42 (for_expr)

    for_expr    go to state 189
    id          go to state 33
    expr        go to state 137
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 188

   14 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE . stmt
   16 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE . if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 153
    TOKEN_IF                 shift, and go to state 154
    TOKEN_PRINT              shift, and go to state 155
    TOKEN_RETURN             shift, and go to state 156
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 157
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    stmt        go to state 180
    if_nest     go to state 190
    decl        go to state 160
    id          go to state 89
    expr        go to state 161
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 189

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr . TOKEN_R_PAREN stmt
   24 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr . TOKEN_R_PAREN if_nest

    TOKEN_R_PAREN  shift, and go to state 191


State 190

   16 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest .

    $default  reduce using rule 16 (if_nest)


State 191

   12 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN . stmt
   24 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN . if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 23
    TOKEN_CHARACTER_LITERAL  shift, and go to state 24
    TOKEN_STRING_LITERAL     shift, and go to state 25
    TOKEN_FLOAT_LITERAL      shift, and go to state 26
    TOKEN_FALSE              shift, and go to state 27
    TOKEN_FOR                shift, and go to state 153
    TOKEN_IF                 shift, and go to state 154
    TOKEN_PRINT              shift, and go to state 155
    TOKEN_RETURN             shift, and go to state 156
    TOKEN_TRUE               shift, and go to state 28
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 29
    TOKEN_L_BRACE            shift, and go to state 157
    TOKEN_NOT                shift, and go to state 31
    TOKEN_SUB                shift, and go to state 32

    stmt        go to state 184
    if_nest     go to state 192
    decl        go to state 160
    id          go to state 89
    expr        go to state 161
    expr_or     go to state 35
    expr_and    go to state 36
    expr_comp   go to state 37
    expr_add    go to state 38
    expr_mul    go to state 39
    expr_exp    go to state 40
    expr_unary  go to state 41
    exp_post    go to state 42
    factor      go to state 43
    arr_subscr  go to state 44
    literal     go to state 45


State 192

   24 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest .

    $default  reduce using rule 24 (if_nest)
