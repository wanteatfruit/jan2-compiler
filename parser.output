Terminals unused in grammar

   TOKEN_WHILE
   TOKEN_AUTO
   TOKEN_NEG
   TOKEN_BACKSLASH
   TOKEN_ERROR


Grammar

    0 $accept: program $end

    1 program: stmt_list TOKEN_EOF

    2 stmt_list: stmt stmt_list
    3          | %empty

    4 stmt: decl
    5     | expr TOKEN_SEMICOLON
    6     | TOKEN_PRINT arg_list TOKEN_SEMICOLON
    7     | TOKEN_PRINT TOKEN_SEMICOLON
    8     | TOKEN_RETURN expr TOKEN_SEMICOLON
    9     | TOKEN_RETURN TOKEN_SEMICOLON
   10     | TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   11     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   12     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   13     | TOKEN_L_BRACE stmt_list TOKEN_R_BRACE
   14     | TOKEN_C_COMMENT
   15     | TOKEN_CPP_COMMENT

   16 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest
   17        | decl
   18        | expr TOKEN_SEMICOLON
   19        | TOKEN_L_BRACE stmt_list TOKEN_R_BRACE
   20        | TOKEN_PRINT arg_list TOKEN_SEMICOLON
   21        | TOKEN_PRINT TOKEN_SEMICOLON
   22        | TOKEN_RETURN expr TOKEN_SEMICOLON
   23        | TOKEN_RETURN TOKEN_SEMICOLON
   24        | TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest
   25        | TOKEN_C_COMMENT
   26        | TOKEN_CPP_COMMENT

   27 decl: id TOKEN_COLON type TOKEN_SEMICOLON
   28     | id TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   29     | id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   30     | id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

   31 param_list: param
   32           | %empty

   33 param: id TOKEN_COLON type
   34      | id TOKEN_COLON type TOKEN_COMMA param

   35 brace_list: brace
   36           | TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_COMMA brace_list
   37           | TOKEN_L_BRACE brace_list TOKEN_R_BRACE

   38 brace: expr TOKEN_COMMA brace
   39      | expr

   40 arg_list: arg

   41 arg: expr TOKEN_COMMA arg
   42    | expr

   43 for_expr: expr
   44         | %empty

   45 type: TOKEN_INTEGER
   46     | TOKEN_FLOAT
   47     | TOKEN_BOOLEAN
   48     | TOKEN_CHARACTER
   49     | TOKEN_STRING
   50     | TOKEN_VOID
   51     | TOKEN_ARRAY TOKEN_L_BRACKET TOKEN_R_BRACKET type
   52     | TOKEN_ARRAY TOKEN_L_BRACKET expr TOKEN_R_BRACKET type
   53     | TOKEN_FUNCTION type TOKEN_L_PAREN param_list TOKEN_R_PAREN

   54 id: TOKEN_IDENTIFIER

   55 expr: id TOKEN_ASSIGN expr
   56     | arr_subscr TOKEN_ASSIGN expr
   57     | expr_or

   58 expr_or: expr_and TOKEN_OR expr_or
   59        | expr_and

   60 expr_and: expr_comp TOKEN_AND expr_and
   61         | expr_comp

   62 expr_comp: expr_add TOKEN_EQUAL expr_comp
   63          | expr_add TOKEN_LESS expr_comp
   64          | expr_add TOKEN_NEQUAL expr_comp
   65          | expr_add TOKEN_LE expr_comp
   66          | expr_add TOKEN_GE expr_comp
   67          | expr_add TOKEN_GREATER expr_comp
   68          | expr_add

   69 expr_add: expr_mul TOKEN_ADD expr_add
   70         | expr_mul TOKEN_SUB expr_add
   71         | expr_mul

   72 expr_mul: expr_exp TOKEN_MUL expr_mul
   73         | expr_exp TOKEN_DIV expr_mul
   74         | expr_exp TOKEN_MOD expr_mul
   75         | expr_exp

   76 expr_exp: expr_unary TOKEN_EXP expr_exp
   77         | expr_unary

   78 expr_unary: TOKEN_SUB expr_unary
   79           | TOKEN_NOT expr_unary
   80           | TOKEN_ADD expr_unary
   81           | exp_post

   82 exp_post: factor TOKEN_POSTINC
   83         | factor TOKEN_POSTDEC
   84         | factor

   85 factor: TOKEN_L_PAREN expr TOKEN_R_PAREN
   86       | arr_subscr
   87       | literal
   88       | id
   89       | id TOKEN_L_PAREN arg_list TOKEN_R_PAREN
   90       | id TOKEN_L_PAREN TOKEN_R_PAREN

   91 arr_subscr: factor TOKEN_L_BRACKET expr TOKEN_R_BRACKET

   92 literal: TOKEN_INTEGER_LITERAL
   93        | TOKEN_FLOAT_LITERAL
   94        | TOKEN_CHARACTER_LITERAL
   95        | TOKEN_STRING_LITERAL
   96        | TOKEN_TRUE
   97        | TOKEN_FALSE


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_ARRAY (258) 51 52
TOKEN_BOOLEAN (259) 47
TOKEN_CHARACTER (260) 48
TOKEN_FLOAT (261) 46
TOKEN_FUNCTION (262) 53
TOKEN_INTEGER (263) 45
TOKEN_STRING (264) 49
TOKEN_VOID (265) 50
TOKEN_INTEGER_LITERAL (266) 92
TOKEN_CHARACTER_LITERAL (267) 94
TOKEN_STRING_LITERAL (268) 95
TOKEN_FLOAT_LITERAL (269) 93
TOKEN_ELSE (270) 12 16
TOKEN_FALSE (271) 97
TOKEN_FOR (272) 10 24
TOKEN_IF (273) 11 12 16
TOKEN_PRINT (274) 6 7 20 21
TOKEN_RETURN (275) 8 9 22 23
TOKEN_TRUE (276) 96
TOKEN_WHILE (277)
TOKEN_AUTO (278)
TOKEN_IDENTIFIER (279) 54
TOKEN_L_PAREN (280) 10 11 12 16 24 53 85 89 90
TOKEN_R_PAREN (281) 10 11 12 16 24 53 85 89 90
TOKEN_L_BRACKET (282) 51 52 91
TOKEN_R_BRACKET (283) 51 52 91
TOKEN_L_BRACE (284) 13 19 29 30 36 37
TOKEN_R_BRACE (285) 13 19 29 30 36 37
TOKEN_POSTINC (286) 82
TOKEN_POSTDEC (287) 83
TOKEN_NEG (288)
TOKEN_NOT (289) 79
TOKEN_EXP (290) 76
TOKEN_MUL (291) 72
TOKEN_DIV (292) 73
TOKEN_MOD (293) 74
TOKEN_ADD (294) 69 80
TOKEN_SUB (295) 70 78
TOKEN_LESS (296) 63
TOKEN_LE (297) 65
TOKEN_GE (298) 66
TOKEN_GREATER (299) 67
TOKEN_EQUAL (300) 62
TOKEN_NEQUAL (301) 64
TOKEN_AND (302) 60
TOKEN_OR (303) 58
TOKEN_ASSIGN (304) 28 29 30 55 56
TOKEN_SEMICOLON (305) 5 6 7 8 9 10 18 20 21 22 23 24 27 28 29
TOKEN_COLON (306) 27 28 29 30 33 34
TOKEN_COMMA (307) 34 36 38 41
TOKEN_BACKSLASH (308)
TOKEN_C_COMMENT (309) 14 25
TOKEN_CPP_COMMENT (310) 15 26
TOKEN_ERROR (311)
TOKEN_EOF (312) 1


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
program (59)
    on left: 1, on right: 0
stmt_list (60)
    on left: 2 3, on right: 1 2 13 19 30
stmt (61)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15, on right: 2 10 11 12
if_nest (62)
    on left: 16 17 18 19 20 21 22 23 24 25 26, on right: 12 16 24
decl (63)
    on left: 27 28 29 30, on right: 4 17
param_list (64)
    on left: 31 32, on right: 53
param (65)
    on left: 33 34, on right: 31 34
brace_list (66)
    on left: 35 36 37, on right: 29 36 37
brace (67)
    on left: 38 39, on right: 35 38
arg_list (68)
    on left: 40, on right: 6 20 89
arg (69)
    on left: 41 42, on right: 40 41
for_expr (70)
    on left: 43 44, on right: 10 24
type (71)
    on left: 45 46 47 48 49 50 51 52 53, on right: 27 28 29 30 33 34
    51 52 53
id (72)
    on left: 54, on right: 27 28 29 30 33 34 55 88 89 90
expr (73)
    on left: 55 56 57, on right: 5 8 11 12 16 18 22 28 38 39 41 42
    43 52 55 56 85 91
expr_or (74)
    on left: 58 59, on right: 57 58
expr_and (75)
    on left: 60 61, on right: 58 59 60
expr_comp (76)
    on left: 62 63 64 65 66 67 68, on right: 60 61 62 63 64 65 66 67
expr_add (77)
    on left: 69 70 71, on right: 62 63 64 65 66 67 68 69 70
expr_mul (78)
    on left: 72 73 74 75, on right: 69 70 71 72 73 74
expr_exp (79)
    on left: 76 77, on right: 72 73 74 75 76
expr_unary (80)
    on left: 78 79 80 81, on right: 76 77 78 79 80
exp_post (81)
    on left: 82 83 84, on right: 81
factor (82)
    on left: 85 86 87 88 89 90, on right: 82 83 84 91
arr_subscr (83)
    on left: 91, on right: 56 86
literal (84)
    on left: 92 93 94 95 96 97, on right: 87


State 0

    0 $accept: . program $end

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 17
    TOKEN_CPP_COMMENT        shift, and go to state 18

    $default  reduce using rule 3 (stmt_list)

    program     go to state 19
    stmt_list   go to state 20
    stmt        go to state 21
    decl        go to state 22
    id          go to state 23
    expr        go to state 24
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 1

   92 literal: TOKEN_INTEGER_LITERAL .

    $default  reduce using rule 92 (literal)


State 2

   94 literal: TOKEN_CHARACTER_LITERAL .

    $default  reduce using rule 94 (literal)


State 3

   95 literal: TOKEN_STRING_LITERAL .

    $default  reduce using rule 95 (literal)


State 4

   93 literal: TOKEN_FLOAT_LITERAL .

    $default  reduce using rule 93 (literal)


State 5

   97 literal: TOKEN_FALSE .

    $default  reduce using rule 97 (literal)


State 6

   10 stmt: TOKEN_FOR . TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_L_PAREN  shift, and go to state 36


State 7

   11 stmt: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   12     | TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt

    TOKEN_L_PAREN  shift, and go to state 37


State 8

    6 stmt: TOKEN_PRINT . arg_list TOKEN_SEMICOLON
    7     | TOKEN_PRINT . TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_SEMICOLON          shift, and go to state 38

    arg_list    go to state 39
    arg         go to state 40
    id          go to state 41
    expr        go to state 42
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 9

    8 stmt: TOKEN_RETURN . expr TOKEN_SEMICOLON
    9     | TOKEN_RETURN . TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_SEMICOLON          shift, and go to state 43

    id          go to state 41
    expr        go to state 44
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 10

   96 literal: TOKEN_TRUE .

    $default  reduce using rule 96 (literal)


State 11

   54 id: TOKEN_IDENTIFIER .

    $default  reduce using rule 54 (id)


State 12

   85 factor: TOKEN_L_PAREN . expr TOKEN_R_PAREN

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 41
    expr        go to state 45
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 13

   13 stmt: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 17
    TOKEN_CPP_COMMENT        shift, and go to state 18

    $default  reduce using rule 3 (stmt_list)

    stmt_list   go to state 46
    stmt        go to state 21
    decl        go to state 22
    id          go to state 23
    expr        go to state 24
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 14

   79 expr_unary: TOKEN_NOT . expr_unary

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 47
    expr_unary  go to state 48
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 49
    literal     go to state 35


State 15

   80 expr_unary: TOKEN_ADD . expr_unary

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 47
    expr_unary  go to state 50
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 49
    literal     go to state 35


State 16

   78 expr_unary: TOKEN_SUB . expr_unary

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 47
    expr_unary  go to state 51
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 49
    literal     go to state 35


State 17

   14 stmt: TOKEN_C_COMMENT .

    $default  reduce using rule 14 (stmt)


State 18

   15 stmt: TOKEN_CPP_COMMENT .

    $default  reduce using rule 15 (stmt)


State 19

    0 $accept: program . $end

    $end  shift, and go to state 52


State 20

    1 program: stmt_list . TOKEN_EOF

    TOKEN_EOF  shift, and go to state 53


State 21

    2 stmt_list: stmt . stmt_list

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 17
    TOKEN_CPP_COMMENT        shift, and go to state 18

    $default  reduce using rule 3 (stmt_list)

    stmt_list   go to state 54
    stmt        go to state 21
    decl        go to state 22
    id          go to state 23
    expr        go to state 24
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 22

    4 stmt: decl .

    $default  reduce using rule 4 (stmt)


State 23

   27 decl: id . TOKEN_COLON type TOKEN_SEMICOLON
   28     | id . TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   29     | id . TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   30     | id . TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE
   55 expr: id . TOKEN_ASSIGN expr
   88 factor: id .
   89       | id . TOKEN_L_PAREN arg_list TOKEN_R_PAREN
   90       | id . TOKEN_L_PAREN TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 55
    TOKEN_ASSIGN   shift, and go to state 56
    TOKEN_COLON    shift, and go to state 57

    $default  reduce using rule 88 (factor)


State 24

    5 stmt: expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 58


State 25

   57 expr: expr_or .

    $default  reduce using rule 57 (expr)


State 26

   58 expr_or: expr_and . TOKEN_OR expr_or
   59        | expr_and .

    TOKEN_OR  shift, and go to state 59

    $default  reduce using rule 59 (expr_or)


State 27

   60 expr_and: expr_comp . TOKEN_AND expr_and
   61         | expr_comp .

    TOKEN_AND  shift, and go to state 60

    $default  reduce using rule 61 (expr_and)


State 28

   62 expr_comp: expr_add . TOKEN_EQUAL expr_comp
   63          | expr_add . TOKEN_LESS expr_comp
   64          | expr_add . TOKEN_NEQUAL expr_comp
   65          | expr_add . TOKEN_LE expr_comp
   66          | expr_add . TOKEN_GE expr_comp
   67          | expr_add . TOKEN_GREATER expr_comp
   68          | expr_add .

    TOKEN_LESS     shift, and go to state 61
    TOKEN_LE       shift, and go to state 62
    TOKEN_GE       shift, and go to state 63
    TOKEN_GREATER  shift, and go to state 64
    TOKEN_EQUAL    shift, and go to state 65
    TOKEN_NEQUAL   shift, and go to state 66

    $default  reduce using rule 68 (expr_comp)


State 29

   69 expr_add: expr_mul . TOKEN_ADD expr_add
   70         | expr_mul . TOKEN_SUB expr_add
   71         | expr_mul .

    TOKEN_ADD  shift, and go to state 67
    TOKEN_SUB  shift, and go to state 68

    $default  reduce using rule 71 (expr_add)


State 30

   72 expr_mul: expr_exp . TOKEN_MUL expr_mul
   73         | expr_exp . TOKEN_DIV expr_mul
   74         | expr_exp . TOKEN_MOD expr_mul
   75         | expr_exp .

    TOKEN_MUL  shift, and go to state 69
    TOKEN_DIV  shift, and go to state 70
    TOKEN_MOD  shift, and go to state 71

    $default  reduce using rule 75 (expr_mul)


State 31

   76 expr_exp: expr_unary . TOKEN_EXP expr_exp
   77         | expr_unary .

    TOKEN_EXP  shift, and go to state 72

    $default  reduce using rule 77 (expr_exp)


State 32

   81 expr_unary: exp_post .

    $default  reduce using rule 81 (expr_unary)


State 33

   82 exp_post: factor . TOKEN_POSTINC
   83         | factor . TOKEN_POSTDEC
   84         | factor .
   91 arr_subscr: factor . TOKEN_L_BRACKET expr TOKEN_R_BRACKET

    TOKEN_L_BRACKET  shift, and go to state 73
    TOKEN_POSTINC    shift, and go to state 74
    TOKEN_POSTDEC    shift, and go to state 75

    $default  reduce using rule 84 (exp_post)


State 34

   56 expr: arr_subscr . TOKEN_ASSIGN expr
   86 factor: arr_subscr .

    TOKEN_ASSIGN  shift, and go to state 76

    $default  reduce using rule 86 (factor)


State 35

   87 factor: literal .

    $default  reduce using rule 87 (factor)


State 36

   10 stmt: TOKEN_FOR TOKEN_L_PAREN . for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    $default  reduce using rule 44 (for_expr)

    for_expr    go to state 77
    id          go to state 41
    expr        go to state 78
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 37

   11 stmt: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN stmt
   12     | TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 41
    expr        go to state 79
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 38

    7 stmt: TOKEN_PRINT TOKEN_SEMICOLON .

    $default  reduce using rule 7 (stmt)


State 39

    6 stmt: TOKEN_PRINT arg_list . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 80


State 40

   40 arg_list: arg .

    $default  reduce using rule 40 (arg_list)


State 41

   55 expr: id . TOKEN_ASSIGN expr
   88 factor: id .
   89       | id . TOKEN_L_PAREN arg_list TOKEN_R_PAREN
   90       | id . TOKEN_L_PAREN TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 55
    TOKEN_ASSIGN   shift, and go to state 56

    $default  reduce using rule 88 (factor)


State 42

   41 arg: expr . TOKEN_COMMA arg
   42    | expr .

    TOKEN_COMMA  shift, and go to state 81

    $default  reduce using rule 42 (arg)


State 43

    9 stmt: TOKEN_RETURN TOKEN_SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 44

    8 stmt: TOKEN_RETURN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 82


State 45

   85 factor: TOKEN_L_PAREN expr . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 83


State 46

   13 stmt: TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 84


State 47

   88 factor: id .
   89       | id . TOKEN_L_PAREN arg_list TOKEN_R_PAREN
   90       | id . TOKEN_L_PAREN TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 55

    $default  reduce using rule 88 (factor)


State 48

   79 expr_unary: TOKEN_NOT expr_unary .

    $default  reduce using rule 79 (expr_unary)


State 49

   86 factor: arr_subscr .

    $default  reduce using rule 86 (factor)


State 50

   80 expr_unary: TOKEN_ADD expr_unary .

    $default  reduce using rule 80 (expr_unary)


State 51

   78 expr_unary: TOKEN_SUB expr_unary .

    $default  reduce using rule 78 (expr_unary)


State 52

    0 $accept: program $end .

    $default  accept


State 53

    1 program: stmt_list TOKEN_EOF .

    $default  reduce using rule 1 (program)


State 54

    2 stmt_list: stmt stmt_list .

    $default  reduce using rule 2 (stmt_list)


State 55

   89 factor: id TOKEN_L_PAREN . arg_list TOKEN_R_PAREN
   90       | id TOKEN_L_PAREN . TOKEN_R_PAREN

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_R_PAREN            shift, and go to state 85
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    arg_list    go to state 86
    arg         go to state 40
    id          go to state 41
    expr        go to state 42
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 56

   55 expr: id TOKEN_ASSIGN . expr

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 41
    expr        go to state 87
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 57

   27 decl: id TOKEN_COLON . type TOKEN_SEMICOLON
   28     | id TOKEN_COLON . type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   29     | id TOKEN_COLON . type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   30     | id TOKEN_COLON . type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

    TOKEN_ARRAY      shift, and go to state 88
    TOKEN_BOOLEAN    shift, and go to state 89
    TOKEN_CHARACTER  shift, and go to state 90
    TOKEN_FLOAT      shift, and go to state 91
    TOKEN_FUNCTION   shift, and go to state 92
    TOKEN_INTEGER    shift, and go to state 93
    TOKEN_STRING     shift, and go to state 94
    TOKEN_VOID       shift, and go to state 95

    type  go to state 96


State 58

    5 stmt: expr TOKEN_SEMICOLON .

    $default  reduce using rule 5 (stmt)


State 59

   58 expr_or: expr_and TOKEN_OR . expr_or

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 47
    expr_or     go to state 97
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 49
    literal     go to state 35


State 60

   60 expr_and: expr_comp TOKEN_AND . expr_and

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 47
    expr_and    go to state 98
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 49
    literal     go to state 35


State 61

   63 expr_comp: expr_add TOKEN_LESS . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 47
    expr_comp   go to state 99
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 49
    literal     go to state 35


State 62

   65 expr_comp: expr_add TOKEN_LE . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 47
    expr_comp   go to state 100
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 49
    literal     go to state 35


State 63

   66 expr_comp: expr_add TOKEN_GE . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 47
    expr_comp   go to state 101
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 49
    literal     go to state 35


State 64

   67 expr_comp: expr_add TOKEN_GREATER . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 47
    expr_comp   go to state 102
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 49
    literal     go to state 35


State 65

   62 expr_comp: expr_add TOKEN_EQUAL . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 47
    expr_comp   go to state 103
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 49
    literal     go to state 35


State 66

   64 expr_comp: expr_add TOKEN_NEQUAL . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 47
    expr_comp   go to state 104
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 49
    literal     go to state 35


State 67

   69 expr_add: expr_mul TOKEN_ADD . expr_add

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 47
    expr_add    go to state 105
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 49
    literal     go to state 35


State 68

   70 expr_add: expr_mul TOKEN_SUB . expr_add

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 47
    expr_add    go to state 106
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 49
    literal     go to state 35


State 69

   72 expr_mul: expr_exp TOKEN_MUL . expr_mul

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 47
    expr_mul    go to state 107
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 49
    literal     go to state 35


State 70

   73 expr_mul: expr_exp TOKEN_DIV . expr_mul

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 47
    expr_mul    go to state 108
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 49
    literal     go to state 35


State 71

   74 expr_mul: expr_exp TOKEN_MOD . expr_mul

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 47
    expr_mul    go to state 109
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 49
    literal     go to state 35


State 72

   76 expr_exp: expr_unary TOKEN_EXP . expr_exp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 47
    expr_exp    go to state 110
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 49
    literal     go to state 35


State 73

   91 arr_subscr: factor TOKEN_L_BRACKET . expr TOKEN_R_BRACKET

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 41
    expr        go to state 111
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 74

   82 exp_post: factor TOKEN_POSTINC .

    $default  reduce using rule 82 (exp_post)


State 75

   83 exp_post: factor TOKEN_POSTDEC .

    $default  reduce using rule 83 (exp_post)


State 76

   56 expr: arr_subscr TOKEN_ASSIGN . expr

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 41
    expr        go to state 112
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 77

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr . TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_SEMICOLON  shift, and go to state 113


State 78

   43 for_expr: expr .

    $default  reduce using rule 43 (for_expr)


State 79

   11 stmt: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN stmt
   12     | TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN if_nest TOKEN_ELSE stmt

    TOKEN_R_PAREN  shift, and go to state 114


State 80

    6 stmt: TOKEN_PRINT arg_list TOKEN_SEMICOLON .

    $default  reduce using rule 6 (stmt)


State 81

   41 arg: expr TOKEN_COMMA . arg

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    arg         go to state 115
    id          go to state 41
    expr        go to state 42
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 82

    8 stmt: TOKEN_RETURN expr TOKEN_SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 83

   85 factor: TOKEN_L_PAREN expr TOKEN_R_PAREN .

    $default  reduce using rule 85 (factor)


State 84

   13 stmt: TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .

    $default  reduce using rule 13 (stmt)


State 85

   90 factor: id TOKEN_L_PAREN TOKEN_R_PAREN .

    $default  reduce using rule 90 (factor)


State 86

   89 factor: id TOKEN_L_PAREN arg_list . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 116


State 87

   55 expr: id TOKEN_ASSIGN expr .

    $default  reduce using rule 55 (expr)


State 88

   51 type: TOKEN_ARRAY . TOKEN_L_BRACKET TOKEN_R_BRACKET type
   52     | TOKEN_ARRAY . TOKEN_L_BRACKET expr TOKEN_R_BRACKET type

    TOKEN_L_BRACKET  shift, and go to state 117


State 89

   47 type: TOKEN_BOOLEAN .

    $default  reduce using rule 47 (type)


State 90

   48 type: TOKEN_CHARACTER .

    $default  reduce using rule 48 (type)


State 91

   46 type: TOKEN_FLOAT .

    $default  reduce using rule 46 (type)


State 92

   53 type: TOKEN_FUNCTION . type TOKEN_L_PAREN param_list TOKEN_R_PAREN

    TOKEN_ARRAY      shift, and go to state 88
    TOKEN_BOOLEAN    shift, and go to state 89
    TOKEN_CHARACTER  shift, and go to state 90
    TOKEN_FLOAT      shift, and go to state 91
    TOKEN_FUNCTION   shift, and go to state 92
    TOKEN_INTEGER    shift, and go to state 93
    TOKEN_STRING     shift, and go to state 94
    TOKEN_VOID       shift, and go to state 95

    type  go to state 118


State 93

   45 type: TOKEN_INTEGER .

    $default  reduce using rule 45 (type)


State 94

   49 type: TOKEN_STRING .

    $default  reduce using rule 49 (type)


State 95

   50 type: TOKEN_VOID .

    $default  reduce using rule 50 (type)


State 96

   27 decl: id TOKEN_COLON type . TOKEN_SEMICOLON
   28     | id TOKEN_COLON type . TOKEN_ASSIGN expr TOKEN_SEMICOLON
   29     | id TOKEN_COLON type . TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   30     | id TOKEN_COLON type . TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

    TOKEN_ASSIGN     shift, and go to state 119
    TOKEN_SEMICOLON  shift, and go to state 120


State 97

   58 expr_or: expr_and TOKEN_OR expr_or .

    $default  reduce using rule 58 (expr_or)


State 98

   60 expr_and: expr_comp TOKEN_AND expr_and .

    $default  reduce using rule 60 (expr_and)


State 99

   63 expr_comp: expr_add TOKEN_LESS expr_comp .

    $default  reduce using rule 63 (expr_comp)


State 100

   65 expr_comp: expr_add TOKEN_LE expr_comp .

    $default  reduce using rule 65 (expr_comp)


State 101

   66 expr_comp: expr_add TOKEN_GE expr_comp .

    $default  reduce using rule 66 (expr_comp)


State 102

   67 expr_comp: expr_add TOKEN_GREATER expr_comp .

    $default  reduce using rule 67 (expr_comp)


State 103

   62 expr_comp: expr_add TOKEN_EQUAL expr_comp .

    $default  reduce using rule 62 (expr_comp)


State 104

   64 expr_comp: expr_add TOKEN_NEQUAL expr_comp .

    $default  reduce using rule 64 (expr_comp)


State 105

   69 expr_add: expr_mul TOKEN_ADD expr_add .

    $default  reduce using rule 69 (expr_add)


State 106

   70 expr_add: expr_mul TOKEN_SUB expr_add .

    $default  reduce using rule 70 (expr_add)


State 107

   72 expr_mul: expr_exp TOKEN_MUL expr_mul .

    $default  reduce using rule 72 (expr_mul)


State 108

   73 expr_mul: expr_exp TOKEN_DIV expr_mul .

    $default  reduce using rule 73 (expr_mul)


State 109

   74 expr_mul: expr_exp TOKEN_MOD expr_mul .

    $default  reduce using rule 74 (expr_mul)


State 110

   76 expr_exp: expr_unary TOKEN_EXP expr_exp .

    $default  reduce using rule 76 (expr_exp)


State 111

   91 arr_subscr: factor TOKEN_L_BRACKET expr . TOKEN_R_BRACKET

    TOKEN_R_BRACKET  shift, and go to state 121


State 112

   56 expr: arr_subscr TOKEN_ASSIGN expr .

    $default  reduce using rule 56 (expr)


State 113

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON . for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    $default  reduce using rule 44 (for_expr)

    for_expr    go to state 122
    id          go to state 41
    expr        go to state 78
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 114

   11 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . stmt
   12     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . if_nest TOKEN_ELSE stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 123
    TOKEN_IF                 shift, and go to state 124
    TOKEN_PRINT              shift, and go to state 125
    TOKEN_RETURN             shift, and go to state 126
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 127
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 128
    TOKEN_CPP_COMMENT        shift, and go to state 129

    stmt        go to state 130
    if_nest     go to state 131
    decl        go to state 132
    id          go to state 23
    expr        go to state 133
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 115

   41 arg: expr TOKEN_COMMA arg .

    $default  reduce using rule 41 (arg)


State 116

   89 factor: id TOKEN_L_PAREN arg_list TOKEN_R_PAREN .

    $default  reduce using rule 89 (factor)


State 117

   51 type: TOKEN_ARRAY TOKEN_L_BRACKET . TOKEN_R_BRACKET type
   52     | TOKEN_ARRAY TOKEN_L_BRACKET . expr TOKEN_R_BRACKET type

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_R_BRACKET          shift, and go to state 134
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 41
    expr        go to state 135
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 118

   53 type: TOKEN_FUNCTION type . TOKEN_L_PAREN param_list TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 136


State 119

   28 decl: id TOKEN_COLON type TOKEN_ASSIGN . expr TOKEN_SEMICOLON
   29     | id TOKEN_COLON type TOKEN_ASSIGN . TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   30     | id TOKEN_COLON type TOKEN_ASSIGN . TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 137
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 41
    expr        go to state 138
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 120

   27 decl: id TOKEN_COLON type TOKEN_SEMICOLON .

    $default  reduce using rule 27 (decl)


State 121

   91 arr_subscr: factor TOKEN_L_BRACKET expr TOKEN_R_BRACKET .

    $default  reduce using rule 91 (arr_subscr)


State 122

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr . TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_SEMICOLON  shift, and go to state 139


State 123

   10 stmt: TOKEN_FOR . TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   24 if_nest: TOKEN_FOR . TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_L_PAREN  shift, and go to state 140


State 124

   11 stmt: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   12     | TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   16 if_nest: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest

    TOKEN_L_PAREN  shift, and go to state 141


State 125

    6 stmt: TOKEN_PRINT . arg_list TOKEN_SEMICOLON
    7     | TOKEN_PRINT . TOKEN_SEMICOLON
   20 if_nest: TOKEN_PRINT . arg_list TOKEN_SEMICOLON
   21        | TOKEN_PRINT . TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_SEMICOLON          shift, and go to state 142

    arg_list    go to state 143
    arg         go to state 40
    id          go to state 41
    expr        go to state 42
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 126

    8 stmt: TOKEN_RETURN . expr TOKEN_SEMICOLON
    9     | TOKEN_RETURN . TOKEN_SEMICOLON
   22 if_nest: TOKEN_RETURN . expr TOKEN_SEMICOLON
   23        | TOKEN_RETURN . TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_SEMICOLON          shift, and go to state 144

    id          go to state 41
    expr        go to state 145
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 127

   13 stmt: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE
   19 if_nest: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 17
    TOKEN_CPP_COMMENT        shift, and go to state 18

    $default  reduce using rule 3 (stmt_list)

    stmt_list   go to state 146
    stmt        go to state 21
    decl        go to state 22
    id          go to state 23
    expr        go to state 24
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 128

   14 stmt: TOKEN_C_COMMENT .
   25 if_nest: TOKEN_C_COMMENT .

    TOKEN_ELSE  reduce using rule 25 (if_nest)
    $default    reduce using rule 14 (stmt)


State 129

   15 stmt: TOKEN_CPP_COMMENT .
   26 if_nest: TOKEN_CPP_COMMENT .

    TOKEN_ELSE  reduce using rule 26 (if_nest)
    $default    reduce using rule 15 (stmt)


State 130

   11 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN stmt .

    $default  reduce using rule 11 (stmt)


State 131

   12 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest . TOKEN_ELSE stmt

    TOKEN_ELSE  shift, and go to state 147


State 132

    4 stmt: decl .
   17 if_nest: decl .

    TOKEN_ELSE  reduce using rule 17 (if_nest)
    $default    reduce using rule 4 (stmt)


State 133

    5 stmt: expr . TOKEN_SEMICOLON
   18 if_nest: expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 148


State 134

   51 type: TOKEN_ARRAY TOKEN_L_BRACKET TOKEN_R_BRACKET . type

    TOKEN_ARRAY      shift, and go to state 88
    TOKEN_BOOLEAN    shift, and go to state 89
    TOKEN_CHARACTER  shift, and go to state 90
    TOKEN_FLOAT      shift, and go to state 91
    TOKEN_FUNCTION   shift, and go to state 92
    TOKEN_INTEGER    shift, and go to state 93
    TOKEN_STRING     shift, and go to state 94
    TOKEN_VOID       shift, and go to state 95

    type  go to state 149


State 135

   52 type: TOKEN_ARRAY TOKEN_L_BRACKET expr . TOKEN_R_BRACKET type

    TOKEN_R_BRACKET  shift, and go to state 150


State 136

   53 type: TOKEN_FUNCTION type TOKEN_L_PAREN . param_list TOKEN_R_PAREN

    TOKEN_IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 32 (param_list)

    param_list  go to state 151
    param       go to state 152
    id          go to state 153


State 137

   29 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE . brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   30     | id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 154
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 17
    TOKEN_CPP_COMMENT        shift, and go to state 18

    $default  reduce using rule 3 (stmt_list)

    stmt_list   go to state 155
    stmt        go to state 21
    decl        go to state 22
    brace_list  go to state 156
    brace       go to state 157
    id          go to state 23
    expr        go to state 158
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 138

   28 decl: id TOKEN_COLON type TOKEN_ASSIGN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 159


State 139

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON . for_expr TOKEN_R_PAREN stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    $default  reduce using rule 44 (for_expr)

    for_expr    go to state 160
    id          go to state 41
    expr        go to state 78
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 140

   10 stmt: TOKEN_FOR TOKEN_L_PAREN . for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   24 if_nest: TOKEN_FOR TOKEN_L_PAREN . for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    $default  reduce using rule 44 (for_expr)

    for_expr    go to state 161
    id          go to state 41
    expr        go to state 78
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 141

   11 stmt: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN stmt
   12     | TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   16 if_nest: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 41
    expr        go to state 162
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 142

    7 stmt: TOKEN_PRINT TOKEN_SEMICOLON .
   21 if_nest: TOKEN_PRINT TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 21 (if_nest)
    $default    reduce using rule 7 (stmt)


State 143

    6 stmt: TOKEN_PRINT arg_list . TOKEN_SEMICOLON
   20 if_nest: TOKEN_PRINT arg_list . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 163


State 144

    9 stmt: TOKEN_RETURN TOKEN_SEMICOLON .
   23 if_nest: TOKEN_RETURN TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 23 (if_nest)
    $default    reduce using rule 9 (stmt)


State 145

    8 stmt: TOKEN_RETURN expr . TOKEN_SEMICOLON
   22 if_nest: TOKEN_RETURN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 164


State 146

   13 stmt: TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE
   19 if_nest: TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 165


State 147

   12 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE . stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 17
    TOKEN_CPP_COMMENT        shift, and go to state 18

    stmt        go to state 166
    decl        go to state 22
    id          go to state 23
    expr        go to state 24
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 148

    5 stmt: expr TOKEN_SEMICOLON .
   18 if_nest: expr TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 18 (if_nest)
    $default    reduce using rule 5 (stmt)


State 149

   51 type: TOKEN_ARRAY TOKEN_L_BRACKET TOKEN_R_BRACKET type .

    $default  reduce using rule 51 (type)


State 150

   52 type: TOKEN_ARRAY TOKEN_L_BRACKET expr TOKEN_R_BRACKET . type

    TOKEN_ARRAY      shift, and go to state 88
    TOKEN_BOOLEAN    shift, and go to state 89
    TOKEN_CHARACTER  shift, and go to state 90
    TOKEN_FLOAT      shift, and go to state 91
    TOKEN_FUNCTION   shift, and go to state 92
    TOKEN_INTEGER    shift, and go to state 93
    TOKEN_STRING     shift, and go to state 94
    TOKEN_VOID       shift, and go to state 95

    type  go to state 167


State 151

   53 type: TOKEN_FUNCTION type TOKEN_L_PAREN param_list . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 168


State 152

   31 param_list: param .

    $default  reduce using rule 31 (param_list)


State 153

   33 param: id . TOKEN_COLON type
   34      | id . TOKEN_COLON type TOKEN_COMMA param

    TOKEN_COLON  shift, and go to state 169


State 154

   13 stmt: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE
   36 brace_list: TOKEN_L_BRACE . brace_list TOKEN_R_BRACE TOKEN_COMMA brace_list
   37           | TOKEN_L_BRACE . brace_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 154
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 17
    TOKEN_CPP_COMMENT        shift, and go to state 18

    $default  reduce using rule 3 (stmt_list)

    stmt_list   go to state 46
    stmt        go to state 21
    decl        go to state 22
    brace_list  go to state 170
    brace       go to state 157
    id          go to state 23
    expr        go to state 158
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 155

   30 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 171


State 156

   29 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list . TOKEN_R_BRACE TOKEN_SEMICOLON

    TOKEN_R_BRACE  shift, and go to state 172


State 157

   35 brace_list: brace .

    $default  reduce using rule 35 (brace_list)


State 158

    5 stmt: expr . TOKEN_SEMICOLON
   38 brace: expr . TOKEN_COMMA brace
   39      | expr .

    TOKEN_SEMICOLON  shift, and go to state 58
    TOKEN_COMMA      shift, and go to state 173

    $default  reduce using rule 39 (brace)


State 159

   28 decl: id TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON .

    $default  reduce using rule 28 (decl)


State 160

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr . TOKEN_R_PAREN stmt

    TOKEN_R_PAREN  shift, and go to state 174


State 161

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr . TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   24 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr . TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_SEMICOLON  shift, and go to state 175


State 162

   11 stmt: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN stmt
   12     | TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   16 if_nest: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest

    TOKEN_R_PAREN  shift, and go to state 176


State 163

    6 stmt: TOKEN_PRINT arg_list TOKEN_SEMICOLON .
   20 if_nest: TOKEN_PRINT arg_list TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 20 (if_nest)
    $default    reduce using rule 6 (stmt)


State 164

    8 stmt: TOKEN_RETURN expr TOKEN_SEMICOLON .
   22 if_nest: TOKEN_RETURN expr TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 22 (if_nest)
    $default    reduce using rule 8 (stmt)


State 165

   13 stmt: TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .
   19 if_nest: TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .

    TOKEN_ELSE  reduce using rule 19 (if_nest)
    $default    reduce using rule 13 (stmt)


State 166

   12 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt .

    $default  reduce using rule 12 (stmt)


State 167

   52 type: TOKEN_ARRAY TOKEN_L_BRACKET expr TOKEN_R_BRACKET type .

    $default  reduce using rule 52 (type)


State 168

   53 type: TOKEN_FUNCTION type TOKEN_L_PAREN param_list TOKEN_R_PAREN .

    $default  reduce using rule 53 (type)


State 169

   33 param: id TOKEN_COLON . type
   34      | id TOKEN_COLON . type TOKEN_COMMA param

    TOKEN_ARRAY      shift, and go to state 88
    TOKEN_BOOLEAN    shift, and go to state 89
    TOKEN_CHARACTER  shift, and go to state 90
    TOKEN_FLOAT      shift, and go to state 91
    TOKEN_FUNCTION   shift, and go to state 92
    TOKEN_INTEGER    shift, and go to state 93
    TOKEN_STRING     shift, and go to state 94
    TOKEN_VOID       shift, and go to state 95

    type  go to state 177


State 170

   36 brace_list: TOKEN_L_BRACE brace_list . TOKEN_R_BRACE TOKEN_COMMA brace_list
   37           | TOKEN_L_BRACE brace_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 178


State 171

   30 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .

    $default  reduce using rule 30 (decl)


State 172

   29 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 179


State 173

   38 brace: expr TOKEN_COMMA . brace

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    brace       go to state 180
    id          go to state 41
    expr        go to state 181
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 174

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN . stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 17
    TOKEN_CPP_COMMENT        shift, and go to state 18

    stmt        go to state 182
    decl        go to state 22
    id          go to state 23
    expr        go to state 24
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 175

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON . for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   24 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON . for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    $default  reduce using rule 44 (for_expr)

    for_expr    go to state 183
    id          go to state 41
    expr        go to state 78
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 176

   11 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . stmt
   12     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . if_nest TOKEN_ELSE stmt
   16 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . if_nest TOKEN_ELSE if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 123
    TOKEN_IF                 shift, and go to state 124
    TOKEN_PRINT              shift, and go to state 125
    TOKEN_RETURN             shift, and go to state 126
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 127
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 128
    TOKEN_CPP_COMMENT        shift, and go to state 129

    stmt        go to state 130
    if_nest     go to state 184
    decl        go to state 132
    id          go to state 23
    expr        go to state 133
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 177

   33 param: id TOKEN_COLON type .
   34      | id TOKEN_COLON type . TOKEN_COMMA param

    TOKEN_COMMA  shift, and go to state 185

    $default  reduce using rule 33 (param)


State 178

   36 brace_list: TOKEN_L_BRACE brace_list TOKEN_R_BRACE . TOKEN_COMMA brace_list
   37           | TOKEN_L_BRACE brace_list TOKEN_R_BRACE .

    TOKEN_COMMA  shift, and go to state 186

    $default  reduce using rule 37 (brace_list)


State 179

   29 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON .

    $default  reduce using rule 29 (decl)


State 180

   38 brace: expr TOKEN_COMMA brace .

    $default  reduce using rule 38 (brace)


State 181

   38 brace: expr . TOKEN_COMMA brace
   39      | expr .

    TOKEN_COMMA  shift, and go to state 173

    $default  reduce using rule 39 (brace)


State 182

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt .

    $default  reduce using rule 10 (stmt)


State 183

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr . TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   24 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr . TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_SEMICOLON  shift, and go to state 187


State 184

   12 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest . TOKEN_ELSE stmt
   16 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest . TOKEN_ELSE if_nest

    TOKEN_ELSE  shift, and go to state 188


State 185

   34 param: id TOKEN_COLON type TOKEN_COMMA . param

    TOKEN_IDENTIFIER  shift, and go to state 11

    param  go to state 189
    id     go to state 153


State 186

   36 brace_list: TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_COMMA . brace_list

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 190
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    brace_list  go to state 191
    brace       go to state 157
    id          go to state 41
    expr        go to state 181
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 187

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON . for_expr TOKEN_R_PAREN stmt
   24 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON . for_expr TOKEN_R_PAREN if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    $default  reduce using rule 44 (for_expr)

    for_expr    go to state 192
    id          go to state 41
    expr        go to state 78
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 188

   12 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE . stmt
   16 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE . if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 123
    TOKEN_IF                 shift, and go to state 124
    TOKEN_PRINT              shift, and go to state 125
    TOKEN_RETURN             shift, and go to state 126
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 127
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 128
    TOKEN_CPP_COMMENT        shift, and go to state 129

    stmt        go to state 166
    if_nest     go to state 193
    decl        go to state 132
    id          go to state 23
    expr        go to state 133
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 189

   34 param: id TOKEN_COLON type TOKEN_COMMA param .

    $default  reduce using rule 34 (param)


State 190

   36 brace_list: TOKEN_L_BRACE . brace_list TOKEN_R_BRACE TOKEN_COMMA brace_list
   37           | TOKEN_L_BRACE . brace_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 190
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    brace_list  go to state 170
    brace       go to state 157
    id          go to state 41
    expr        go to state 181
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 191

   36 brace_list: TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_COMMA brace_list .

    $default  reduce using rule 36 (brace_list)


State 192

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr . TOKEN_R_PAREN stmt
   24 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr . TOKEN_R_PAREN if_nest

    TOKEN_R_PAREN  shift, and go to state 194


State 193

   16 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest .

    $default  reduce using rule 16 (if_nest)


State 194

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN . stmt
   24 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN . if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 123
    TOKEN_IF                 shift, and go to state 124
    TOKEN_PRINT              shift, and go to state 125
    TOKEN_RETURN             shift, and go to state 126
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 127
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 128
    TOKEN_CPP_COMMENT        shift, and go to state 129

    stmt        go to state 182
    if_nest     go to state 195
    decl        go to state 132
    id          go to state 23
    expr        go to state 133
    expr_or     go to state 25
    expr_and    go to state 26
    expr_comp   go to state 27
    expr_add    go to state 28
    expr_mul    go to state 29
    expr_exp    go to state 30
    expr_unary  go to state 31
    exp_post    go to state 32
    factor      go to state 33
    arr_subscr  go to state 34
    literal     go to state 35


State 195

   24 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest .

    $default  reduce using rule 24 (if_nest)
