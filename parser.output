Terminals unused in grammar

   TOKEN_ELSE
   TOKEN_FOR
   TOKEN_IF
   TOKEN_PRINT
   TOKEN_RETURN
   TOKEN_WHILE
   TOKEN_AUTO
   TOKEN_L_BRACKET
   TOKEN_R_BRACKET
   TOKEN_L_BRACE
   TOKEN_R_BRACE
   TOKEN_POSTINC
   TOKEN_POSTDEC
   TOKEN_NEG
   TOKEN_NOT
   TOKEN_EXP
   TOKEN_MOD
   TOKEN_LESS
   TOKEN_LE
   TOKEN_GE
   TOKEN_GREATER
   TOKEN_EQUAL
   TOKEN_NEQUAL
   TOKEN_AND
   TOKEN_OR
   TOKEN_COMMA
   TOKEN_BACKSLASH
   TOKEN_C_COMMENT
   TOKEN_CPP_COMMENT
   TOKEN_ERROR
   TOKEN_EOF


Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: decl decl_list
    3          | decl

    4 decl: id TOKEN_COLON type TOKEN_SEMICOLON
    5     | id TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON

    6 type: TOKEN_INTEGER
    7     | TOKEN_FLOAT
    8     | TOKEN_BOOLEAN
    9     | TOKEN_CHARACTER
   10     | TOKEN_STRING
   11     | TOKEN_VOID
   12     | TOKEN_ARRAY
   13     | TOKEN_FUNCTION

   14 id: TOKEN_IDENTIFIER

   15 expr: expr TOKEN_ADD term
   16     | expr TOKEN_SUB term
   17     | term

   18 term: term TOKEN_MUL factor
   19     | term TOKEN_DIV factor
   20     | factor

   21 factor: TOKEN_SUB factor
   22       | TOKEN_ADD factor
   23       | TOKEN_L_PAREN expr TOKEN_R_PAREN
   24       | literal

   25 literal: TOKEN_INTEGER_LITERAL
   26        | TOKEN_FLOAT_LITERAL
   27        | TOKEN_CHARACTER_LITERAL
   28        | TOKEN_STRING_LITERAL
   29        | TOKEN_TRUE
   30        | TOKEN_FALSE


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_ARRAY (258) 12
TOKEN_BOOLEAN (259) 8
TOKEN_CHARACTER (260) 9
TOKEN_FLOAT (261) 7
TOKEN_FUNCTION (262) 13
TOKEN_INTEGER (263) 6
TOKEN_STRING (264) 10
TOKEN_VOID (265) 11
TOKEN_INTEGER_LITERAL (266) 25
TOKEN_CHARACTER_LITERAL (267) 27
TOKEN_STRING_LITERAL (268) 28
TOKEN_FLOAT_LITERAL (269) 26
TOKEN_ELSE (270)
TOKEN_FALSE (271) 30
TOKEN_FOR (272)
TOKEN_IF (273)
TOKEN_PRINT (274)
TOKEN_RETURN (275)
TOKEN_TRUE (276) 29
TOKEN_WHILE (277)
TOKEN_AUTO (278)
TOKEN_IDENTIFIER (279) 14
TOKEN_L_PAREN (280) 23
TOKEN_R_PAREN (281) 23
TOKEN_L_BRACKET (282)
TOKEN_R_BRACKET (283)
TOKEN_L_BRACE (284)
TOKEN_R_BRACE (285)
TOKEN_POSTINC (286)
TOKEN_POSTDEC (287)
TOKEN_NEG (288)
TOKEN_NOT (289)
TOKEN_EXP (290)
TOKEN_MUL (291) 18
TOKEN_DIV (292) 19
TOKEN_MOD (293)
TOKEN_ADD (294) 15 22
TOKEN_SUB (295) 16 21
TOKEN_LESS (296)
TOKEN_LE (297)
TOKEN_GE (298)
TOKEN_GREATER (299)
TOKEN_EQUAL (300)
TOKEN_NEQUAL (301)
TOKEN_AND (302)
TOKEN_OR (303)
TOKEN_ASSIGN (304) 5
TOKEN_SEMICOLON (305) 4 5
TOKEN_COLON (306) 4 5
TOKEN_COMMA (307)
TOKEN_BACKSLASH (308)
TOKEN_C_COMMENT (309)
TOKEN_CPP_COMMENT (310)
TOKEN_ERROR (311)
TOKEN_EOF (312)


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
program (59)
    on left: 1, on right: 0
decl_list (60)
    on left: 2 3, on right: 1 2
decl (61)
    on left: 4 5, on right: 2 3
type (62)
    on left: 6 7 8 9 10 11 12 13, on right: 4 5
id (63)
    on left: 14, on right: 4 5
expr (64)
    on left: 15 16 17, on right: 5 15 16 23
term (65)
    on left: 18 19 20, on right: 15 16 17 18 19
factor (66)
    on left: 21 22 23 24, on right: 18 19 20 21 22
literal (67)
    on left: 25 26 27 28 29 30, on right: 24


State 0

    0 $accept: . program $end

    TOKEN_IDENTIFIER  shift, and go to state 1

    program    go to state 2
    decl_list  go to state 3
    decl       go to state 4
    id         go to state 5


State 1

   14 id: TOKEN_IDENTIFIER .

    $default  reduce using rule 14 (id)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: decl_list .

    $default  reduce using rule 1 (program)


State 4

    2 decl_list: decl . decl_list
    3          | decl .

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 3 (decl_list)

    decl_list  go to state 7
    decl       go to state 4
    id         go to state 5


State 5

    4 decl: id . TOKEN_COLON type TOKEN_SEMICOLON
    5     | id . TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON

    TOKEN_COLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    2 decl_list: decl decl_list .

    $default  reduce using rule 2 (decl_list)


State 8

    4 decl: id TOKEN_COLON . type TOKEN_SEMICOLON
    5     | id TOKEN_COLON . type TOKEN_ASSIGN expr TOKEN_SEMICOLON

    TOKEN_ARRAY      shift, and go to state 9
    TOKEN_BOOLEAN    shift, and go to state 10
    TOKEN_CHARACTER  shift, and go to state 11
    TOKEN_FLOAT      shift, and go to state 12
    TOKEN_FUNCTION   shift, and go to state 13
    TOKEN_INTEGER    shift, and go to state 14
    TOKEN_STRING     shift, and go to state 15
    TOKEN_VOID       shift, and go to state 16

    type  go to state 17


State 9

   12 type: TOKEN_ARRAY .

    $default  reduce using rule 12 (type)


State 10

    8 type: TOKEN_BOOLEAN .

    $default  reduce using rule 8 (type)


State 11

    9 type: TOKEN_CHARACTER .

    $default  reduce using rule 9 (type)


State 12

    7 type: TOKEN_FLOAT .

    $default  reduce using rule 7 (type)


State 13

   13 type: TOKEN_FUNCTION .

    $default  reduce using rule 13 (type)


State 14

    6 type: TOKEN_INTEGER .

    $default  reduce using rule 6 (type)


State 15

   10 type: TOKEN_STRING .

    $default  reduce using rule 10 (type)


State 16

   11 type: TOKEN_VOID .

    $default  reduce using rule 11 (type)


State 17

    4 decl: id TOKEN_COLON type . TOKEN_SEMICOLON
    5     | id TOKEN_COLON type . TOKEN_ASSIGN expr TOKEN_SEMICOLON

    TOKEN_ASSIGN     shift, and go to state 18
    TOKEN_SEMICOLON  shift, and go to state 19


State 18

    5 decl: id TOKEN_COLON type TOKEN_ASSIGN . expr TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 20
    TOKEN_CHARACTER_LITERAL  shift, and go to state 21
    TOKEN_STRING_LITERAL     shift, and go to state 22
    TOKEN_FLOAT_LITERAL      shift, and go to state 23
    TOKEN_FALSE              shift, and go to state 24
    TOKEN_TRUE               shift, and go to state 25
    TOKEN_L_PAREN            shift, and go to state 26
    TOKEN_ADD                shift, and go to state 27
    TOKEN_SUB                shift, and go to state 28

    expr     go to state 29
    term     go to state 30
    factor   go to state 31
    literal  go to state 32


State 19

    4 decl: id TOKEN_COLON type TOKEN_SEMICOLON .

    $default  reduce using rule 4 (decl)


State 20

   25 literal: TOKEN_INTEGER_LITERAL .

    $default  reduce using rule 25 (literal)


State 21

   27 literal: TOKEN_CHARACTER_LITERAL .

    $default  reduce using rule 27 (literal)


State 22

   28 literal: TOKEN_STRING_LITERAL .

    $default  reduce using rule 28 (literal)


State 23

   26 literal: TOKEN_FLOAT_LITERAL .

    $default  reduce using rule 26 (literal)


State 24

   30 literal: TOKEN_FALSE .

    $default  reduce using rule 30 (literal)


State 25

   29 literal: TOKEN_TRUE .

    $default  reduce using rule 29 (literal)


State 26

   23 factor: TOKEN_L_PAREN . expr TOKEN_R_PAREN

    TOKEN_INTEGER_LITERAL    shift, and go to state 20
    TOKEN_CHARACTER_LITERAL  shift, and go to state 21
    TOKEN_STRING_LITERAL     shift, and go to state 22
    TOKEN_FLOAT_LITERAL      shift, and go to state 23
    TOKEN_FALSE              shift, and go to state 24
    TOKEN_TRUE               shift, and go to state 25
    TOKEN_L_PAREN            shift, and go to state 26
    TOKEN_ADD                shift, and go to state 27
    TOKEN_SUB                shift, and go to state 28

    expr     go to state 33
    term     go to state 30
    factor   go to state 31
    literal  go to state 32


State 27

   22 factor: TOKEN_ADD . factor

    TOKEN_INTEGER_LITERAL    shift, and go to state 20
    TOKEN_CHARACTER_LITERAL  shift, and go to state 21
    TOKEN_STRING_LITERAL     shift, and go to state 22
    TOKEN_FLOAT_LITERAL      shift, and go to state 23
    TOKEN_FALSE              shift, and go to state 24
    TOKEN_TRUE               shift, and go to state 25
    TOKEN_L_PAREN            shift, and go to state 26
    TOKEN_ADD                shift, and go to state 27
    TOKEN_SUB                shift, and go to state 28

    factor   go to state 34
    literal  go to state 32


State 28

   21 factor: TOKEN_SUB . factor

    TOKEN_INTEGER_LITERAL    shift, and go to state 20
    TOKEN_CHARACTER_LITERAL  shift, and go to state 21
    TOKEN_STRING_LITERAL     shift, and go to state 22
    TOKEN_FLOAT_LITERAL      shift, and go to state 23
    TOKEN_FALSE              shift, and go to state 24
    TOKEN_TRUE               shift, and go to state 25
    TOKEN_L_PAREN            shift, and go to state 26
    TOKEN_ADD                shift, and go to state 27
    TOKEN_SUB                shift, and go to state 28

    factor   go to state 35
    literal  go to state 32


State 29

    5 decl: id TOKEN_COLON type TOKEN_ASSIGN expr . TOKEN_SEMICOLON
   15 expr: expr . TOKEN_ADD term
   16     | expr . TOKEN_SUB term

    TOKEN_ADD        shift, and go to state 36
    TOKEN_SUB        shift, and go to state 37
    TOKEN_SEMICOLON  shift, and go to state 38


State 30

   17 expr: term .
   18 term: term . TOKEN_MUL factor
   19     | term . TOKEN_DIV factor

    TOKEN_MUL  shift, and go to state 39
    TOKEN_DIV  shift, and go to state 40

    $default  reduce using rule 17 (expr)


State 31

   20 term: factor .

    $default  reduce using rule 20 (term)


State 32

   24 factor: literal .

    $default  reduce using rule 24 (factor)


State 33

   15 expr: expr . TOKEN_ADD term
   16     | expr . TOKEN_SUB term
   23 factor: TOKEN_L_PAREN expr . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 41
    TOKEN_ADD      shift, and go to state 36
    TOKEN_SUB      shift, and go to state 37


State 34

   22 factor: TOKEN_ADD factor .

    $default  reduce using rule 22 (factor)


State 35

   21 factor: TOKEN_SUB factor .

    $default  reduce using rule 21 (factor)


State 36

   15 expr: expr TOKEN_ADD . term

    TOKEN_INTEGER_LITERAL    shift, and go to state 20
    TOKEN_CHARACTER_LITERAL  shift, and go to state 21
    TOKEN_STRING_LITERAL     shift, and go to state 22
    TOKEN_FLOAT_LITERAL      shift, and go to state 23
    TOKEN_FALSE              shift, and go to state 24
    TOKEN_TRUE               shift, and go to state 25
    TOKEN_L_PAREN            shift, and go to state 26
    TOKEN_ADD                shift, and go to state 27
    TOKEN_SUB                shift, and go to state 28

    term     go to state 42
    factor   go to state 31
    literal  go to state 32


State 37

   16 expr: expr TOKEN_SUB . term

    TOKEN_INTEGER_LITERAL    shift, and go to state 20
    TOKEN_CHARACTER_LITERAL  shift, and go to state 21
    TOKEN_STRING_LITERAL     shift, and go to state 22
    TOKEN_FLOAT_LITERAL      shift, and go to state 23
    TOKEN_FALSE              shift, and go to state 24
    TOKEN_TRUE               shift, and go to state 25
    TOKEN_L_PAREN            shift, and go to state 26
    TOKEN_ADD                shift, and go to state 27
    TOKEN_SUB                shift, and go to state 28

    term     go to state 43
    factor   go to state 31
    literal  go to state 32


State 38

    5 decl: id TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON .

    $default  reduce using rule 5 (decl)


State 39

   18 term: term TOKEN_MUL . factor

    TOKEN_INTEGER_LITERAL    shift, and go to state 20
    TOKEN_CHARACTER_LITERAL  shift, and go to state 21
    TOKEN_STRING_LITERAL     shift, and go to state 22
    TOKEN_FLOAT_LITERAL      shift, and go to state 23
    TOKEN_FALSE              shift, and go to state 24
    TOKEN_TRUE               shift, and go to state 25
    TOKEN_L_PAREN            shift, and go to state 26
    TOKEN_ADD                shift, and go to state 27
    TOKEN_SUB                shift, and go to state 28

    factor   go to state 44
    literal  go to state 32


State 40

   19 term: term TOKEN_DIV . factor

    TOKEN_INTEGER_LITERAL    shift, and go to state 20
    TOKEN_CHARACTER_LITERAL  shift, and go to state 21
    TOKEN_STRING_LITERAL     shift, and go to state 22
    TOKEN_FLOAT_LITERAL      shift, and go to state 23
    TOKEN_FALSE              shift, and go to state 24
    TOKEN_TRUE               shift, and go to state 25
    TOKEN_L_PAREN            shift, and go to state 26
    TOKEN_ADD                shift, and go to state 27
    TOKEN_SUB                shift, and go to state 28

    factor   go to state 45
    literal  go to state 32


State 41

   23 factor: TOKEN_L_PAREN expr TOKEN_R_PAREN .

    $default  reduce using rule 23 (factor)


State 42

   15 expr: expr TOKEN_ADD term .
   18 term: term . TOKEN_MUL factor
   19     | term . TOKEN_DIV factor

    TOKEN_MUL  shift, and go to state 39
    TOKEN_DIV  shift, and go to state 40

    $default  reduce using rule 15 (expr)


State 43

   16 expr: expr TOKEN_SUB term .
   18 term: term . TOKEN_MUL factor
   19     | term . TOKEN_DIV factor

    TOKEN_MUL  shift, and go to state 39
    TOKEN_DIV  shift, and go to state 40

    $default  reduce using rule 16 (expr)


State 44

   18 term: term TOKEN_MUL factor .

    $default  reduce using rule 18 (term)


State 45

   19 term: term TOKEN_DIV factor .

    $default  reduce using rule 19 (term)
