Terminals unused in grammar

   TOKEN_ELSE
   TOKEN_FOR
   TOKEN_IF
   TOKEN_PRINT
   TOKEN_RETURN
   TOKEN_WHILE
   TOKEN_AUTO
   TOKEN_POSTINC
   TOKEN_POSTDEC
   TOKEN_NEG
   TOKEN_NOT
   TOKEN_EXP
   TOKEN_MOD
   TOKEN_LESS
   TOKEN_LE
   TOKEN_GE
   TOKEN_GREATER
   TOKEN_EQUAL
   TOKEN_NEQUAL
   TOKEN_AND
   TOKEN_OR
   TOKEN_BACKSLASH
   TOKEN_C_COMMENT
   TOKEN_CPP_COMMENT
   TOKEN_ERROR
   TOKEN_EOF


Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: decl decl_list
    3          | decl

    4 decl: id TOKEN_COLON type
    5     | id TOKEN_COLON type TOKEN_ASSIGN expr
    6     | id TOKEN_COLON type idx type
    7     | id TOKEN_COLON type idx type TOKEN_ASSIGN brac_list
    8     | decl TOKEN_SEMICOLON

    9 brac_list: TOKEN_L_BRACE brac_list TOKEN_R_BRACE
   10          | arg_list

   11 arg_list: arg TOKEN_COMMA arg_list
   12         | arg

   13 arg: expr

   14 idx: TOKEN_L_BRACKET expr TOKEN_R_BRACKET

   15 type: TOKEN_INTEGER
   16     | TOKEN_FLOAT
   17     | TOKEN_BOOLEAN
   18     | TOKEN_CHARACTER
   19     | TOKEN_STRING
   20     | TOKEN_VOID
   21     | TOKEN_ARRAY
   22     | TOKEN_FUNCTION

   23 id: TOKEN_IDENTIFIER

   24 expr: expr TOKEN_ADD term
   25     | expr TOKEN_SUB term
   26     | term

   27 term: term TOKEN_MUL factor
   28     | term TOKEN_DIV factor
   29     | factor

   30 factor: TOKEN_SUB factor
   31       | TOKEN_ADD factor
   32       | TOKEN_L_PAREN expr TOKEN_R_PAREN
   33       | literal

   34 literal: TOKEN_INTEGER_LITERAL
   35        | TOKEN_FLOAT_LITERAL
   36        | TOKEN_CHARACTER_LITERAL
   37        | TOKEN_STRING_LITERAL
   38        | TOKEN_TRUE
   39        | TOKEN_FALSE


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_ARRAY (258) 21
TOKEN_BOOLEAN (259) 17
TOKEN_CHARACTER (260) 18
TOKEN_FLOAT (261) 16
TOKEN_FUNCTION (262) 22
TOKEN_INTEGER (263) 15
TOKEN_STRING (264) 19
TOKEN_VOID (265) 20
TOKEN_INTEGER_LITERAL (266) 34
TOKEN_CHARACTER_LITERAL (267) 36
TOKEN_STRING_LITERAL (268) 37
TOKEN_FLOAT_LITERAL (269) 35
TOKEN_ELSE (270)
TOKEN_FALSE (271) 39
TOKEN_FOR (272)
TOKEN_IF (273)
TOKEN_PRINT (274)
TOKEN_RETURN (275)
TOKEN_TRUE (276) 38
TOKEN_WHILE (277)
TOKEN_AUTO (278)
TOKEN_IDENTIFIER (279) 23
TOKEN_L_PAREN (280) 32
TOKEN_R_PAREN (281) 32
TOKEN_L_BRACKET (282) 14
TOKEN_R_BRACKET (283) 14
TOKEN_L_BRACE (284) 9
TOKEN_R_BRACE (285) 9
TOKEN_POSTINC (286)
TOKEN_POSTDEC (287)
TOKEN_NEG (288)
TOKEN_NOT (289)
TOKEN_EXP (290)
TOKEN_MUL (291) 27
TOKEN_DIV (292) 28
TOKEN_MOD (293)
TOKEN_ADD (294) 24 31
TOKEN_SUB (295) 25 30
TOKEN_LESS (296)
TOKEN_LE (297)
TOKEN_GE (298)
TOKEN_GREATER (299)
TOKEN_EQUAL (300)
TOKEN_NEQUAL (301)
TOKEN_AND (302)
TOKEN_OR (303)
TOKEN_ASSIGN (304) 5 7
TOKEN_SEMICOLON (305) 8
TOKEN_COLON (306) 4 5 6 7
TOKEN_COMMA (307) 11
TOKEN_BACKSLASH (308)
TOKEN_C_COMMENT (309)
TOKEN_CPP_COMMENT (310)
TOKEN_ERROR (311)
TOKEN_EOF (312)


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
program (59)
    on left: 1, on right: 0
decl_list (60)
    on left: 2 3, on right: 1 2
decl (61)
    on left: 4 5 6 7 8, on right: 2 3 8
brac_list (62)
    on left: 9 10, on right: 7 9
arg_list (63)
    on left: 11 12, on right: 10 11
arg (64)
    on left: 13, on right: 11 12
idx (65)
    on left: 14, on right: 6 7
type (66)
    on left: 15 16 17 18 19 20 21 22, on right: 4 5 6 7
id (67)
    on left: 23, on right: 4 5 6 7
expr (68)
    on left: 24 25 26, on right: 5 13 14 24 25 32
term (69)
    on left: 27 28 29, on right: 24 25 26 27 28
factor (70)
    on left: 30 31 32 33, on right: 27 28 29 30 31
literal (71)
    on left: 34 35 36 37 38 39, on right: 33


State 0

    0 $accept: . program $end

    TOKEN_IDENTIFIER  shift, and go to state 1

    program    go to state 2
    decl_list  go to state 3
    decl       go to state 4
    id         go to state 5


State 1

   23 id: TOKEN_IDENTIFIER .

    $default  reduce using rule 23 (id)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: decl_list .

    $default  reduce using rule 1 (program)


State 4

    2 decl_list: decl . decl_list
    3          | decl .
    8 decl: decl . TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_SEMICOLON   shift, and go to state 7

    $default  reduce using rule 3 (decl_list)

    decl_list  go to state 8
    decl       go to state 4
    id         go to state 5


State 5

    4 decl: id . TOKEN_COLON type
    5     | id . TOKEN_COLON type TOKEN_ASSIGN expr
    6     | id . TOKEN_COLON type idx type
    7     | id . TOKEN_COLON type idx type TOKEN_ASSIGN brac_list

    TOKEN_COLON  shift, and go to state 9


State 6

    0 $accept: program $end .

    $default  accept


State 7

    8 decl: decl TOKEN_SEMICOLON .

    $default  reduce using rule 8 (decl)


State 8

    2 decl_list: decl decl_list .

    $default  reduce using rule 2 (decl_list)


State 9

    4 decl: id TOKEN_COLON . type
    5     | id TOKEN_COLON . type TOKEN_ASSIGN expr
    6     | id TOKEN_COLON . type idx type
    7     | id TOKEN_COLON . type idx type TOKEN_ASSIGN brac_list

    TOKEN_ARRAY      shift, and go to state 10
    TOKEN_BOOLEAN    shift, and go to state 11
    TOKEN_CHARACTER  shift, and go to state 12
    TOKEN_FLOAT      shift, and go to state 13
    TOKEN_FUNCTION   shift, and go to state 14
    TOKEN_INTEGER    shift, and go to state 15
    TOKEN_STRING     shift, and go to state 16
    TOKEN_VOID       shift, and go to state 17

    type  go to state 18


State 10

   21 type: TOKEN_ARRAY .

    $default  reduce using rule 21 (type)


State 11

   17 type: TOKEN_BOOLEAN .

    $default  reduce using rule 17 (type)


State 12

   18 type: TOKEN_CHARACTER .

    $default  reduce using rule 18 (type)


State 13

   16 type: TOKEN_FLOAT .

    $default  reduce using rule 16 (type)


State 14

   22 type: TOKEN_FUNCTION .

    $default  reduce using rule 22 (type)


State 15

   15 type: TOKEN_INTEGER .

    $default  reduce using rule 15 (type)


State 16

   19 type: TOKEN_STRING .

    $default  reduce using rule 19 (type)


State 17

   20 type: TOKEN_VOID .

    $default  reduce using rule 20 (type)


State 18

    4 decl: id TOKEN_COLON type .
    5     | id TOKEN_COLON type . TOKEN_ASSIGN expr
    6     | id TOKEN_COLON type . idx type
    7     | id TOKEN_COLON type . idx type TOKEN_ASSIGN brac_list

    TOKEN_L_BRACKET  shift, and go to state 19
    TOKEN_ASSIGN     shift, and go to state 20

    $default  reduce using rule 4 (decl)

    idx  go to state 21


State 19

   14 idx: TOKEN_L_BRACKET . expr TOKEN_R_BRACKET

    TOKEN_INTEGER_LITERAL    shift, and go to state 22
    TOKEN_CHARACTER_LITERAL  shift, and go to state 23
    TOKEN_STRING_LITERAL     shift, and go to state 24
    TOKEN_FLOAT_LITERAL      shift, and go to state 25
    TOKEN_FALSE              shift, and go to state 26
    TOKEN_TRUE               shift, and go to state 27
    TOKEN_L_PAREN            shift, and go to state 28
    TOKEN_ADD                shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30

    expr     go to state 31
    term     go to state 32
    factor   go to state 33
    literal  go to state 34


State 20

    5 decl: id TOKEN_COLON type TOKEN_ASSIGN . expr

    TOKEN_INTEGER_LITERAL    shift, and go to state 22
    TOKEN_CHARACTER_LITERAL  shift, and go to state 23
    TOKEN_STRING_LITERAL     shift, and go to state 24
    TOKEN_FLOAT_LITERAL      shift, and go to state 25
    TOKEN_FALSE              shift, and go to state 26
    TOKEN_TRUE               shift, and go to state 27
    TOKEN_L_PAREN            shift, and go to state 28
    TOKEN_ADD                shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30

    expr     go to state 35
    term     go to state 32
    factor   go to state 33
    literal  go to state 34


State 21

    6 decl: id TOKEN_COLON type idx . type
    7     | id TOKEN_COLON type idx . type TOKEN_ASSIGN brac_list

    TOKEN_ARRAY      shift, and go to state 10
    TOKEN_BOOLEAN    shift, and go to state 11
    TOKEN_CHARACTER  shift, and go to state 12
    TOKEN_FLOAT      shift, and go to state 13
    TOKEN_FUNCTION   shift, and go to state 14
    TOKEN_INTEGER    shift, and go to state 15
    TOKEN_STRING     shift, and go to state 16
    TOKEN_VOID       shift, and go to state 17

    type  go to state 36


State 22

   34 literal: TOKEN_INTEGER_LITERAL .

    $default  reduce using rule 34 (literal)


State 23

   36 literal: TOKEN_CHARACTER_LITERAL .

    $default  reduce using rule 36 (literal)


State 24

   37 literal: TOKEN_STRING_LITERAL .

    $default  reduce using rule 37 (literal)


State 25

   35 literal: TOKEN_FLOAT_LITERAL .

    $default  reduce using rule 35 (literal)


State 26

   39 literal: TOKEN_FALSE .

    $default  reduce using rule 39 (literal)


State 27

   38 literal: TOKEN_TRUE .

    $default  reduce using rule 38 (literal)


State 28

   32 factor: TOKEN_L_PAREN . expr TOKEN_R_PAREN

    TOKEN_INTEGER_LITERAL    shift, and go to state 22
    TOKEN_CHARACTER_LITERAL  shift, and go to state 23
    TOKEN_STRING_LITERAL     shift, and go to state 24
    TOKEN_FLOAT_LITERAL      shift, and go to state 25
    TOKEN_FALSE              shift, and go to state 26
    TOKEN_TRUE               shift, and go to state 27
    TOKEN_L_PAREN            shift, and go to state 28
    TOKEN_ADD                shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30

    expr     go to state 37
    term     go to state 32
    factor   go to state 33
    literal  go to state 34


State 29

   31 factor: TOKEN_ADD . factor

    TOKEN_INTEGER_LITERAL    shift, and go to state 22
    TOKEN_CHARACTER_LITERAL  shift, and go to state 23
    TOKEN_STRING_LITERAL     shift, and go to state 24
    TOKEN_FLOAT_LITERAL      shift, and go to state 25
    TOKEN_FALSE              shift, and go to state 26
    TOKEN_TRUE               shift, and go to state 27
    TOKEN_L_PAREN            shift, and go to state 28
    TOKEN_ADD                shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30

    factor   go to state 38
    literal  go to state 34


State 30

   30 factor: TOKEN_SUB . factor

    TOKEN_INTEGER_LITERAL    shift, and go to state 22
    TOKEN_CHARACTER_LITERAL  shift, and go to state 23
    TOKEN_STRING_LITERAL     shift, and go to state 24
    TOKEN_FLOAT_LITERAL      shift, and go to state 25
    TOKEN_FALSE              shift, and go to state 26
    TOKEN_TRUE               shift, and go to state 27
    TOKEN_L_PAREN            shift, and go to state 28
    TOKEN_ADD                shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30

    factor   go to state 39
    literal  go to state 34


State 31

   14 idx: TOKEN_L_BRACKET expr . TOKEN_R_BRACKET
   24 expr: expr . TOKEN_ADD term
   25     | expr . TOKEN_SUB term

    TOKEN_R_BRACKET  shift, and go to state 40
    TOKEN_ADD        shift, and go to state 41
    TOKEN_SUB        shift, and go to state 42


State 32

   26 expr: term .
   27 term: term . TOKEN_MUL factor
   28     | term . TOKEN_DIV factor

    TOKEN_MUL  shift, and go to state 43
    TOKEN_DIV  shift, and go to state 44

    $default  reduce using rule 26 (expr)


State 33

   29 term: factor .

    $default  reduce using rule 29 (term)


State 34

   33 factor: literal .

    $default  reduce using rule 33 (factor)


State 35

    5 decl: id TOKEN_COLON type TOKEN_ASSIGN expr .
   24 expr: expr . TOKEN_ADD term
   25     | expr . TOKEN_SUB term

    TOKEN_ADD  shift, and go to state 41
    TOKEN_SUB  shift, and go to state 42

    $default  reduce using rule 5 (decl)


State 36

    6 decl: id TOKEN_COLON type idx type .
    7     | id TOKEN_COLON type idx type . TOKEN_ASSIGN brac_list

    TOKEN_ASSIGN  shift, and go to state 45

    $default  reduce using rule 6 (decl)


State 37

   24 expr: expr . TOKEN_ADD term
   25     | expr . TOKEN_SUB term
   32 factor: TOKEN_L_PAREN expr . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 46
    TOKEN_ADD      shift, and go to state 41
    TOKEN_SUB      shift, and go to state 42


State 38

   31 factor: TOKEN_ADD factor .

    $default  reduce using rule 31 (factor)


State 39

   30 factor: TOKEN_SUB factor .

    $default  reduce using rule 30 (factor)


State 40

   14 idx: TOKEN_L_BRACKET expr TOKEN_R_BRACKET .

    $default  reduce using rule 14 (idx)


State 41

   24 expr: expr TOKEN_ADD . term

    TOKEN_INTEGER_LITERAL    shift, and go to state 22
    TOKEN_CHARACTER_LITERAL  shift, and go to state 23
    TOKEN_STRING_LITERAL     shift, and go to state 24
    TOKEN_FLOAT_LITERAL      shift, and go to state 25
    TOKEN_FALSE              shift, and go to state 26
    TOKEN_TRUE               shift, and go to state 27
    TOKEN_L_PAREN            shift, and go to state 28
    TOKEN_ADD                shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30

    term     go to state 47
    factor   go to state 33
    literal  go to state 34


State 42

   25 expr: expr TOKEN_SUB . term

    TOKEN_INTEGER_LITERAL    shift, and go to state 22
    TOKEN_CHARACTER_LITERAL  shift, and go to state 23
    TOKEN_STRING_LITERAL     shift, and go to state 24
    TOKEN_FLOAT_LITERAL      shift, and go to state 25
    TOKEN_FALSE              shift, and go to state 26
    TOKEN_TRUE               shift, and go to state 27
    TOKEN_L_PAREN            shift, and go to state 28
    TOKEN_ADD                shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30

    term     go to state 48
    factor   go to state 33
    literal  go to state 34


State 43

   27 term: term TOKEN_MUL . factor

    TOKEN_INTEGER_LITERAL    shift, and go to state 22
    TOKEN_CHARACTER_LITERAL  shift, and go to state 23
    TOKEN_STRING_LITERAL     shift, and go to state 24
    TOKEN_FLOAT_LITERAL      shift, and go to state 25
    TOKEN_FALSE              shift, and go to state 26
    TOKEN_TRUE               shift, and go to state 27
    TOKEN_L_PAREN            shift, and go to state 28
    TOKEN_ADD                shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30

    factor   go to state 49
    literal  go to state 34


State 44

   28 term: term TOKEN_DIV . factor

    TOKEN_INTEGER_LITERAL    shift, and go to state 22
    TOKEN_CHARACTER_LITERAL  shift, and go to state 23
    TOKEN_STRING_LITERAL     shift, and go to state 24
    TOKEN_FLOAT_LITERAL      shift, and go to state 25
    TOKEN_FALSE              shift, and go to state 26
    TOKEN_TRUE               shift, and go to state 27
    TOKEN_L_PAREN            shift, and go to state 28
    TOKEN_ADD                shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30

    factor   go to state 50
    literal  go to state 34


State 45

    7 decl: id TOKEN_COLON type idx type TOKEN_ASSIGN . brac_list

    TOKEN_INTEGER_LITERAL    shift, and go to state 22
    TOKEN_CHARACTER_LITERAL  shift, and go to state 23
    TOKEN_STRING_LITERAL     shift, and go to state 24
    TOKEN_FLOAT_LITERAL      shift, and go to state 25
    TOKEN_FALSE              shift, and go to state 26
    TOKEN_TRUE               shift, and go to state 27
    TOKEN_L_PAREN            shift, and go to state 28
    TOKEN_L_BRACE            shift, and go to state 51
    TOKEN_ADD                shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30

    brac_list  go to state 52
    arg_list   go to state 53
    arg        go to state 54
    expr       go to state 55
    term       go to state 32
    factor     go to state 33
    literal    go to state 34


State 46

   32 factor: TOKEN_L_PAREN expr TOKEN_R_PAREN .

    $default  reduce using rule 32 (factor)


State 47

   24 expr: expr TOKEN_ADD term .
   27 term: term . TOKEN_MUL factor
   28     | term . TOKEN_DIV factor

    TOKEN_MUL  shift, and go to state 43
    TOKEN_DIV  shift, and go to state 44

    $default  reduce using rule 24 (expr)


State 48

   25 expr: expr TOKEN_SUB term .
   27 term: term . TOKEN_MUL factor
   28     | term . TOKEN_DIV factor

    TOKEN_MUL  shift, and go to state 43
    TOKEN_DIV  shift, and go to state 44

    $default  reduce using rule 25 (expr)


State 49

   27 term: term TOKEN_MUL factor .

    $default  reduce using rule 27 (term)


State 50

   28 term: term TOKEN_DIV factor .

    $default  reduce using rule 28 (term)


State 51

    9 brac_list: TOKEN_L_BRACE . brac_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 22
    TOKEN_CHARACTER_LITERAL  shift, and go to state 23
    TOKEN_STRING_LITERAL     shift, and go to state 24
    TOKEN_FLOAT_LITERAL      shift, and go to state 25
    TOKEN_FALSE              shift, and go to state 26
    TOKEN_TRUE               shift, and go to state 27
    TOKEN_L_PAREN            shift, and go to state 28
    TOKEN_L_BRACE            shift, and go to state 51
    TOKEN_ADD                shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30

    brac_list  go to state 56
    arg_list   go to state 53
    arg        go to state 54
    expr       go to state 55
    term       go to state 32
    factor     go to state 33
    literal    go to state 34


State 52

    7 decl: id TOKEN_COLON type idx type TOKEN_ASSIGN brac_list .

    $default  reduce using rule 7 (decl)


State 53

   10 brac_list: arg_list .

    $default  reduce using rule 10 (brac_list)


State 54

   11 arg_list: arg . TOKEN_COMMA arg_list
   12         | arg .

    TOKEN_COMMA  shift, and go to state 57

    $default  reduce using rule 12 (arg_list)


State 55

   13 arg: expr .
   24 expr: expr . TOKEN_ADD term
   25     | expr . TOKEN_SUB term

    TOKEN_ADD  shift, and go to state 41
    TOKEN_SUB  shift, and go to state 42

    $default  reduce using rule 13 (arg)


State 56

    9 brac_list: TOKEN_L_BRACE brac_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 58


State 57

   11 arg_list: arg TOKEN_COMMA . arg_list

    TOKEN_INTEGER_LITERAL    shift, and go to state 22
    TOKEN_CHARACTER_LITERAL  shift, and go to state 23
    TOKEN_STRING_LITERAL     shift, and go to state 24
    TOKEN_FLOAT_LITERAL      shift, and go to state 25
    TOKEN_FALSE              shift, and go to state 26
    TOKEN_TRUE               shift, and go to state 27
    TOKEN_L_PAREN            shift, and go to state 28
    TOKEN_ADD                shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30

    arg_list  go to state 59
    arg       go to state 54
    expr      go to state 55
    term      go to state 32
    factor    go to state 33
    literal   go to state 34


State 58

    9 brac_list: TOKEN_L_BRACE brac_list TOKEN_R_BRACE .

    $default  reduce using rule 9 (brac_list)


State 59

   11 arg_list: arg TOKEN_COMMA arg_list .

    $default  reduce using rule 11 (arg_list)
