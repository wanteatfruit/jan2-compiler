Terminals unused in grammar

   TOKEN_WHILE
   TOKEN_AUTO
   TOKEN_NEG
   TOKEN_BACKSLASH
   TOKEN_ERROR


Grammar

    0 $accept: program $end

    1 program: stmt_list TOKEN_EOF
    2        | TOKEN_EOF

    3 stmt_list: stmt stmt_list
    4          | stmt

    5 stmt: decl
    6     | expr TOKEN_SEMICOLON
    7     | TOKEN_PRINT print_list TOKEN_SEMICOLON
    8     | TOKEN_RETURN expr TOKEN_SEMICOLON
    9     | TOKEN_RETURN TOKEN_SEMICOLON
   10     | TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   11     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   12     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   13     | TOKEN_L_BRACE stmt_list TOKEN_R_BRACE
   14     | TOKEN_L_BRACE TOKEN_R_BRACE
   15     | TOKEN_C_COMMENT
   16     | TOKEN_CPP_COMMENT

   17 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest
   18        | decl
   19        | expr TOKEN_SEMICOLON
   20        | TOKEN_L_BRACE stmt_list TOKEN_R_BRACE
   21        | TOKEN_PRINT print_list TOKEN_SEMICOLON
   22        | TOKEN_RETURN expr TOKEN_SEMICOLON
   23        | TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest
   24        | TOKEN_C_COMMENT
   25        | TOKEN_CPP_COMMENT

   26 decl: id TOKEN_COLON type TOKEN_SEMICOLON
   27     | id TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   28     | id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   29     | id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

   30 brace_list: brace
   31           | %empty

   32 brace: expr TOKEN_COMMA brace
   33      | expr

   34 param_list: param
   35           | %empty

   36 param: id TOKEN_COLON type
   37      | id TOKEN_COLON type TOKEN_COMMA param

   38 arg_list: arg
   39         | %empty

   40 arg: expr TOKEN_COMMA arg
   41    | expr

   42 print_list: print
   43           | %empty

   44 print: expr TOKEN_COMMA print
   45      | expr

   46 for_expr: expr
   47         | %empty

   48 type: TOKEN_INTEGER
   49     | TOKEN_FLOAT
   50     | TOKEN_BOOLEAN
   51     | TOKEN_CHARACTER
   52     | TOKEN_STRING
   53     | TOKEN_VOID
   54     | TOKEN_ARRAY TOKEN_L_BRACKET TOKEN_R_BRACKET type
   55     | TOKEN_ARRAY TOKEN_L_BRACKET expr TOKEN_R_BRACKET type
   56     | TOKEN_FUNCTION type TOKEN_L_PAREN param_list TOKEN_R_PAREN

   57 id: TOKEN_IDENTIFIER

   58 expr: id TOKEN_ASSIGN expr
   59     | arr_subscr TOKEN_ASSIGN expr
   60     | expr_or

   61 expr_or: expr_and TOKEN_OR expr_or
   62        | expr_and

   63 expr_and: expr_comp TOKEN_AND expr_and
   64         | expr_comp

   65 expr_comp: expr_add TOKEN_EQUAL expr_comp
   66          | expr_add TOKEN_LESS expr_comp
   67          | expr_add TOKEN_NEQUAL expr_comp
   68          | expr_add TOKEN_LE expr_comp
   69          | expr_add TOKEN_GE expr_comp
   70          | expr_add TOKEN_GREATER expr_comp
   71          | expr_add

   72 expr_add: expr_mul TOKEN_ADD expr_add
   73         | expr_mul TOKEN_SUB expr_add
   74         | expr_mul

   75 expr_mul: expr_exp TOKEN_MUL expr_mul
   76         | expr_exp TOKEN_DIV expr_mul
   77         | expr_exp TOKEN_MOD expr_mul
   78         | expr_exp

   79 expr_exp: expr_unary TOKEN_EXP expr_exp
   80         | expr_unary

   81 expr_unary: TOKEN_SUB expr_unary
   82           | TOKEN_NOT expr_unary
   83           | TOKEN_ADD expr_unary
   84           | exp_post

   85 exp_post: factor TOKEN_POSTINC
   86         | factor TOKEN_POSTDEC
   87         | factor

   88 factor: TOKEN_L_PAREN expr TOKEN_R_PAREN
   89       | arr_subscr
   90       | literal
   91       | id
   92       | id TOKEN_L_PAREN arg_list TOKEN_R_PAREN

   93 arr_subscr: factor TOKEN_L_BRACKET expr TOKEN_R_BRACKET

   94 literal: TOKEN_INTEGER_LITERAL
   95        | TOKEN_FLOAT_LITERAL
   96        | TOKEN_CHARACTER_LITERAL
   97        | TOKEN_STRING_LITERAL
   98        | TOKEN_TRUE
   99        | TOKEN_FALSE


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_ARRAY (258) 54 55
TOKEN_BOOLEAN (259) 50
TOKEN_CHARACTER (260) 51
TOKEN_FLOAT (261) 49
TOKEN_FUNCTION (262) 56
TOKEN_INTEGER (263) 48
TOKEN_STRING (264) 52
TOKEN_VOID (265) 53
TOKEN_INTEGER_LITERAL (266) 94
TOKEN_CHARACTER_LITERAL (267) 96
TOKEN_STRING_LITERAL (268) 97
TOKEN_FLOAT_LITERAL (269) 95
TOKEN_ELSE (270) 12 17
TOKEN_FALSE (271) 99
TOKEN_FOR (272) 10 23
TOKEN_IF (273) 11 12 17
TOKEN_PRINT (274) 7 21
TOKEN_RETURN (275) 8 9 22
TOKEN_TRUE (276) 98
TOKEN_WHILE (277)
TOKEN_AUTO (278)
TOKEN_IDENTIFIER (279) 57
TOKEN_L_PAREN (280) 10 11 12 17 23 56 88 92
TOKEN_R_PAREN (281) 10 11 12 17 23 56 88 92
TOKEN_L_BRACKET (282) 54 55 93
TOKEN_R_BRACKET (283) 54 55 93
TOKEN_L_BRACE (284) 13 14 20 28 29
TOKEN_R_BRACE (285) 13 14 20 28 29
TOKEN_POSTINC (286) 85
TOKEN_POSTDEC (287) 86
TOKEN_NEG (288)
TOKEN_NOT (289) 82
TOKEN_EXP (290) 79
TOKEN_MUL (291) 75
TOKEN_DIV (292) 76
TOKEN_MOD (293) 77
TOKEN_ADD (294) 72 83
TOKEN_SUB (295) 73 81
TOKEN_LESS (296) 66
TOKEN_LE (297) 68
TOKEN_GE (298) 69
TOKEN_GREATER (299) 70
TOKEN_EQUAL (300) 65
TOKEN_NEQUAL (301) 67
TOKEN_AND (302) 63
TOKEN_OR (303) 61
TOKEN_ASSIGN (304) 27 28 29 58 59
TOKEN_SEMICOLON (305) 6 7 8 9 10 19 21 22 23 26 27 28
TOKEN_COLON (306) 26 27 28 29 36 37
TOKEN_COMMA (307) 32 37 40 44
TOKEN_BACKSLASH (308)
TOKEN_C_COMMENT (309) 15 24
TOKEN_CPP_COMMENT (310) 16 25
TOKEN_ERROR (311)
TOKEN_EOF (312) 1 2


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
program (59)
    on left: 1 2, on right: 0
stmt_list (60)
    on left: 3 4, on right: 1 3 13 20 29
stmt (61)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16, on right: 3 4 10 11 12
if_nest (62)
    on left: 17 18 19 20 21 22 23 24 25, on right: 12 17 23
decl (63)
    on left: 26 27 28 29, on right: 5 18
brace_list (64)
    on left: 30 31, on right: 28
brace (65)
    on left: 32 33, on right: 30 32
param_list (66)
    on left: 34 35, on right: 56
param (67)
    on left: 36 37, on right: 34 37
arg_list (68)
    on left: 38 39, on right: 92
arg (69)
    on left: 40 41, on right: 38 40
print_list (70)
    on left: 42 43, on right: 7 21
print (71)
    on left: 44 45, on right: 42 44
for_expr (72)
    on left: 46 47, on right: 10 23
type (73)
    on left: 48 49 50 51 52 53 54 55 56, on right: 26 27 28 29 36 37
    54 55 56
id (74)
    on left: 57, on right: 26 27 28 29 36 37 58 91 92
expr (75)
    on left: 58 59 60, on right: 6 8 11 12 17 19 22 27 32 33 40 41
    44 45 46 55 58 59 88 93
expr_or (76)
    on left: 61 62, on right: 60 61
expr_and (77)
    on left: 63 64, on right: 61 62 63
expr_comp (78)
    on left: 65 66 67 68 69 70 71, on right: 63 64 65 66 67 68 69 70
expr_add (79)
    on left: 72 73 74, on right: 65 66 67 68 69 70 71 72 73
expr_mul (80)
    on left: 75 76 77 78, on right: 72 73 74 75 76 77
expr_exp (81)
    on left: 79 80, on right: 75 76 77 78 79
expr_unary (82)
    on left: 81 82 83 84, on right: 79 80 81 82 83
exp_post (83)
    on left: 85 86 87, on right: 84
factor (84)
    on left: 88 89 90 91 92, on right: 85 86 87 93
arr_subscr (85)
    on left: 93, on right: 59 89
literal (86)
    on left: 94 95 96 97 98 99, on right: 90


State 0

    0 $accept: . program $end

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 17
    TOKEN_CPP_COMMENT        shift, and go to state 18
    TOKEN_EOF                shift, and go to state 19

    program     go to state 20
    stmt_list   go to state 21
    stmt        go to state 22
    decl        go to state 23
    id          go to state 24
    expr        go to state 25
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 1

   94 literal: TOKEN_INTEGER_LITERAL .

    $default  reduce using rule 94 (literal)


State 2

   96 literal: TOKEN_CHARACTER_LITERAL .

    $default  reduce using rule 96 (literal)


State 3

   97 literal: TOKEN_STRING_LITERAL .

    $default  reduce using rule 97 (literal)


State 4

   95 literal: TOKEN_FLOAT_LITERAL .

    $default  reduce using rule 95 (literal)


State 5

   99 literal: TOKEN_FALSE .

    $default  reduce using rule 99 (literal)


State 6

   10 stmt: TOKEN_FOR . TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_L_PAREN  shift, and go to state 37


State 7

   11 stmt: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   12     | TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt

    TOKEN_L_PAREN  shift, and go to state 38


State 8

    7 stmt: TOKEN_PRINT . print_list TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    $default  reduce using rule 43 (print_list)

    print_list  go to state 39
    print       go to state 40
    id          go to state 41
    expr        go to state 42
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 9

    8 stmt: TOKEN_RETURN . expr TOKEN_SEMICOLON
    9     | TOKEN_RETURN . TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_SEMICOLON          shift, and go to state 43

    id          go to state 41
    expr        go to state 44
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 10

   98 literal: TOKEN_TRUE .

    $default  reduce using rule 98 (literal)


State 11

   57 id: TOKEN_IDENTIFIER .

    $default  reduce using rule 57 (id)


State 12

   88 factor: TOKEN_L_PAREN . expr TOKEN_R_PAREN

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 41
    expr        go to state 45
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 13

   13 stmt: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE
   14     | TOKEN_L_BRACE . TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_R_BRACE            shift, and go to state 46
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 17
    TOKEN_CPP_COMMENT        shift, and go to state 18

    stmt_list   go to state 47
    stmt        go to state 22
    decl        go to state 23
    id          go to state 24
    expr        go to state 25
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 14

   82 expr_unary: TOKEN_NOT . expr_unary

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 48
    expr_unary  go to state 49
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 50
    literal     go to state 36


State 15

   83 expr_unary: TOKEN_ADD . expr_unary

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 48
    expr_unary  go to state 51
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 50
    literal     go to state 36


State 16

   81 expr_unary: TOKEN_SUB . expr_unary

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 48
    expr_unary  go to state 52
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 50
    literal     go to state 36


State 17

   15 stmt: TOKEN_C_COMMENT .

    $default  reduce using rule 15 (stmt)


State 18

   16 stmt: TOKEN_CPP_COMMENT .

    $default  reduce using rule 16 (stmt)


State 19

    2 program: TOKEN_EOF .

    $default  reduce using rule 2 (program)


State 20

    0 $accept: program . $end

    $end  shift, and go to state 53


State 21

    1 program: stmt_list . TOKEN_EOF

    TOKEN_EOF  shift, and go to state 54


State 22

    3 stmt_list: stmt . stmt_list
    4          | stmt .

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 17
    TOKEN_CPP_COMMENT        shift, and go to state 18

    $default  reduce using rule 4 (stmt_list)

    stmt_list   go to state 55
    stmt        go to state 22
    decl        go to state 23
    id          go to state 24
    expr        go to state 25
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 23

    5 stmt: decl .

    $default  reduce using rule 5 (stmt)


State 24

   26 decl: id . TOKEN_COLON type TOKEN_SEMICOLON
   27     | id . TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   28     | id . TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   29     | id . TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE
   58 expr: id . TOKEN_ASSIGN expr
   91 factor: id .
   92       | id . TOKEN_L_PAREN arg_list TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 56
    TOKEN_ASSIGN   shift, and go to state 57
    TOKEN_COLON    shift, and go to state 58

    $default  reduce using rule 91 (factor)


State 25

    6 stmt: expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 59


State 26

   60 expr: expr_or .

    $default  reduce using rule 60 (expr)


State 27

   61 expr_or: expr_and . TOKEN_OR expr_or
   62        | expr_and .

    TOKEN_OR  shift, and go to state 60

    $default  reduce using rule 62 (expr_or)


State 28

   63 expr_and: expr_comp . TOKEN_AND expr_and
   64         | expr_comp .

    TOKEN_AND  shift, and go to state 61

    $default  reduce using rule 64 (expr_and)


State 29

   65 expr_comp: expr_add . TOKEN_EQUAL expr_comp
   66          | expr_add . TOKEN_LESS expr_comp
   67          | expr_add . TOKEN_NEQUAL expr_comp
   68          | expr_add . TOKEN_LE expr_comp
   69          | expr_add . TOKEN_GE expr_comp
   70          | expr_add . TOKEN_GREATER expr_comp
   71          | expr_add .

    TOKEN_LESS     shift, and go to state 62
    TOKEN_LE       shift, and go to state 63
    TOKEN_GE       shift, and go to state 64
    TOKEN_GREATER  shift, and go to state 65
    TOKEN_EQUAL    shift, and go to state 66
    TOKEN_NEQUAL   shift, and go to state 67

    $default  reduce using rule 71 (expr_comp)


State 30

   72 expr_add: expr_mul . TOKEN_ADD expr_add
   73         | expr_mul . TOKEN_SUB expr_add
   74         | expr_mul .

    TOKEN_ADD  shift, and go to state 68
    TOKEN_SUB  shift, and go to state 69

    $default  reduce using rule 74 (expr_add)


State 31

   75 expr_mul: expr_exp . TOKEN_MUL expr_mul
   76         | expr_exp . TOKEN_DIV expr_mul
   77         | expr_exp . TOKEN_MOD expr_mul
   78         | expr_exp .

    TOKEN_MUL  shift, and go to state 70
    TOKEN_DIV  shift, and go to state 71
    TOKEN_MOD  shift, and go to state 72

    $default  reduce using rule 78 (expr_mul)


State 32

   79 expr_exp: expr_unary . TOKEN_EXP expr_exp
   80         | expr_unary .

    TOKEN_EXP  shift, and go to state 73

    $default  reduce using rule 80 (expr_exp)


State 33

   84 expr_unary: exp_post .

    $default  reduce using rule 84 (expr_unary)


State 34

   85 exp_post: factor . TOKEN_POSTINC
   86         | factor . TOKEN_POSTDEC
   87         | factor .
   93 arr_subscr: factor . TOKEN_L_BRACKET expr TOKEN_R_BRACKET

    TOKEN_L_BRACKET  shift, and go to state 74
    TOKEN_POSTINC    shift, and go to state 75
    TOKEN_POSTDEC    shift, and go to state 76

    $default  reduce using rule 87 (exp_post)


State 35

   59 expr: arr_subscr . TOKEN_ASSIGN expr
   89 factor: arr_subscr .

    TOKEN_ASSIGN  shift, and go to state 77

    $default  reduce using rule 89 (factor)


State 36

   90 factor: literal .

    $default  reduce using rule 90 (factor)


State 37

   10 stmt: TOKEN_FOR TOKEN_L_PAREN . for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    $default  reduce using rule 47 (for_expr)

    for_expr    go to state 78
    id          go to state 41
    expr        go to state 79
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 38

   11 stmt: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN stmt
   12     | TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 41
    expr        go to state 80
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 39

    7 stmt: TOKEN_PRINT print_list . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 81


State 40

   42 print_list: print .

    $default  reduce using rule 42 (print_list)


State 41

   58 expr: id . TOKEN_ASSIGN expr
   91 factor: id .
   92       | id . TOKEN_L_PAREN arg_list TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 56
    TOKEN_ASSIGN   shift, and go to state 57

    $default  reduce using rule 91 (factor)


State 42

   44 print: expr . TOKEN_COMMA print
   45      | expr .

    TOKEN_COMMA  shift, and go to state 82

    $default  reduce using rule 45 (print)


State 43

    9 stmt: TOKEN_RETURN TOKEN_SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 44

    8 stmt: TOKEN_RETURN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 83


State 45

   88 factor: TOKEN_L_PAREN expr . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 84


State 46

   14 stmt: TOKEN_L_BRACE TOKEN_R_BRACE .

    $default  reduce using rule 14 (stmt)


State 47

   13 stmt: TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 85


State 48

   91 factor: id .
   92       | id . TOKEN_L_PAREN arg_list TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 56

    $default  reduce using rule 91 (factor)


State 49

   82 expr_unary: TOKEN_NOT expr_unary .

    $default  reduce using rule 82 (expr_unary)


State 50

   89 factor: arr_subscr .

    $default  reduce using rule 89 (factor)


State 51

   83 expr_unary: TOKEN_ADD expr_unary .

    $default  reduce using rule 83 (expr_unary)


State 52

   81 expr_unary: TOKEN_SUB expr_unary .

    $default  reduce using rule 81 (expr_unary)


State 53

    0 $accept: program $end .

    $default  accept


State 54

    1 program: stmt_list TOKEN_EOF .

    $default  reduce using rule 1 (program)


State 55

    3 stmt_list: stmt stmt_list .

    $default  reduce using rule 3 (stmt_list)


State 56

   92 factor: id TOKEN_L_PAREN . arg_list TOKEN_R_PAREN

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    $default  reduce using rule 39 (arg_list)

    arg_list    go to state 86
    arg         go to state 87
    id          go to state 41
    expr        go to state 88
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 57

   58 expr: id TOKEN_ASSIGN . expr

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 41
    expr        go to state 89
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 58

   26 decl: id TOKEN_COLON . type TOKEN_SEMICOLON
   27     | id TOKEN_COLON . type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   28     | id TOKEN_COLON . type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   29     | id TOKEN_COLON . type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

    TOKEN_ARRAY      shift, and go to state 90
    TOKEN_BOOLEAN    shift, and go to state 91
    TOKEN_CHARACTER  shift, and go to state 92
    TOKEN_FLOAT      shift, and go to state 93
    TOKEN_FUNCTION   shift, and go to state 94
    TOKEN_INTEGER    shift, and go to state 95
    TOKEN_STRING     shift, and go to state 96
    TOKEN_VOID       shift, and go to state 97

    type  go to state 98


State 59

    6 stmt: expr TOKEN_SEMICOLON .

    $default  reduce using rule 6 (stmt)


State 60

   61 expr_or: expr_and TOKEN_OR . expr_or

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 48
    expr_or     go to state 99
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 50
    literal     go to state 36


State 61

   63 expr_and: expr_comp TOKEN_AND . expr_and

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 48
    expr_and    go to state 100
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 50
    literal     go to state 36


State 62

   66 expr_comp: expr_add TOKEN_LESS . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 48
    expr_comp   go to state 101
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 50
    literal     go to state 36


State 63

   68 expr_comp: expr_add TOKEN_LE . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 48
    expr_comp   go to state 102
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 50
    literal     go to state 36


State 64

   69 expr_comp: expr_add TOKEN_GE . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 48
    expr_comp   go to state 103
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 50
    literal     go to state 36


State 65

   70 expr_comp: expr_add TOKEN_GREATER . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 48
    expr_comp   go to state 104
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 50
    literal     go to state 36


State 66

   65 expr_comp: expr_add TOKEN_EQUAL . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 48
    expr_comp   go to state 105
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 50
    literal     go to state 36


State 67

   67 expr_comp: expr_add TOKEN_NEQUAL . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 48
    expr_comp   go to state 106
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 50
    literal     go to state 36


State 68

   72 expr_add: expr_mul TOKEN_ADD . expr_add

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 48
    expr_add    go to state 107
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 50
    literal     go to state 36


State 69

   73 expr_add: expr_mul TOKEN_SUB . expr_add

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 48
    expr_add    go to state 108
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 50
    literal     go to state 36


State 70

   75 expr_mul: expr_exp TOKEN_MUL . expr_mul

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 48
    expr_mul    go to state 109
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 50
    literal     go to state 36


State 71

   76 expr_mul: expr_exp TOKEN_DIV . expr_mul

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 48
    expr_mul    go to state 110
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 50
    literal     go to state 36


State 72

   77 expr_mul: expr_exp TOKEN_MOD . expr_mul

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 48
    expr_mul    go to state 111
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 50
    literal     go to state 36


State 73

   79 expr_exp: expr_unary TOKEN_EXP . expr_exp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 48
    expr_exp    go to state 112
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 50
    literal     go to state 36


State 74

   93 arr_subscr: factor TOKEN_L_BRACKET . expr TOKEN_R_BRACKET

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 41
    expr        go to state 113
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 75

   85 exp_post: factor TOKEN_POSTINC .

    $default  reduce using rule 85 (exp_post)


State 76

   86 exp_post: factor TOKEN_POSTDEC .

    $default  reduce using rule 86 (exp_post)


State 77

   59 expr: arr_subscr TOKEN_ASSIGN . expr

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 41
    expr        go to state 114
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 78

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr . TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_SEMICOLON  shift, and go to state 115


State 79

   46 for_expr: expr .

    $default  reduce using rule 46 (for_expr)


State 80

   11 stmt: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN stmt
   12     | TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN if_nest TOKEN_ELSE stmt

    TOKEN_R_PAREN  shift, and go to state 116


State 81

    7 stmt: TOKEN_PRINT print_list TOKEN_SEMICOLON .

    $default  reduce using rule 7 (stmt)


State 82

   44 print: expr TOKEN_COMMA . print

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    print       go to state 117
    id          go to state 41
    expr        go to state 42
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 83

    8 stmt: TOKEN_RETURN expr TOKEN_SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 84

   88 factor: TOKEN_L_PAREN expr TOKEN_R_PAREN .

    $default  reduce using rule 88 (factor)


State 85

   13 stmt: TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .

    $default  reduce using rule 13 (stmt)


State 86

   92 factor: id TOKEN_L_PAREN arg_list . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 118


State 87

   38 arg_list: arg .

    $default  reduce using rule 38 (arg_list)


State 88

   40 arg: expr . TOKEN_COMMA arg
   41    | expr .

    TOKEN_COMMA  shift, and go to state 119

    $default  reduce using rule 41 (arg)


State 89

   58 expr: id TOKEN_ASSIGN expr .

    $default  reduce using rule 58 (expr)


State 90

   54 type: TOKEN_ARRAY . TOKEN_L_BRACKET TOKEN_R_BRACKET type
   55     | TOKEN_ARRAY . TOKEN_L_BRACKET expr TOKEN_R_BRACKET type

    TOKEN_L_BRACKET  shift, and go to state 120


State 91

   50 type: TOKEN_BOOLEAN .

    $default  reduce using rule 50 (type)


State 92

   51 type: TOKEN_CHARACTER .

    $default  reduce using rule 51 (type)


State 93

   49 type: TOKEN_FLOAT .

    $default  reduce using rule 49 (type)


State 94

   56 type: TOKEN_FUNCTION . type TOKEN_L_PAREN param_list TOKEN_R_PAREN

    TOKEN_ARRAY      shift, and go to state 90
    TOKEN_BOOLEAN    shift, and go to state 91
    TOKEN_CHARACTER  shift, and go to state 92
    TOKEN_FLOAT      shift, and go to state 93
    TOKEN_FUNCTION   shift, and go to state 94
    TOKEN_INTEGER    shift, and go to state 95
    TOKEN_STRING     shift, and go to state 96
    TOKEN_VOID       shift, and go to state 97

    type  go to state 121


State 95

   48 type: TOKEN_INTEGER .

    $default  reduce using rule 48 (type)


State 96

   52 type: TOKEN_STRING .

    $default  reduce using rule 52 (type)


State 97

   53 type: TOKEN_VOID .

    $default  reduce using rule 53 (type)


State 98

   26 decl: id TOKEN_COLON type . TOKEN_SEMICOLON
   27     | id TOKEN_COLON type . TOKEN_ASSIGN expr TOKEN_SEMICOLON
   28     | id TOKEN_COLON type . TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   29     | id TOKEN_COLON type . TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

    TOKEN_ASSIGN     shift, and go to state 122
    TOKEN_SEMICOLON  shift, and go to state 123


State 99

   61 expr_or: expr_and TOKEN_OR expr_or .

    $default  reduce using rule 61 (expr_or)


State 100

   63 expr_and: expr_comp TOKEN_AND expr_and .

    $default  reduce using rule 63 (expr_and)


State 101

   66 expr_comp: expr_add TOKEN_LESS expr_comp .

    $default  reduce using rule 66 (expr_comp)


State 102

   68 expr_comp: expr_add TOKEN_LE expr_comp .

    $default  reduce using rule 68 (expr_comp)


State 103

   69 expr_comp: expr_add TOKEN_GE expr_comp .

    $default  reduce using rule 69 (expr_comp)


State 104

   70 expr_comp: expr_add TOKEN_GREATER expr_comp .

    $default  reduce using rule 70 (expr_comp)


State 105

   65 expr_comp: expr_add TOKEN_EQUAL expr_comp .

    $default  reduce using rule 65 (expr_comp)


State 106

   67 expr_comp: expr_add TOKEN_NEQUAL expr_comp .

    $default  reduce using rule 67 (expr_comp)


State 107

   72 expr_add: expr_mul TOKEN_ADD expr_add .

    $default  reduce using rule 72 (expr_add)


State 108

   73 expr_add: expr_mul TOKEN_SUB expr_add .

    $default  reduce using rule 73 (expr_add)


State 109

   75 expr_mul: expr_exp TOKEN_MUL expr_mul .

    $default  reduce using rule 75 (expr_mul)


State 110

   76 expr_mul: expr_exp TOKEN_DIV expr_mul .

    $default  reduce using rule 76 (expr_mul)


State 111

   77 expr_mul: expr_exp TOKEN_MOD expr_mul .

    $default  reduce using rule 77 (expr_mul)


State 112

   79 expr_exp: expr_unary TOKEN_EXP expr_exp .

    $default  reduce using rule 79 (expr_exp)


State 113

   93 arr_subscr: factor TOKEN_L_BRACKET expr . TOKEN_R_BRACKET

    TOKEN_R_BRACKET  shift, and go to state 124


State 114

   59 expr: arr_subscr TOKEN_ASSIGN expr .

    $default  reduce using rule 59 (expr)


State 115

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON . for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    $default  reduce using rule 47 (for_expr)

    for_expr    go to state 125
    id          go to state 41
    expr        go to state 79
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 116

   11 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . stmt
   12     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . if_nest TOKEN_ELSE stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 126
    TOKEN_IF                 shift, and go to state 127
    TOKEN_PRINT              shift, and go to state 128
    TOKEN_RETURN             shift, and go to state 129
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 130
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 131
    TOKEN_CPP_COMMENT        shift, and go to state 132

    stmt        go to state 133
    if_nest     go to state 134
    decl        go to state 135
    id          go to state 24
    expr        go to state 136
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 117

   44 print: expr TOKEN_COMMA print .

    $default  reduce using rule 44 (print)


State 118

   92 factor: id TOKEN_L_PAREN arg_list TOKEN_R_PAREN .

    $default  reduce using rule 92 (factor)


State 119

   40 arg: expr TOKEN_COMMA . arg

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    arg         go to state 137
    id          go to state 41
    expr        go to state 88
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 120

   54 type: TOKEN_ARRAY TOKEN_L_BRACKET . TOKEN_R_BRACKET type
   55     | TOKEN_ARRAY TOKEN_L_BRACKET . expr TOKEN_R_BRACKET type

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_R_BRACKET          shift, and go to state 138
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 41
    expr        go to state 139
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 121

   56 type: TOKEN_FUNCTION type . TOKEN_L_PAREN param_list TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 140


State 122

   27 decl: id TOKEN_COLON type TOKEN_ASSIGN . expr TOKEN_SEMICOLON
   28     | id TOKEN_COLON type TOKEN_ASSIGN . TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   29     | id TOKEN_COLON type TOKEN_ASSIGN . TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 141
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 41
    expr        go to state 142
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 123

   26 decl: id TOKEN_COLON type TOKEN_SEMICOLON .

    $default  reduce using rule 26 (decl)


State 124

   93 arr_subscr: factor TOKEN_L_BRACKET expr TOKEN_R_BRACKET .

    $default  reduce using rule 93 (arr_subscr)


State 125

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr . TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_SEMICOLON  shift, and go to state 143


State 126

   10 stmt: TOKEN_FOR . TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   23 if_nest: TOKEN_FOR . TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_L_PAREN  shift, and go to state 144


State 127

   11 stmt: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   12     | TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   17 if_nest: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest

    TOKEN_L_PAREN  shift, and go to state 145


State 128

    7 stmt: TOKEN_PRINT . print_list TOKEN_SEMICOLON
   21 if_nest: TOKEN_PRINT . print_list TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    $default  reduce using rule 43 (print_list)

    print_list  go to state 146
    print       go to state 40
    id          go to state 41
    expr        go to state 42
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 129

    8 stmt: TOKEN_RETURN . expr TOKEN_SEMICOLON
    9     | TOKEN_RETURN . TOKEN_SEMICOLON
   22 if_nest: TOKEN_RETURN . expr TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_SEMICOLON          shift, and go to state 43

    id          go to state 41
    expr        go to state 147
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 130

   13 stmt: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE
   14     | TOKEN_L_BRACE . TOKEN_R_BRACE
   20 if_nest: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_R_BRACE            shift, and go to state 46
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 17
    TOKEN_CPP_COMMENT        shift, and go to state 18

    stmt_list   go to state 148
    stmt        go to state 22
    decl        go to state 23
    id          go to state 24
    expr        go to state 25
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 131

   15 stmt: TOKEN_C_COMMENT .
   24 if_nest: TOKEN_C_COMMENT .

    TOKEN_ELSE  reduce using rule 24 (if_nest)
    $default    reduce using rule 15 (stmt)


State 132

   16 stmt: TOKEN_CPP_COMMENT .
   25 if_nest: TOKEN_CPP_COMMENT .

    TOKEN_ELSE  reduce using rule 25 (if_nest)
    $default    reduce using rule 16 (stmt)


State 133

   11 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN stmt .

    $default  reduce using rule 11 (stmt)


State 134

   12 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest . TOKEN_ELSE stmt

    TOKEN_ELSE  shift, and go to state 149


State 135

    5 stmt: decl .
   18 if_nest: decl .

    TOKEN_ELSE  reduce using rule 18 (if_nest)
    $default    reduce using rule 5 (stmt)


State 136

    6 stmt: expr . TOKEN_SEMICOLON
   19 if_nest: expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 150


State 137

   40 arg: expr TOKEN_COMMA arg .

    $default  reduce using rule 40 (arg)


State 138

   54 type: TOKEN_ARRAY TOKEN_L_BRACKET TOKEN_R_BRACKET . type

    TOKEN_ARRAY      shift, and go to state 90
    TOKEN_BOOLEAN    shift, and go to state 91
    TOKEN_CHARACTER  shift, and go to state 92
    TOKEN_FLOAT      shift, and go to state 93
    TOKEN_FUNCTION   shift, and go to state 94
    TOKEN_INTEGER    shift, and go to state 95
    TOKEN_STRING     shift, and go to state 96
    TOKEN_VOID       shift, and go to state 97

    type  go to state 151


State 139

   55 type: TOKEN_ARRAY TOKEN_L_BRACKET expr . TOKEN_R_BRACKET type

    TOKEN_R_BRACKET  shift, and go to state 152


State 140

   56 type: TOKEN_FUNCTION type TOKEN_L_PAREN . param_list TOKEN_R_PAREN

    TOKEN_IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 35 (param_list)

    param_list  go to state 153
    param       go to state 154
    id          go to state 155


State 141

   28 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE . brace_list TOKEN_R_BRACE TOKEN_SEMICOLON
   29     | id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 17
    TOKEN_CPP_COMMENT        shift, and go to state 18

    $default  reduce using rule 31 (brace_list)

    stmt_list   go to state 156
    stmt        go to state 22
    decl        go to state 23
    brace_list  go to state 157
    brace       go to state 158
    id          go to state 24
    expr        go to state 159
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 142

   27 decl: id TOKEN_COLON type TOKEN_ASSIGN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 160


State 143

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON . for_expr TOKEN_R_PAREN stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    $default  reduce using rule 47 (for_expr)

    for_expr    go to state 161
    id          go to state 41
    expr        go to state 79
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 144

   10 stmt: TOKEN_FOR TOKEN_L_PAREN . for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   23 if_nest: TOKEN_FOR TOKEN_L_PAREN . for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    $default  reduce using rule 47 (for_expr)

    for_expr    go to state 162
    id          go to state 41
    expr        go to state 79
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 145

   11 stmt: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN stmt
   12     | TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   17 if_nest: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    id          go to state 41
    expr        go to state 163
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 146

    7 stmt: TOKEN_PRINT print_list . TOKEN_SEMICOLON
   21 if_nest: TOKEN_PRINT print_list . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 164


State 147

    8 stmt: TOKEN_RETURN expr . TOKEN_SEMICOLON
   22 if_nest: TOKEN_RETURN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 165


State 148

   13 stmt: TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE
   20 if_nest: TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 166


State 149

   12 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE . stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 17
    TOKEN_CPP_COMMENT        shift, and go to state 18

    stmt        go to state 167
    decl        go to state 23
    id          go to state 24
    expr        go to state 25
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 150

    6 stmt: expr TOKEN_SEMICOLON .
   19 if_nest: expr TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 19 (if_nest)
    $default    reduce using rule 6 (stmt)


State 151

   54 type: TOKEN_ARRAY TOKEN_L_BRACKET TOKEN_R_BRACKET type .

    $default  reduce using rule 54 (type)


State 152

   55 type: TOKEN_ARRAY TOKEN_L_BRACKET expr TOKEN_R_BRACKET . type

    TOKEN_ARRAY      shift, and go to state 90
    TOKEN_BOOLEAN    shift, and go to state 91
    TOKEN_CHARACTER  shift, and go to state 92
    TOKEN_FLOAT      shift, and go to state 93
    TOKEN_FUNCTION   shift, and go to state 94
    TOKEN_INTEGER    shift, and go to state 95
    TOKEN_STRING     shift, and go to state 96
    TOKEN_VOID       shift, and go to state 97

    type  go to state 168


State 153

   56 type: TOKEN_FUNCTION type TOKEN_L_PAREN param_list . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 169


State 154

   34 param_list: param .

    $default  reduce using rule 34 (param_list)


State 155

   36 param: id . TOKEN_COLON type
   37      | id . TOKEN_COLON type TOKEN_COMMA param

    TOKEN_COLON  shift, and go to state 170


State 156

   29 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 171


State 157

   28 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list . TOKEN_R_BRACE TOKEN_SEMICOLON

    TOKEN_R_BRACE  shift, and go to state 172


State 158

   30 brace_list: brace .

    $default  reduce using rule 30 (brace_list)


State 159

    6 stmt: expr . TOKEN_SEMICOLON
   32 brace: expr . TOKEN_COMMA brace
   33      | expr .

    TOKEN_SEMICOLON  shift, and go to state 59
    TOKEN_COMMA      shift, and go to state 173

    $default  reduce using rule 33 (brace)


State 160

   27 decl: id TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON .

    $default  reduce using rule 27 (decl)


State 161

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr . TOKEN_R_PAREN stmt

    TOKEN_R_PAREN  shift, and go to state 174


State 162

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr . TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   23 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr . TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_SEMICOLON  shift, and go to state 175


State 163

   11 stmt: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN stmt
   12     | TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   17 if_nest: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest

    TOKEN_R_PAREN  shift, and go to state 176


State 164

    7 stmt: TOKEN_PRINT print_list TOKEN_SEMICOLON .
   21 if_nest: TOKEN_PRINT print_list TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 21 (if_nest)
    $default    reduce using rule 7 (stmt)


State 165

    8 stmt: TOKEN_RETURN expr TOKEN_SEMICOLON .
   22 if_nest: TOKEN_RETURN expr TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 22 (if_nest)
    $default    reduce using rule 8 (stmt)


State 166

   13 stmt: TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .
   20 if_nest: TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .

    TOKEN_ELSE  reduce using rule 20 (if_nest)
    $default    reduce using rule 13 (stmt)


State 167

   12 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt .

    $default  reduce using rule 12 (stmt)


State 168

   55 type: TOKEN_ARRAY TOKEN_L_BRACKET expr TOKEN_R_BRACKET type .

    $default  reduce using rule 55 (type)


State 169

   56 type: TOKEN_FUNCTION type TOKEN_L_PAREN param_list TOKEN_R_PAREN .

    $default  reduce using rule 56 (type)


State 170

   36 param: id TOKEN_COLON . type
   37      | id TOKEN_COLON . type TOKEN_COMMA param

    TOKEN_ARRAY      shift, and go to state 90
    TOKEN_BOOLEAN    shift, and go to state 91
    TOKEN_CHARACTER  shift, and go to state 92
    TOKEN_FLOAT      shift, and go to state 93
    TOKEN_FUNCTION   shift, and go to state 94
    TOKEN_INTEGER    shift, and go to state 95
    TOKEN_STRING     shift, and go to state 96
    TOKEN_VOID       shift, and go to state 97

    type  go to state 177


State 171

   29 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .

    $default  reduce using rule 29 (decl)


State 172

   28 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 178


State 173

   32 brace: expr TOKEN_COMMA . brace

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    brace       go to state 179
    id          go to state 41
    expr        go to state 180
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 174

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN . stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 17
    TOKEN_CPP_COMMENT        shift, and go to state 18

    stmt        go to state 181
    decl        go to state 23
    id          go to state 24
    expr        go to state 25
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 175

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON . for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   23 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON . for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    $default  reduce using rule 47 (for_expr)

    for_expr    go to state 182
    id          go to state 41
    expr        go to state 79
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 176

   11 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . stmt
   12     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . if_nest TOKEN_ELSE stmt
   17 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . if_nest TOKEN_ELSE if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 126
    TOKEN_IF                 shift, and go to state 127
    TOKEN_PRINT              shift, and go to state 128
    TOKEN_RETURN             shift, and go to state 129
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 130
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 131
    TOKEN_CPP_COMMENT        shift, and go to state 132

    stmt        go to state 133
    if_nest     go to state 183
    decl        go to state 135
    id          go to state 24
    expr        go to state 136
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 177

   36 param: id TOKEN_COLON type .
   37      | id TOKEN_COLON type . TOKEN_COMMA param

    TOKEN_COMMA  shift, and go to state 184

    $default  reduce using rule 36 (param)


State 178

   28 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace_list TOKEN_R_BRACE TOKEN_SEMICOLON .

    $default  reduce using rule 28 (decl)


State 179

   32 brace: expr TOKEN_COMMA brace .

    $default  reduce using rule 32 (brace)


State 180

   32 brace: expr . TOKEN_COMMA brace
   33      | expr .

    TOKEN_COMMA  shift, and go to state 173

    $default  reduce using rule 33 (brace)


State 181

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt .

    $default  reduce using rule 10 (stmt)


State 182

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr . TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   23 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr . TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_SEMICOLON  shift, and go to state 185


State 183

   12 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest . TOKEN_ELSE stmt
   17 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest . TOKEN_ELSE if_nest

    TOKEN_ELSE  shift, and go to state 186


State 184

   37 param: id TOKEN_COLON type TOKEN_COMMA . param

    TOKEN_IDENTIFIER  shift, and go to state 11

    param  go to state 187
    id     go to state 155


State 185

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON . for_expr TOKEN_R_PAREN stmt
   23 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON . for_expr TOKEN_R_PAREN if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16

    $default  reduce using rule 47 (for_expr)

    for_expr    go to state 188
    id          go to state 41
    expr        go to state 79
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 186

   12 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE . stmt
   17 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE . if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 126
    TOKEN_IF                 shift, and go to state 127
    TOKEN_PRINT              shift, and go to state 128
    TOKEN_RETURN             shift, and go to state 129
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 130
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 131
    TOKEN_CPP_COMMENT        shift, and go to state 132

    stmt        go to state 167
    if_nest     go to state 189
    decl        go to state 135
    id          go to state 24
    expr        go to state 136
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 187

   37 param: id TOKEN_COLON type TOKEN_COMMA param .

    $default  reduce using rule 37 (param)


State 188

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr . TOKEN_R_PAREN stmt
   23 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr . TOKEN_R_PAREN if_nest

    TOKEN_R_PAREN  shift, and go to state 190


State 189

   17 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest .

    $default  reduce using rule 17 (if_nest)


State 190

   10 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN . stmt
   23 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN . if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 126
    TOKEN_IF                 shift, and go to state 127
    TOKEN_PRINT              shift, and go to state 128
    TOKEN_RETURN             shift, and go to state 129
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 130
    TOKEN_NOT                shift, and go to state 14
    TOKEN_ADD                shift, and go to state 15
    TOKEN_SUB                shift, and go to state 16
    TOKEN_C_COMMENT          shift, and go to state 131
    TOKEN_CPP_COMMENT        shift, and go to state 132

    stmt        go to state 181
    if_nest     go to state 191
    decl        go to state 135
    id          go to state 24
    expr        go to state 136
    expr_or     go to state 26
    expr_and    go to state 27
    expr_comp   go to state 28
    expr_add    go to state 29
    expr_mul    go to state 30
    expr_exp    go to state 31
    expr_unary  go to state 32
    exp_post    go to state 33
    factor      go to state 34
    arr_subscr  go to state 35
    literal     go to state 36


State 191

   23 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest .

    $default  reduce using rule 23 (if_nest)
