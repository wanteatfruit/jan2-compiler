Terminals unused in grammar

   TOKEN_WHILE
   TOKEN_AUTO
   TOKEN_BACKSLASH
   TOKEN_C_COMMENT
   TOKEN_CPP_COMMENT
   TOKEN_ERROR


Grammar

    0 $accept: program $end

    1 program: stmt_list TOKEN_EOF

    2 stmt_list: stmt stmt_list
    3          | stmt

    4 stmt: decl
    5     | expr TOKEN_SEMICOLON
    6     | TOKEN_PRINT print_list TOKEN_SEMICOLON
    7     | TOKEN_RETURN expr TOKEN_SEMICOLON
    8     | TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
    9     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   10     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   11     | TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

   12 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest
   13        | decl TOKEN_SEMICOLON
   14        | expr TOKEN_SEMICOLON
   15        | TOKEN_L_BRACE stmt_list TOKEN_R_BRACE
   16        | TOKEN_PRINT print_list TOKEN_SEMICOLON
   17        | TOKEN_RETURN expr TOKEN_SEMICOLON
   18        | TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

   19 decl: id TOKEN_COLON type TOKEN_SEMICOLON
   20     | id TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   21     | id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace TOKEN_R_BRACE TOKEN_SEMICOLON
   22     | id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

   23 brace: expr TOKEN_COMMA brace
   24      | expr
   25      | %empty

   26 arg_list: arg TOKEN_COMMA arg_list
   27         | arg

   28 arg: id TOKEN_COLON type

   29 print_list: expr TOKEN_COMMA print_list
   30           | expr
   31           | %empty

   32 for_expr: expr
   33         | %empty

   34 type: TOKEN_INTEGER
   35     | TOKEN_FLOAT
   36     | TOKEN_BOOLEAN
   37     | TOKEN_CHARACTER
   38     | TOKEN_STRING
   39     | TOKEN_VOID
   40     | TOKEN_ARRAY TOKEN_L_BRACKET TOKEN_R_BRACKET type
   41     | TOKEN_ARRAY TOKEN_L_BRACKET expr TOKEN_R_BRACKET type
   42     | TOKEN_FUNCTION type TOKEN_L_PAREN arg_list TOKEN_R_PAREN

   43 id: TOKEN_IDENTIFIER

   44 expr: id TOKEN_ASSIGN expr
   45     | expr_or

   46 expr_or: expr_and TOKEN_OR expr_or
   47        | expr_and

   48 expr_and: expr_comp TOKEN_AND expr_and
   49         | expr_comp

   50 expr_comp: expr_add TOKEN_EQUAL expr_comp
   51          | expr_add TOKEN_LESS expr_comp
   52          | expr_add TOKEN_NEQUAL expr_comp
   53          | expr_add TOKEN_LE expr_comp
   54          | expr_add TOKEN_GE expr_comp
   55          | expr_add TOKEN_GREATER expr_comp
   56          | expr_add

   57 expr_add: expr_mul TOKEN_ADD expr_add
   58         | expr_mul TOKEN_SUB expr_add
   59         | expr_mul

   60 expr_mul: expr_exp TOKEN_MUL expr_mul
   61         | expr_exp TOKEN_DIV expr_mul
   62         | expr_exp TOKEN_MOD expr_mul
   63         | expr_exp

   64 expr_exp: expr_unary TOKEN_EXP expr_exp
   65         | expr_unary

   66 expr_unary: TOKEN_NEG expr_unary
   67           | TOKEN_NOT expr_unary
   68           | exp_post

   69 exp_post: factor TOKEN_POSTINC
   70         | factor TOKEN_POSTDEC
   71         | factor

   72 factor: TOKEN_L_PAREN expr TOKEN_R_PAREN
   73       | factor TOKEN_L_BRACKET expr TOKEN_R_BRACKET
   74       | TOKEN_IDENTIFIER TOKEN_L_PAREN arg_list TOKEN_R_PAREN
   75       | literal
   76       | id

   77 literal: TOKEN_INTEGER_LITERAL
   78        | TOKEN_FLOAT_LITERAL
   79        | TOKEN_CHARACTER_LITERAL
   80        | TOKEN_STRING_LITERAL
   81        | TOKEN_TRUE
   82        | TOKEN_FALSE


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_ARRAY (258) 40 41
TOKEN_BOOLEAN (259) 36
TOKEN_CHARACTER (260) 37
TOKEN_FLOAT (261) 35
TOKEN_FUNCTION (262) 42
TOKEN_INTEGER (263) 34
TOKEN_STRING (264) 38
TOKEN_VOID (265) 39
TOKEN_INTEGER_LITERAL (266) 77
TOKEN_CHARACTER_LITERAL (267) 79
TOKEN_STRING_LITERAL (268) 80
TOKEN_FLOAT_LITERAL (269) 78
TOKEN_ELSE (270) 10 12
TOKEN_FALSE (271) 82
TOKEN_FOR (272) 8 18
TOKEN_IF (273) 9 10 12
TOKEN_PRINT (274) 6 16
TOKEN_RETURN (275) 7 17
TOKEN_TRUE (276) 81
TOKEN_WHILE (277)
TOKEN_AUTO (278)
TOKEN_IDENTIFIER (279) 43 74
TOKEN_L_PAREN (280) 8 9 10 12 18 42 72 74
TOKEN_R_PAREN (281) 8 9 10 12 18 42 72 74
TOKEN_L_BRACKET (282) 40 41 73
TOKEN_R_BRACKET (283) 40 41 73
TOKEN_L_BRACE (284) 11 15 21 22
TOKEN_R_BRACE (285) 11 15 21 22
TOKEN_POSTINC (286) 69
TOKEN_POSTDEC (287) 70
TOKEN_NEG (288) 66
TOKEN_NOT (289) 67
TOKEN_EXP (290) 64
TOKEN_MUL (291) 60
TOKEN_DIV (292) 61
TOKEN_MOD (293) 62
TOKEN_ADD (294) 57
TOKEN_SUB (295) 58
TOKEN_LESS (296) 51
TOKEN_LE (297) 53
TOKEN_GE (298) 54
TOKEN_GREATER (299) 55
TOKEN_EQUAL (300) 50
TOKEN_NEQUAL (301) 52
TOKEN_AND (302) 48
TOKEN_OR (303) 46
TOKEN_ASSIGN (304) 20 21 22 44
TOKEN_SEMICOLON (305) 5 6 7 8 13 14 16 17 18 19 20 21
TOKEN_COLON (306) 19 20 21 22 28
TOKEN_COMMA (307) 23 26 29
TOKEN_BACKSLASH (308)
TOKEN_C_COMMENT (309)
TOKEN_CPP_COMMENT (310)
TOKEN_ERROR (311)
TOKEN_EOF (312) 1


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
program (59)
    on left: 1, on right: 0
stmt_list (60)
    on left: 2 3, on right: 1 2 11 15 22
stmt (61)
    on left: 4 5 6 7 8 9 10 11, on right: 2 3 8 9 10
if_nest (62)
    on left: 12 13 14 15 16 17 18, on right: 10 12 18
decl (63)
    on left: 19 20 21 22, on right: 4 13
brace (64)
    on left: 23 24 25, on right: 21 23
arg_list (65)
    on left: 26 27, on right: 26 42 74
arg (66)
    on left: 28, on right: 26 27
print_list (67)
    on left: 29 30 31, on right: 6 16 29
for_expr (68)
    on left: 32 33, on right: 8 18
type (69)
    on left: 34 35 36 37 38 39 40 41 42, on right: 19 20 21 22 28 40
    41 42
id (70)
    on left: 43, on right: 19 20 21 22 28 44 76
expr (71)
    on left: 44 45, on right: 5 7 9 10 12 14 17 20 23 24 29 30 32 41
    44 72 73
expr_or (72)
    on left: 46 47, on right: 45 46
expr_and (73)
    on left: 48 49, on right: 46 47 48
expr_comp (74)
    on left: 50 51 52 53 54 55 56, on right: 48 49 50 51 52 53 54 55
expr_add (75)
    on left: 57 58 59, on right: 50 51 52 53 54 55 56 57 58
expr_mul (76)
    on left: 60 61 62 63, on right: 57 58 59 60 61 62
expr_exp (77)
    on left: 64 65, on right: 60 61 62 63 64
expr_unary (78)
    on left: 66 67 68, on right: 64 65 66 67
exp_post (79)
    on left: 69 70 71, on right: 68
factor (80)
    on left: 72 73 74 75 76, on right: 69 70 71 73
literal (81)
    on left: 77 78 79 80 81 82, on right: 75


State 0

    0 $accept: . program $end

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    program     go to state 16
    stmt_list   go to state 17
    stmt        go to state 18
    decl        go to state 19
    id          go to state 20
    expr        go to state 21
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 1

   77 literal: TOKEN_INTEGER_LITERAL .

    $default  reduce using rule 77 (literal)


State 2

   79 literal: TOKEN_CHARACTER_LITERAL .

    $default  reduce using rule 79 (literal)


State 3

   80 literal: TOKEN_STRING_LITERAL .

    $default  reduce using rule 80 (literal)


State 4

   78 literal: TOKEN_FLOAT_LITERAL .

    $default  reduce using rule 78 (literal)


State 5

   82 literal: TOKEN_FALSE .

    $default  reduce using rule 82 (literal)


State 6

    8 stmt: TOKEN_FOR . TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_L_PAREN  shift, and go to state 32


State 7

    9 stmt: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   10     | TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt

    TOKEN_L_PAREN  shift, and go to state 33


State 8

    6 stmt: TOKEN_PRINT . print_list TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 31 (print_list)

    print_list  go to state 34
    id          go to state 35
    expr        go to state 36
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 9

    7 stmt: TOKEN_RETURN . expr TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 35
    expr        go to state 37
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 10

   81 literal: TOKEN_TRUE .

    $default  reduce using rule 81 (literal)


State 11

   43 id: TOKEN_IDENTIFIER .
   74 factor: TOKEN_IDENTIFIER . TOKEN_L_PAREN arg_list TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 38

    $default  reduce using rule 43 (id)


State 12

   72 factor: TOKEN_L_PAREN . expr TOKEN_R_PAREN

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 35
    expr        go to state 39
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 13

   11 stmt: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    stmt_list   go to state 40
    stmt        go to state 18
    decl        go to state 19
    id          go to state 20
    expr        go to state 21
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 14

   66 expr_unary: TOKEN_NEG . expr_unary

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 41
    expr_unary  go to state 42
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 15

   67 expr_unary: TOKEN_NOT . expr_unary

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 41
    expr_unary  go to state 43
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 16

    0 $accept: program . $end

    $end  shift, and go to state 44


State 17

    1 program: stmt_list . TOKEN_EOF

    TOKEN_EOF  shift, and go to state 45


State 18

    2 stmt_list: stmt . stmt_list
    3          | stmt .

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 3 (stmt_list)

    stmt_list   go to state 46
    stmt        go to state 18
    decl        go to state 19
    id          go to state 20
    expr        go to state 21
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 19

    4 stmt: decl .

    $default  reduce using rule 4 (stmt)


State 20

   19 decl: id . TOKEN_COLON type TOKEN_SEMICOLON
   20     | id . TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   21     | id . TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace TOKEN_R_BRACE TOKEN_SEMICOLON
   22     | id . TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE
   44 expr: id . TOKEN_ASSIGN expr
   76 factor: id .

    TOKEN_ASSIGN  shift, and go to state 47
    TOKEN_COLON   shift, and go to state 48

    $default  reduce using rule 76 (factor)


State 21

    5 stmt: expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 49


State 22

   45 expr: expr_or .

    $default  reduce using rule 45 (expr)


State 23

   46 expr_or: expr_and . TOKEN_OR expr_or
   47        | expr_and .

    TOKEN_OR  shift, and go to state 50

    $default  reduce using rule 47 (expr_or)


State 24

   48 expr_and: expr_comp . TOKEN_AND expr_and
   49         | expr_comp .

    TOKEN_AND  shift, and go to state 51

    $default  reduce using rule 49 (expr_and)


State 25

   50 expr_comp: expr_add . TOKEN_EQUAL expr_comp
   51          | expr_add . TOKEN_LESS expr_comp
   52          | expr_add . TOKEN_NEQUAL expr_comp
   53          | expr_add . TOKEN_LE expr_comp
   54          | expr_add . TOKEN_GE expr_comp
   55          | expr_add . TOKEN_GREATER expr_comp
   56          | expr_add .

    TOKEN_LESS     shift, and go to state 52
    TOKEN_LE       shift, and go to state 53
    TOKEN_GE       shift, and go to state 54
    TOKEN_GREATER  shift, and go to state 55
    TOKEN_EQUAL    shift, and go to state 56
    TOKEN_NEQUAL   shift, and go to state 57

    $default  reduce using rule 56 (expr_comp)


State 26

   57 expr_add: expr_mul . TOKEN_ADD expr_add
   58         | expr_mul . TOKEN_SUB expr_add
   59         | expr_mul .

    TOKEN_ADD  shift, and go to state 58
    TOKEN_SUB  shift, and go to state 59

    $default  reduce using rule 59 (expr_add)


State 27

   60 expr_mul: expr_exp . TOKEN_MUL expr_mul
   61         | expr_exp . TOKEN_DIV expr_mul
   62         | expr_exp . TOKEN_MOD expr_mul
   63         | expr_exp .

    TOKEN_MUL  shift, and go to state 60
    TOKEN_DIV  shift, and go to state 61
    TOKEN_MOD  shift, and go to state 62

    $default  reduce using rule 63 (expr_mul)


State 28

   64 expr_exp: expr_unary . TOKEN_EXP expr_exp
   65         | expr_unary .

    TOKEN_EXP  shift, and go to state 63

    $default  reduce using rule 65 (expr_exp)


State 29

   68 expr_unary: exp_post .

    $default  reduce using rule 68 (expr_unary)


State 30

   69 exp_post: factor . TOKEN_POSTINC
   70         | factor . TOKEN_POSTDEC
   71         | factor .
   73 factor: factor . TOKEN_L_BRACKET expr TOKEN_R_BRACKET

    TOKEN_L_BRACKET  shift, and go to state 64
    TOKEN_POSTINC    shift, and go to state 65
    TOKEN_POSTDEC    shift, and go to state 66

    $default  reduce using rule 71 (exp_post)


State 31

   75 factor: literal .

    $default  reduce using rule 75 (factor)


State 32

    8 stmt: TOKEN_FOR TOKEN_L_PAREN . for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 33 (for_expr)

    for_expr    go to state 67
    id          go to state 35
    expr        go to state 68
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 33

    9 stmt: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN stmt
   10     | TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 35
    expr        go to state 69
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 34

    6 stmt: TOKEN_PRINT print_list . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 70


State 35

   44 expr: id . TOKEN_ASSIGN expr
   76 factor: id .

    TOKEN_ASSIGN  shift, and go to state 47

    $default  reduce using rule 76 (factor)


State 36

   29 print_list: expr . TOKEN_COMMA print_list
   30           | expr .

    TOKEN_COMMA  shift, and go to state 71

    $default  reduce using rule 30 (print_list)


State 37

    7 stmt: TOKEN_RETURN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 72


State 38

   74 factor: TOKEN_IDENTIFIER TOKEN_L_PAREN . arg_list TOKEN_R_PAREN

    TOKEN_IDENTIFIER  shift, and go to state 73

    arg_list  go to state 74
    arg       go to state 75
    id        go to state 76


State 39

   72 factor: TOKEN_L_PAREN expr . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 77


State 40

   11 stmt: TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 78


State 41

   76 factor: id .

    $default  reduce using rule 76 (factor)


State 42

   66 expr_unary: TOKEN_NEG expr_unary .

    $default  reduce using rule 66 (expr_unary)


State 43

   67 expr_unary: TOKEN_NOT expr_unary .

    $default  reduce using rule 67 (expr_unary)


State 44

    0 $accept: program $end .

    $default  accept


State 45

    1 program: stmt_list TOKEN_EOF .

    $default  reduce using rule 1 (program)


State 46

    2 stmt_list: stmt stmt_list .

    $default  reduce using rule 2 (stmt_list)


State 47

   44 expr: id TOKEN_ASSIGN . expr

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 35
    expr        go to state 79
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 48

   19 decl: id TOKEN_COLON . type TOKEN_SEMICOLON
   20     | id TOKEN_COLON . type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   21     | id TOKEN_COLON . type TOKEN_ASSIGN TOKEN_L_BRACE brace TOKEN_R_BRACE TOKEN_SEMICOLON
   22     | id TOKEN_COLON . type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

    TOKEN_ARRAY      shift, and go to state 80
    TOKEN_BOOLEAN    shift, and go to state 81
    TOKEN_CHARACTER  shift, and go to state 82
    TOKEN_FLOAT      shift, and go to state 83
    TOKEN_FUNCTION   shift, and go to state 84
    TOKEN_INTEGER    shift, and go to state 85
    TOKEN_STRING     shift, and go to state 86
    TOKEN_VOID       shift, and go to state 87

    type  go to state 88


State 49

    5 stmt: expr TOKEN_SEMICOLON .

    $default  reduce using rule 5 (stmt)


State 50

   46 expr_or: expr_and TOKEN_OR . expr_or

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 41
    expr_or     go to state 89
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 51

   48 expr_and: expr_comp TOKEN_AND . expr_and

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 41
    expr_and    go to state 90
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 52

   51 expr_comp: expr_add TOKEN_LESS . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 41
    expr_comp   go to state 91
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 53

   53 expr_comp: expr_add TOKEN_LE . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 41
    expr_comp   go to state 92
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 54

   54 expr_comp: expr_add TOKEN_GE . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 41
    expr_comp   go to state 93
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 55

   55 expr_comp: expr_add TOKEN_GREATER . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 41
    expr_comp   go to state 94
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 56

   50 expr_comp: expr_add TOKEN_EQUAL . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 41
    expr_comp   go to state 95
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 57

   52 expr_comp: expr_add TOKEN_NEQUAL . expr_comp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 41
    expr_comp   go to state 96
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 58

   57 expr_add: expr_mul TOKEN_ADD . expr_add

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 41
    expr_add    go to state 97
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 59

   58 expr_add: expr_mul TOKEN_SUB . expr_add

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 41
    expr_add    go to state 98
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 60

   60 expr_mul: expr_exp TOKEN_MUL . expr_mul

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 41
    expr_mul    go to state 99
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 61

   61 expr_mul: expr_exp TOKEN_DIV . expr_mul

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 41
    expr_mul    go to state 100
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 62

   62 expr_mul: expr_exp TOKEN_MOD . expr_mul

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 41
    expr_mul    go to state 101
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 63

   64 expr_exp: expr_unary TOKEN_EXP . expr_exp

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 41
    expr_exp    go to state 102
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 64

   73 factor: factor TOKEN_L_BRACKET . expr TOKEN_R_BRACKET

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 35
    expr        go to state 103
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 65

   69 exp_post: factor TOKEN_POSTINC .

    $default  reduce using rule 69 (exp_post)


State 66

   70 exp_post: factor TOKEN_POSTDEC .

    $default  reduce using rule 70 (exp_post)


State 67

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr . TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_SEMICOLON  shift, and go to state 104


State 68

   32 for_expr: expr .

    $default  reduce using rule 32 (for_expr)


State 69

    9 stmt: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN stmt
   10     | TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN if_nest TOKEN_ELSE stmt

    TOKEN_R_PAREN  shift, and go to state 105


State 70

    6 stmt: TOKEN_PRINT print_list TOKEN_SEMICOLON .

    $default  reduce using rule 6 (stmt)


State 71

   29 print_list: expr TOKEN_COMMA . print_list

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 31 (print_list)

    print_list  go to state 106
    id          go to state 35
    expr        go to state 36
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 72

    7 stmt: TOKEN_RETURN expr TOKEN_SEMICOLON .

    $default  reduce using rule 7 (stmt)


State 73

   43 id: TOKEN_IDENTIFIER .

    $default  reduce using rule 43 (id)


State 74

   74 factor: TOKEN_IDENTIFIER TOKEN_L_PAREN arg_list . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 107


State 75

   26 arg_list: arg . TOKEN_COMMA arg_list
   27         | arg .

    TOKEN_COMMA  shift, and go to state 108

    $default  reduce using rule 27 (arg_list)


State 76

   28 arg: id . TOKEN_COLON type

    TOKEN_COLON  shift, and go to state 109


State 77

   72 factor: TOKEN_L_PAREN expr TOKEN_R_PAREN .

    $default  reduce using rule 72 (factor)


State 78

   11 stmt: TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .

    $default  reduce using rule 11 (stmt)


State 79

   44 expr: id TOKEN_ASSIGN expr .

    $default  reduce using rule 44 (expr)


State 80

   40 type: TOKEN_ARRAY . TOKEN_L_BRACKET TOKEN_R_BRACKET type
   41     | TOKEN_ARRAY . TOKEN_L_BRACKET expr TOKEN_R_BRACKET type

    TOKEN_L_BRACKET  shift, and go to state 110


State 81

   36 type: TOKEN_BOOLEAN .

    $default  reduce using rule 36 (type)


State 82

   37 type: TOKEN_CHARACTER .

    $default  reduce using rule 37 (type)


State 83

   35 type: TOKEN_FLOAT .

    $default  reduce using rule 35 (type)


State 84

   42 type: TOKEN_FUNCTION . type TOKEN_L_PAREN arg_list TOKEN_R_PAREN

    TOKEN_ARRAY      shift, and go to state 80
    TOKEN_BOOLEAN    shift, and go to state 81
    TOKEN_CHARACTER  shift, and go to state 82
    TOKEN_FLOAT      shift, and go to state 83
    TOKEN_FUNCTION   shift, and go to state 84
    TOKEN_INTEGER    shift, and go to state 85
    TOKEN_STRING     shift, and go to state 86
    TOKEN_VOID       shift, and go to state 87

    type  go to state 111


State 85

   34 type: TOKEN_INTEGER .

    $default  reduce using rule 34 (type)


State 86

   38 type: TOKEN_STRING .

    $default  reduce using rule 38 (type)


State 87

   39 type: TOKEN_VOID .

    $default  reduce using rule 39 (type)


State 88

   19 decl: id TOKEN_COLON type . TOKEN_SEMICOLON
   20     | id TOKEN_COLON type . TOKEN_ASSIGN expr TOKEN_SEMICOLON
   21     | id TOKEN_COLON type . TOKEN_ASSIGN TOKEN_L_BRACE brace TOKEN_R_BRACE TOKEN_SEMICOLON
   22     | id TOKEN_COLON type . TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

    TOKEN_ASSIGN     shift, and go to state 112
    TOKEN_SEMICOLON  shift, and go to state 113


State 89

   46 expr_or: expr_and TOKEN_OR expr_or .

    $default  reduce using rule 46 (expr_or)


State 90

   48 expr_and: expr_comp TOKEN_AND expr_and .

    $default  reduce using rule 48 (expr_and)


State 91

   51 expr_comp: expr_add TOKEN_LESS expr_comp .

    $default  reduce using rule 51 (expr_comp)


State 92

   53 expr_comp: expr_add TOKEN_LE expr_comp .

    $default  reduce using rule 53 (expr_comp)


State 93

   54 expr_comp: expr_add TOKEN_GE expr_comp .

    $default  reduce using rule 54 (expr_comp)


State 94

   55 expr_comp: expr_add TOKEN_GREATER expr_comp .

    $default  reduce using rule 55 (expr_comp)


State 95

   50 expr_comp: expr_add TOKEN_EQUAL expr_comp .

    $default  reduce using rule 50 (expr_comp)


State 96

   52 expr_comp: expr_add TOKEN_NEQUAL expr_comp .

    $default  reduce using rule 52 (expr_comp)


State 97

   57 expr_add: expr_mul TOKEN_ADD expr_add .

    $default  reduce using rule 57 (expr_add)


State 98

   58 expr_add: expr_mul TOKEN_SUB expr_add .

    $default  reduce using rule 58 (expr_add)


State 99

   60 expr_mul: expr_exp TOKEN_MUL expr_mul .

    $default  reduce using rule 60 (expr_mul)


State 100

   61 expr_mul: expr_exp TOKEN_DIV expr_mul .

    $default  reduce using rule 61 (expr_mul)


State 101

   62 expr_mul: expr_exp TOKEN_MOD expr_mul .

    $default  reduce using rule 62 (expr_mul)


State 102

   64 expr_exp: expr_unary TOKEN_EXP expr_exp .

    $default  reduce using rule 64 (expr_exp)


State 103

   73 factor: factor TOKEN_L_BRACKET expr . TOKEN_R_BRACKET

    TOKEN_R_BRACKET  shift, and go to state 114


State 104

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON . for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 33 (for_expr)

    for_expr    go to state 115
    id          go to state 35
    expr        go to state 68
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 105

    9 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . stmt
   10     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . if_nest TOKEN_ELSE stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 116
    TOKEN_IF                 shift, and go to state 117
    TOKEN_PRINT              shift, and go to state 118
    TOKEN_RETURN             shift, and go to state 119
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 120
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    stmt        go to state 121
    if_nest     go to state 122
    decl        go to state 123
    id          go to state 20
    expr        go to state 124
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 106

   29 print_list: expr TOKEN_COMMA print_list .

    $default  reduce using rule 29 (print_list)


State 107

   74 factor: TOKEN_IDENTIFIER TOKEN_L_PAREN arg_list TOKEN_R_PAREN .

    $default  reduce using rule 74 (factor)


State 108

   26 arg_list: arg TOKEN_COMMA . arg_list

    TOKEN_IDENTIFIER  shift, and go to state 73

    arg_list  go to state 125
    arg       go to state 75
    id        go to state 76


State 109

   28 arg: id TOKEN_COLON . type

    TOKEN_ARRAY      shift, and go to state 80
    TOKEN_BOOLEAN    shift, and go to state 81
    TOKEN_CHARACTER  shift, and go to state 82
    TOKEN_FLOAT      shift, and go to state 83
    TOKEN_FUNCTION   shift, and go to state 84
    TOKEN_INTEGER    shift, and go to state 85
    TOKEN_STRING     shift, and go to state 86
    TOKEN_VOID       shift, and go to state 87

    type  go to state 126


State 110

   40 type: TOKEN_ARRAY TOKEN_L_BRACKET . TOKEN_R_BRACKET type
   41     | TOKEN_ARRAY TOKEN_L_BRACKET . expr TOKEN_R_BRACKET type

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_R_BRACKET          shift, and go to state 127
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 35
    expr        go to state 128
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 111

   42 type: TOKEN_FUNCTION type . TOKEN_L_PAREN arg_list TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 129


State 112

   20 decl: id TOKEN_COLON type TOKEN_ASSIGN . expr TOKEN_SEMICOLON
   21     | id TOKEN_COLON type TOKEN_ASSIGN . TOKEN_L_BRACE brace TOKEN_R_BRACE TOKEN_SEMICOLON
   22     | id TOKEN_COLON type TOKEN_ASSIGN . TOKEN_L_BRACE stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 130
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 35
    expr        go to state 131
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 113

   19 decl: id TOKEN_COLON type TOKEN_SEMICOLON .

    $default  reduce using rule 19 (decl)


State 114

   73 factor: factor TOKEN_L_BRACKET expr TOKEN_R_BRACKET .

    $default  reduce using rule 73 (factor)


State 115

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr . TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt

    TOKEN_SEMICOLON  shift, and go to state 132


State 116

    8 stmt: TOKEN_FOR . TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   18 if_nest: TOKEN_FOR . TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_L_PAREN  shift, and go to state 133


State 117

    9 stmt: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   10     | TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   12 if_nest: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest

    TOKEN_L_PAREN  shift, and go to state 134


State 118

    6 stmt: TOKEN_PRINT . print_list TOKEN_SEMICOLON
   16 if_nest: TOKEN_PRINT . print_list TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 31 (print_list)

    print_list  go to state 135
    id          go to state 35
    expr        go to state 36
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 119

    7 stmt: TOKEN_RETURN . expr TOKEN_SEMICOLON
   17 if_nest: TOKEN_RETURN . expr TOKEN_SEMICOLON

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 35
    expr        go to state 136
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 120

   11 stmt: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE
   15 if_nest: TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    stmt_list   go to state 137
    stmt        go to state 18
    decl        go to state 19
    id          go to state 20
    expr        go to state 21
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 121

    9 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN stmt .

    $default  reduce using rule 9 (stmt)


State 122

   10 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest . TOKEN_ELSE stmt

    TOKEN_ELSE  shift, and go to state 138


State 123

    4 stmt: decl .
   13 if_nest: decl . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 139

    $default  reduce using rule 4 (stmt)


State 124

    5 stmt: expr . TOKEN_SEMICOLON
   14 if_nest: expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 140


State 125

   26 arg_list: arg TOKEN_COMMA arg_list .

    $default  reduce using rule 26 (arg_list)


State 126

   28 arg: id TOKEN_COLON type .

    $default  reduce using rule 28 (arg)


State 127

   40 type: TOKEN_ARRAY TOKEN_L_BRACKET TOKEN_R_BRACKET . type

    TOKEN_ARRAY      shift, and go to state 80
    TOKEN_BOOLEAN    shift, and go to state 81
    TOKEN_CHARACTER  shift, and go to state 82
    TOKEN_FLOAT      shift, and go to state 83
    TOKEN_FUNCTION   shift, and go to state 84
    TOKEN_INTEGER    shift, and go to state 85
    TOKEN_STRING     shift, and go to state 86
    TOKEN_VOID       shift, and go to state 87

    type  go to state 141


State 128

   41 type: TOKEN_ARRAY TOKEN_L_BRACKET expr . TOKEN_R_BRACKET type

    TOKEN_R_BRACKET  shift, and go to state 142


State 129

   42 type: TOKEN_FUNCTION type TOKEN_L_PAREN . arg_list TOKEN_R_PAREN

    TOKEN_IDENTIFIER  shift, and go to state 73

    arg_list  go to state 143
    arg       go to state 75
    id        go to state 76


State 130

   21 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE . brace TOKEN_R_BRACE TOKEN_SEMICOLON
   22     | id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE . stmt_list TOKEN_R_BRACE

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 25 (brace)

    stmt_list   go to state 144
    stmt        go to state 18
    decl        go to state 19
    brace       go to state 145
    id          go to state 20
    expr        go to state 146
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 131

   20 decl: id TOKEN_COLON type TOKEN_ASSIGN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 147


State 132

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON . for_expr TOKEN_R_PAREN stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 33 (for_expr)

    for_expr    go to state 148
    id          go to state 35
    expr        go to state 68
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 133

    8 stmt: TOKEN_FOR TOKEN_L_PAREN . for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   18 if_nest: TOKEN_FOR TOKEN_L_PAREN . for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 33 (for_expr)

    for_expr    go to state 149
    id          go to state 35
    expr        go to state 68
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 134

    9 stmt: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN stmt
   10     | TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   12 if_nest: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    id          go to state 35
    expr        go to state 150
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 135

    6 stmt: TOKEN_PRINT print_list . TOKEN_SEMICOLON
   16 if_nest: TOKEN_PRINT print_list . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 151


State 136

    7 stmt: TOKEN_RETURN expr . TOKEN_SEMICOLON
   17 if_nest: TOKEN_RETURN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 152


State 137

   11 stmt: TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE
   15 if_nest: TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 153


State 138

   10 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE . stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    stmt        go to state 154
    decl        go to state 19
    id          go to state 20
    expr        go to state 21
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 139

   13 if_nest: decl TOKEN_SEMICOLON .

    $default  reduce using rule 13 (if_nest)


State 140

    5 stmt: expr TOKEN_SEMICOLON .
   14 if_nest: expr TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 14 (if_nest)
    $default    reduce using rule 5 (stmt)


State 141

   40 type: TOKEN_ARRAY TOKEN_L_BRACKET TOKEN_R_BRACKET type .

    $default  reduce using rule 40 (type)


State 142

   41 type: TOKEN_ARRAY TOKEN_L_BRACKET expr TOKEN_R_BRACKET . type

    TOKEN_ARRAY      shift, and go to state 80
    TOKEN_BOOLEAN    shift, and go to state 81
    TOKEN_CHARACTER  shift, and go to state 82
    TOKEN_FLOAT      shift, and go to state 83
    TOKEN_FUNCTION   shift, and go to state 84
    TOKEN_INTEGER    shift, and go to state 85
    TOKEN_STRING     shift, and go to state 86
    TOKEN_VOID       shift, and go to state 87

    type  go to state 155


State 143

   42 type: TOKEN_FUNCTION type TOKEN_L_PAREN arg_list . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 156


State 144

   22 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list . TOKEN_R_BRACE

    TOKEN_R_BRACE  shift, and go to state 157


State 145

   21 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace . TOKEN_R_BRACE TOKEN_SEMICOLON

    TOKEN_R_BRACE  shift, and go to state 158


State 146

    5 stmt: expr . TOKEN_SEMICOLON
   23 brace: expr . TOKEN_COMMA brace
   24      | expr .

    TOKEN_SEMICOLON  shift, and go to state 49
    TOKEN_COMMA      shift, and go to state 159

    $default  reduce using rule 24 (brace)


State 147

   20 decl: id TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON .

    $default  reduce using rule 20 (decl)


State 148

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr . TOKEN_R_PAREN stmt

    TOKEN_R_PAREN  shift, and go to state 160


State 149

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr . TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   18 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr . TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_SEMICOLON  shift, and go to state 161


State 150

    9 stmt: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN stmt
   10     | TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN if_nest TOKEN_ELSE stmt
   12 if_nest: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest

    TOKEN_R_PAREN  shift, and go to state 162


State 151

    6 stmt: TOKEN_PRINT print_list TOKEN_SEMICOLON .
   16 if_nest: TOKEN_PRINT print_list TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 16 (if_nest)
    $default    reduce using rule 6 (stmt)


State 152

    7 stmt: TOKEN_RETURN expr TOKEN_SEMICOLON .
   17 if_nest: TOKEN_RETURN expr TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 17 (if_nest)
    $default    reduce using rule 7 (stmt)


State 153

   11 stmt: TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .
   15 if_nest: TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .

    TOKEN_ELSE  reduce using rule 15 (if_nest)
    $default    reduce using rule 11 (stmt)


State 154

   10 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE stmt .

    $default  reduce using rule 10 (stmt)


State 155

   41 type: TOKEN_ARRAY TOKEN_L_BRACKET expr TOKEN_R_BRACKET type .

    $default  reduce using rule 41 (type)


State 156

   42 type: TOKEN_FUNCTION type TOKEN_L_PAREN arg_list TOKEN_R_PAREN .

    $default  reduce using rule 42 (type)


State 157

   22 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE stmt_list TOKEN_R_BRACE .

    $default  reduce using rule 22 (decl)


State 158

   21 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace TOKEN_R_BRACE . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 163


State 159

   23 brace: expr TOKEN_COMMA . brace

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 25 (brace)

    brace       go to state 164
    id          go to state 35
    expr        go to state 165
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 160

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN . stmt

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 6
    TOKEN_IF                 shift, and go to state 7
    TOKEN_PRINT              shift, and go to state 8
    TOKEN_RETURN             shift, and go to state 9
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 13
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    stmt        go to state 166
    decl        go to state 19
    id          go to state 20
    expr        go to state 21
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 161

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON . for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   18 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON . for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 33 (for_expr)

    for_expr    go to state 167
    id          go to state 35
    expr        go to state 68
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 162

    9 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . stmt
   10     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . if_nest TOKEN_ELSE stmt
   12 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . if_nest TOKEN_ELSE if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 116
    TOKEN_IF                 shift, and go to state 117
    TOKEN_PRINT              shift, and go to state 118
    TOKEN_RETURN             shift, and go to state 119
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 120
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    stmt        go to state 121
    if_nest     go to state 168
    decl        go to state 123
    id          go to state 20
    expr        go to state 124
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 163

   21 decl: id TOKEN_COLON type TOKEN_ASSIGN TOKEN_L_BRACE brace TOKEN_R_BRACE TOKEN_SEMICOLON .

    $default  reduce using rule 21 (decl)


State 164

   23 brace: expr TOKEN_COMMA brace .

    $default  reduce using rule 23 (brace)


State 165

   23 brace: expr . TOKEN_COMMA brace
   24      | expr .

    TOKEN_COMMA  shift, and go to state 159

    $default  reduce using rule 24 (brace)


State 166

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt .

    $default  reduce using rule 8 (stmt)


State 167

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr . TOKEN_SEMICOLON for_expr TOKEN_R_PAREN stmt
   18 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr . TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest

    TOKEN_SEMICOLON  shift, and go to state 169


State 168

   10 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest . TOKEN_ELSE stmt
   12 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest . TOKEN_ELSE if_nest

    TOKEN_ELSE  shift, and go to state 170


State 169

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON . for_expr TOKEN_R_PAREN stmt
   18 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON . for_expr TOKEN_R_PAREN if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    $default  reduce using rule 33 (for_expr)

    for_expr    go to state 171
    id          go to state 35
    expr        go to state 68
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 170

   10 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE . stmt
   12 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE . if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 116
    TOKEN_IF                 shift, and go to state 117
    TOKEN_PRINT              shift, and go to state 118
    TOKEN_RETURN             shift, and go to state 119
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 120
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    stmt        go to state 154
    if_nest     go to state 172
    decl        go to state 123
    id          go to state 20
    expr        go to state 124
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 171

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr . TOKEN_R_PAREN stmt
   18 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr . TOKEN_R_PAREN if_nest

    TOKEN_R_PAREN  shift, and go to state 173


State 172

   12 if_nest: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN if_nest TOKEN_ELSE if_nest .

    $default  reduce using rule 12 (if_nest)


State 173

    8 stmt: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN . stmt
   18 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN . if_nest

    TOKEN_INTEGER_LITERAL    shift, and go to state 1
    TOKEN_CHARACTER_LITERAL  shift, and go to state 2
    TOKEN_STRING_LITERAL     shift, and go to state 3
    TOKEN_FLOAT_LITERAL      shift, and go to state 4
    TOKEN_FALSE              shift, and go to state 5
    TOKEN_FOR                shift, and go to state 116
    TOKEN_IF                 shift, and go to state 117
    TOKEN_PRINT              shift, and go to state 118
    TOKEN_RETURN             shift, and go to state 119
    TOKEN_TRUE               shift, and go to state 10
    TOKEN_IDENTIFIER         shift, and go to state 11
    TOKEN_L_PAREN            shift, and go to state 12
    TOKEN_L_BRACE            shift, and go to state 120
    TOKEN_NEG                shift, and go to state 14
    TOKEN_NOT                shift, and go to state 15

    stmt        go to state 166
    if_nest     go to state 174
    decl        go to state 123
    id          go to state 20
    expr        go to state 124
    expr_or     go to state 22
    expr_and    go to state 23
    expr_comp   go to state 24
    expr_add    go to state 25
    expr_mul    go to state 26
    expr_exp    go to state 27
    expr_unary  go to state 28
    exp_post    go to state 29
    factor      go to state 30
    literal     go to state 31


State 174

   18 if_nest: TOKEN_FOR TOKEN_L_PAREN for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_R_PAREN if_nest .

    $default  reduce using rule 18 (if_nest)
